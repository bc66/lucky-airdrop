{"version":3,"sources":["webpack:///./node_modules/_core-js@2.6.5@core-js/library/fn/array/is-array.js","webpack:///./node_modules/_core-js@2.6.5@core-js/library/modules/core.get-iterator-method.js","webpack:///./node_modules/_core-js@2.6.5@core-js/library/modules/_user-agent.js","webpack:///./node_modules/_core-js@2.6.5@core-js/library/modules/_new-promise-capability.js","webpack:///./node_modules/_core-js@2.6.5@core-js/library/modules/_iter-detect.js","webpack:///./node_modules/_core-js@2.6.5@core-js/library/fn/get-iterator.js","webpack:///./node_modules/_core-js@2.6.5@core-js/library/modules/_object-gpo.js","webpack:///./node_modules/_core-js@2.6.5@core-js/library/modules/es7.promise.finally.js","webpack:///./node_modules/_thor-devkit@0.10.1@thor-devkit/es6/rlp.js","webpack:///./node_modules/_core-js@2.6.5@core-js/library/modules/es7.promise.try.js","webpack:///./node_modules/_@babel_runtime-corejs2@7.4.2@@babel/runtime-corejs2/core-js/get-iterator.js","webpack:///./node_modules/_core-js@2.6.5@core-js/library/modules/_iter-step.js","webpack:///./node_modules/_core-js@2.6.5@core-js/library/modules/_for-of.js","webpack:///./node_modules/_core-js@2.6.5@core-js/library/modules/_species-constructor.js","webpack:///src/components/ClaimCard.vue","webpack:///./node_modules/_core-js@2.6.5@core-js/library/fn/promise.js","webpack:///./node_modules/_core-js@2.6.5@core-js/library/modules/_is-array-iter.js","webpack:///./node_modules/_core-js@2.6.5@core-js/library/modules/_microtask.js","webpack:///./node_modules/_core-js@2.6.5@core-js/library/modules/_string-at.js","webpack:///./node_modules/_core-js@2.6.5@core-js/modules/es6.function.name.js","webpack:///./node_modules/_core-js@2.6.5@core-js/library/modules/_invoke.js","webpack:///./node_modules/_core-js@2.6.5@core-js/library/modules/_classof.js","webpack:///./node_modules/_core-js@2.6.5@core-js/library/modules/_task.js","webpack:///./node_modules/_core-js@2.6.5@core-js/library/modules/_iter-call.js","webpack:///./src/views/Claim.vue?9538","webpack:///./src/views/Claim.vue?7496","webpack:///./src/views/Claim.vue","webpack:///./node_modules/_core-js@2.6.5@core-js/library/modules/es6.string.iterator.js","webpack:///./node_modules/_core-js@2.6.5@core-js/library/modules/_create-property.js","webpack:///./node_modules/_core-js@2.6.5@core-js/library/modules/_iter-create.js","webpack:///./node_modules/_core-js@2.6.5@core-js/library/modules/es6.promise.js","webpack:///./node_modules/_core-js@2.6.5@core-js/modules/web.dom.iterable.js","webpack:///./node_modules/_core-js@2.6.5@core-js/library/modules/_redefine-all.js","webpack:///./node_modules/_core-js@2.6.5@core-js/library/modules/_iter-define.js","webpack:///./node_modules/_core-js@2.6.5@core-js/library/modules/es6.array.iterator.js","webpack:///./node_modules/_core-js@2.6.5@core-js/library/modules/es6.array.from.js","webpack:///./node_modules/_core-js@2.6.5@core-js/library/modules/_iterators.js","webpack:///./node_modules/_core-js@2.6.5@core-js/library/fn/array/from.js","webpack:///./node_modules/_core-js@2.6.5@core-js/library/modules/core.is-iterable.js","webpack:///./node_modules/_core-js@2.6.5@core-js/library/modules/web.dom.iterable.js","webpack:///./node_modules/_core-js@2.6.5@core-js/library/modules/_add-to-unscopables.js","webpack:///./src/components/AfterClaimCard.vue?2d83","webpack:///src/components/AfterClaimCard.vue","webpack:///./src/components/AfterClaimCard.vue?4691","webpack:///./src/components/AfterClaimCard.vue","webpack:///./node_modules/_@babel_runtime-corejs2@7.4.2@@babel/runtime-corejs2/helpers/esm/arrayWithHoles.js","webpack:///./node_modules/_@babel_runtime-corejs2@7.4.2@@babel/runtime-corejs2/helpers/esm/iterableToArrayLimit.js","webpack:///./node_modules/_@babel_runtime-corejs2@7.4.2@@babel/runtime-corejs2/helpers/esm/nonIterableRest.js","webpack:///./node_modules/_@babel_runtime-corejs2@7.4.2@@babel/runtime-corejs2/helpers/esm/slicedToArray.js","webpack:///./node_modules/_@babel_runtime-corejs2@7.4.2@@babel/runtime-corejs2/core-js/promise.js","webpack:///./node_modules/_@babel_runtime-corejs2@7.4.2@@babel/runtime-corejs2/core-js/is-iterable.js","webpack:///./node_modules/_thor-devkit@0.10.1@thor-devkit/es6/transaction.js","webpack:///./node_modules/_core-js@2.6.5@core-js/library/fn/is-iterable.js","webpack:///./node_modules/_core-js@2.6.5@core-js/library/modules/es6.array.is-array.js","webpack:///./node_modules/_@babel_runtime-corejs2@7.4.2@@babel/runtime-corejs2/core-js/array/from.js","webpack:///./node_modules/_core-js@2.6.5@core-js/modules/es6.string.iterator.js","webpack:///./node_modules/_bignumber.js@7.2.1@bignumber.js/bignumber.js","webpack:///./src/components/ClaimCard.vue?db3f","webpack:///./src/components/ClaimCard.vue?a0d6","webpack:///./src/components/ClaimCard.vue","webpack:///./node_modules/_rlp@2.2.3@rlp/dist/index.js","webpack:///./node_modules/_@babel_runtime-corejs2@7.4.2@@babel/runtime-corejs2/helpers/esm/arrayWithoutHoles.js","webpack:///./node_modules/_@babel_runtime-corejs2@7.4.2@@babel/runtime-corejs2/helpers/esm/iterableToArray.js","webpack:///./node_modules/_@babel_runtime-corejs2@7.4.2@@babel/runtime-corejs2/helpers/esm/nonIterableSpread.js","webpack:///./node_modules/_@babel_runtime-corejs2@7.4.2@@babel/runtime-corejs2/helpers/esm/toConsumableArray.js","webpack:///./node_modules/_core-js@2.6.5@core-js/modules/_string-at.js","webpack:///./node_modules/_core-js@2.6.5@core-js/library/modules/core.get-iterator.js","webpack:///./node_modules/_core-js@2.6.5@core-js/library/modules/_an-instance.js","webpack:///./node_modules/_core-js@2.6.5@core-js/library/modules/_perform.js","webpack:///./node_modules/_core-js@2.6.5@core-js/library/modules/_promise-resolve.js","webpack:///./node_modules/_@babel_runtime-corejs2@7.4.2@@babel/runtime-corejs2/core-js/array/is-array.js","webpack:///./src/views/Claim.vue?40d6","webpack:///./node_modules/_core-js@2.6.5@core-js/library/modules/_set-species.js","webpack:///src/views/Claim.vue"],"names":["__webpack_require__","module","exports","Array","isArray","classof","ITERATOR","Iterators","getIteratorMethod","it","undefined","global","navigator","userAgent","aFunction","PromiseCapability","C","resolve","reject","this","promise","$$resolve","$$reject","TypeError","f","SAFE_CLOSING","riter","from","e","exec","skipClosing","safe","arr","iter","next","done","has","toObject","IE_PROTO","ObjectProto","Object","prototype","getPrototypeOf","O","constructor","$export","core","speciesConstructor","promiseResolve","P","R","finally","onFinally","Promise","isFunction","then","x","Buffer","d","__webpack_exports__","RLP","bignumber_js__WEBPACK_IMPORTED_MODULE_0__","bignumber_js__WEBPACK_IMPORTED_MODULE_0___default","n","rlp__WEBPACK_IMPORTED_MODULE_1__","[object Object]","profile","data","packed","pack","buf","unpack","obj","ctx","name","kind","ScalarKind","encode","map","k","assert","item","part","i","RawKind","isBuffer","buffer","decode","parts","length","reduce","o","p","cond","msg","RLPError","isHexString","str","test","isDecString","NumericKind","maxBytes","super","isHex","isDec","Number","isSafeInteger","bn","a","isZero","alloc","hex","toString","num","toNumber","BlobKind","slice","FixedBlobKind","bytes","encoder","decoder","NullableFixedBlobKind","CompactFixedBlobKind","nzIndex","findIndex","v","zeros","repeat","Error","newPromiseCapability","perform","S","try","callbackfn","promiseCapability","result","value","call","isArrayIter","anObject","toLength","getIterFn","BREAK","RETURN","iterable","entries","fn","that","step","iterator","iterFn","index","SPECIES","D","GAS_PER_CLAIMER","ipfs","ipfs_mini__WEBPACK_IMPORTED_MODULE_3___default","host","port","protocol","components","AfterClaimCard","_components_AfterClaimCard_vue__WEBPACK_IMPORTED_MODULE_4__","props","visitor","String","tokenName","envelope","claimed","isClaiming","counter","cTicker","mounted","_this","messageLink","cat","message","destroyed","clearInterval","watch","envelope.messageLink","val","oldVal","_this2","methods","claim","_this3","spk","atob","$route","params","code","claimABI","constant","inputs","type","outputs","payable","stateMutability","text","thor_devkit__WEBPACK_IMPORTED_MODULE_5__","encodeParameters","id","signature","thor_devkit__WEBPACK_IMPORTED_MODULE_6__","secp256k1","sign","keccak256","Function","setInterval","refreshCounter","fetch","$config","providerUrl","resp","json","block","blockRef","body","chainTag","expiration","clauses","to","contract","gasPriceCoef","gas","dependsOn","nonce","Date","tx","thor_devkit__WEBPACK_IMPORTED_MODULE_7__","signingHash","blake2b256","raw","_Users_channer_Projects_workplace_lucky_airdrop_node_modules_babel_runtime_corejs2_core_js_json_stringify__WEBPACK_IMPORTED_MODULE_0___default","headers","content-type","method","response","getReceipt","err","receipt","reverted","console","error","concat","events","claimAmount","$set","totalClaimers","bignumber_js__WEBPACK_IMPORTED_MODULE_2___default","div","Math","pow","toFixed","localStorage","setItem","network","catch","txID","cb","url","_getReceipt","log","setTimeout","ArrayProto","macrotask","set","Observer","MutationObserver","WebKitMutationObserver","process","isNode","head","last","notify","flush","parent","domain","exit","enter","nextTick","standalone","toggle","node","document","createTextNode","observe","characterData","task","toInteger","defined","TO_STRING","pos","b","s","l","charCodeAt","charAt","dP","FProto","nameRE","NAME","configurable","get","match","args","un","apply","cof","TAG","ARG","arguments","tryGet","key","T","B","callee","defer","channel","invoke","html","cel","setTask","setImmediate","clearTask","clearImmediate","MessageChannel","Dispatch","queue","ONREADYSTATECHANGE","run","hasOwnProperty","listener","event","push","now","port2","port1","onmessage","postMessage","addEventListener","importScripts","appendChild","removeChild","clear","ret","render","_vm","_h","$createElement","_c","_self","staticClass","attrs","_v","_s","$t","href","accountLink","target","on","click","$event","setLocale","version","y","viewBox","xml:space","cx","cy","r","_m","directives","rawName","expression","class","has-error","isAddress","placeholder","domProps","input","composing","address","disabled","handleContinue","_e","shareLink","role","status","staticRenderFns","views_Claimvue_type_script_lang_js_","Claimvue_type_script_lang_js_","component","componentNormalizer","$at","iterated","_t","_i","point","$defineProperty","createDesc","object","create","descriptor","setToStringTag","IteratorPrototype","Constructor","Internal","newGenericPromiseCapability","OwnPromiseCapability","Wrapper","LIBRARY","isObject","anInstance","forOf","microtask","newPromiseCapabilityModule","PROMISE","versions","v8","$Promise","empty","USE_NATIVE","FakePromise","PromiseRejectionEvent","indexOf","isThenable","isReject","_n","chain","ok","reaction","exited","handler","fail","onHandleUnhandled","onUnhandled","unhandled","isUnhandled","emit","onunhandledrejection","reason","_a","onrejectionhandled","$reject","_d","_w","$resolve","wrapper","executor","onFulfilled","onRejected","G","W","F","capability","all","values","remaining","$index","alreadyCalled","race","$iterators","getKeys","redefine","hide","wks","TO_STRING_TAG","ArrayValues","DOMIterables","CSSRuleList","CSSStyleDeclaration","CSSValueList","ClientRectList","DOMRectList","DOMStringList","DOMTokenList","DataTransferItemList","FileList","HTMLAllCollection","HTMLCollection","HTMLFormElement","HTMLSelectElement","MediaList","MimeTypeArray","NamedNodeMap","NodeList","PaintRequestList","Plugin","PluginArray","SVGLengthList","SVGNumberList","SVGPathSegList","SVGPointList","SVGStringList","SVGTransformList","SourceBufferList","StyleSheetList","TextTrackCueList","TextTrackList","TouchList","collections","explicit","Collection","proto","src","$iterCreate","BUGGY","keys","FF_ITERATOR","KEYS","VALUES","returnThis","Base","DEFAULT","IS_SET","FORCED","getMethod","DEF_VALUES","VALUES_BUG","$native","$default","$entries","$anyNative","addToUnscopables","toIObject","_k","Arguments","createProperty","arrayLike","aLen","mapfn","mapping","isIterable","split","duration","datetime","title","_f","initialBalance","nickname","src_default","AfterClaimCardvue_type_script_lang_js_","components_AfterClaimCardvue_type_script_lang_js_","_arrayWithHoles","is_array_default","_iterableToArrayLimit","_arr","get_iterator_default","_nonIterableRest","_slicedToArray","Transaction","_cry__WEBPACK_IMPORTED_MODULE_0__","_cry__WEBPACK_IMPORTED_MODULE_1__","_cry__WEBPACK_IMPORTED_MODULE_2__","_rlp__WEBPACK_IMPORTED_MODULE_3__","unsignedTxRLP","txRLP","sig","assign","reserved","pubKey","recover","signer","intrinsicGas","sigHex","txGas","clauseGas","clauseGasContractCreation","sum","c","dataGas","zgas","nzgas","substr","__WEBPACK_AMD_DEFINE_RESULT__","globalObject","BigNumber","isNumeric","mathceil","ceil","mathfloor","floor","bignumberError","tooManyDigits","BASE","LOG_BASE","MAX_SAFE_INTEGER","POWS_TEN","SQRT_BASE","MAX","clone","configObject","convertBase","parseNumeric","valueOf","ONE","DECIMAL_PLACES","ROUNDING_MODE","TO_EXP_NEG","TO_EXP_POS","MIN_EXP","MAX_EXP","CRYPTO","MODULO_MODE","POW_PRECISION","FORMAT","decimalSeparator","groupSeparator","groupSize","secondaryGroupSize","fractionGroupSeparator","fractionGroupSize","ALPHABET","alphabet","caseChanged","isNum","len","replace","search","substring","intCheck","round","DEBUG","toUpperCase","toLowerCase","format","rm","c0","ne","coeffToString","toExponential","toFixedPoint","maxOrMin","m","normalise","j","pop","sd","ni","rd","xc","pows10","out","ROUND_UP","ROUND_DOWN","ROUND_CEIL","ROUND_FLOOR","ROUND_HALF_UP","ROUND_HALF_DOWN","ROUND_HALF_EVEN","ROUND_HALF_CEIL","ROUND_HALF_FLOOR","EUCLID","config","crypto","getRandomValues","randomBytes","EXPONENTIAL_AT","RANGE","isBigNumber","_isBigNumber","maximum","max","lt","minimum","min","gt","random","pow2_53","random53bitInt","dp","rand","Uint32Array","copy","splice","decimal","toBaseOut","baseIn","baseOut","arrL","reverse","callerIsToString","multiply","base","temp","xlo","xhi","carry","klo","khi","compare","aL","bL","cmp","subtract","more","prod","prodL","q","qc","rem","remL","rem0","xi","xL","yc0","yL","yz","yc","NaN","bitFloor","basePrefix","dotAfter","dotBefore","isInfinityOrNaN","whitespaceOrPlus","isNaN","p1","p2","absoluteValue","abs","comparedTo","decimalPlaces","dividedBy","dividedToIntegerBy","idiv","exponentiatedBy","half","isModExp","nIsBig","nIsNeg","nIsOdd","isInteger","isOdd","mod","times","integerValue","isEqualTo","eq","isFinite","isGreaterThan","isGreaterThanOrEqualTo","gte","isLessThan","isLessThanOrEqualTo","lte","isNegative","isPositive","minus","t","xLTy","plus","xe","ye","modulo","multipliedBy","xcL","ycL","ylo","yhi","zc","sqrtBase","negated","precision","shiftedBy","squareRoot","sqrt","rep","toFormat","g1","g2","intPart","fractionPart","isNeg","intDigits","RegExp","toFraction","md","d0","d1","d2","exp","n0","n1","toPrecision","toJSON","z","zs","components_ClaimCardvue_type_script_lang_js_","ClaimCardvue_type_script_lang_js_","defineProperty","BN","output","encodeLength","inputBuf","toBuffer","safeParseInt","parseInt","offset","hexLength","intToHex","lLength","firstByte","stream","inputBuffer","decoded","_decode","remainder","getLength","llength","innerRemainder","totalLength","isHexPrefixed","stripHexPrefix","integer","padToEven","intToBuffer","Uint8Array","isBN","toArray","_arrayWithoutHoles","arr2","_iterableToArray","is_iterable_default","from_default","_nonIterableSpread","_toConsumableArray","getIterator","forbiddenField","_node_modules_mini_css_extract_plugin_0_5_0_mini_css_extract_plugin_dist_loader_js_ref_6_oneOf_1_0_node_modules_css_loader_1_0_1_css_loader_index_js_ref_6_oneOf_1_1_node_modules_vue_loader_15_7_0_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_3_0_0_postcss_loader_src_index_js_ref_6_oneOf_1_2_node_modules_cache_loader_2_0_1_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_15_7_0_vue_loader_lib_index_js_vue_loader_options_Claim_vue_vue_type_style_index_0_id_044f5224_scoped_true_lang_css___WEBPACK_IMPORTED_MODULE_0__","_node_modules_mini_css_extract_plugin_0_5_0_mini_css_extract_plugin_dist_loader_js_ref_6_oneOf_1_0_node_modules_css_loader_1_0_1_css_loader_index_js_ref_6_oneOf_1_1_node_modules_vue_loader_15_7_0_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_3_0_0_postcss_loader_src_index_js_ref_6_oneOf_1_2_node_modules_cache_loader_2_0_1_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_15_7_0_vue_loader_lib_index_js_vue_loader_options_Claim_vue_vue_type_style_index_0_id_044f5224_scoped_true_lang_css___WEBPACK_IMPORTED_MODULE_0___default","DESCRIPTORS","KEY","CertModal","_components_CertModal_vue__WEBPACK_IMPORTED_MODULE_12__","ShareCard","_components_ShareCard_vue__WEBPACK_IMPORTED_MODULE_16__","RedPacketInfo","_components_RedPacketInfo_vue__WEBPACK_IMPORTED_MODULE_13__","ClaimCard","_components_ClaimCard_vue__WEBPACK_IMPORTED_MODULE_14__","_components_AfterClaimCard_vue__WEBPACK_IMPORTED_MODULE_15__","window","location","isCreator","hasConnex","showInptModal","showCertModal","created","_this$$route$params","packet_id","getItem","_utils__WEBPACK_IMPORTED_MODULE_10__","connex","getRevealInfo","thor_devkit__WEBPACK_IMPORTED_MODULE_17__","derivePublicKey","addr","publicKeyToAddress","secretSigner","signingService","vendor","request","purpose","payload","content","setAccount","annex","getPacketInfo","setUserRole","lang","$i18n","locale","accountBaseUrl","creator","vm","getEnvelopeInfoABI","getClaimInfoABI","_Users_channer_Projects_workplace_lucky_airdrop_node_modules_babel_runtime_corejs2_core_js_promise__WEBPACK_IMPORTED_MODULE_6___default","callMethod","_ref","_ref2","_Users_channer_Projects_workplace_lucky_airdrop_node_modules_babel_runtime_corejs2_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_5__","info","claiminfo","ts","_Users_channer_Projects_workplace_lucky_airdrop_node_modules_babel_runtime_corejs2_core_js_parse_int__WEBPACK_IMPORTED_MODULE_4___default","bignumber_js__WEBPACK_IMPORTED_MODULE_11___default","getTokenNameByAddress","tokenAddress","_this4","getEnvelopeRevealABI","reveal","_this5","_Users_channer_Projects_workplace_lucky_airdrop_node_modules_babel_runtime_corejs2_core_js_object_keys__WEBPACK_IMPORTED_MODULE_3___default","tokens","forEach","_abi","_values","thor_devkit__WEBPACK_IMPORTED_MODULE_18__","_Users_channer_Projects_workplace_lucky_airdrop_node_modules_babel_runtime_corejs2_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_1__","caller","decodeParameters"],"mappings":"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","file":"js/claim.066a8b60.js","sourcesContent":["require('../../modules/es6.array.is-array');\nmodule.exports = require('../../modules/_core').Array.isArray;\n","var classof = require('./_classof');\nvar ITERATOR = require('./_wks')('iterator');\nvar Iterators = require('./_iterators');\nmodule.exports = require('./_core').getIteratorMethod = function (it) {\n  if (it != undefined) return it[ITERATOR]\n    || it['@@iterator']\n    || Iterators[classof(it)];\n};\n","var global = require('./_global');\nvar navigator = global.navigator;\n\nmodule.exports = navigator && navigator.userAgent || '';\n","'use strict';\n// 25.4.1.5 NewPromiseCapability(C)\nvar aFunction = require('./_a-function');\n\nfunction PromiseCapability(C) {\n  var resolve, reject;\n  this.promise = new C(function ($$resolve, $$reject) {\n    if (resolve !== undefined || reject !== undefined) throw TypeError('Bad Promise constructor');\n    resolve = $$resolve;\n    reject = $$reject;\n  });\n  this.resolve = aFunction(resolve);\n  this.reject = aFunction(reject);\n}\n\nmodule.exports.f = function (C) {\n  return new PromiseCapability(C);\n};\n","var ITERATOR = require('./_wks')('iterator');\nvar SAFE_CLOSING = false;\n\ntry {\n  var riter = [7][ITERATOR]();\n  riter['return'] = function () { SAFE_CLOSING = true; };\n  // eslint-disable-next-line no-throw-literal\n  Array.from(riter, function () { throw 2; });\n} catch (e) { /* empty */ }\n\nmodule.exports = function (exec, skipClosing) {\n  if (!skipClosing && !SAFE_CLOSING) return false;\n  var safe = false;\n  try {\n    var arr = [7];\n    var iter = arr[ITERATOR]();\n    iter.next = function () { return { done: safe = true }; };\n    arr[ITERATOR] = function () { return iter; };\n    exec(arr);\n  } catch (e) { /* empty */ }\n  return safe;\n};\n","require('../modules/web.dom.iterable');\nrequire('../modules/es6.string.iterator');\nmodule.exports = require('../modules/core.get-iterator');\n","// 19.1.2.9 / 15.2.3.2 Object.getPrototypeOf(O)\nvar has = require('./_has');\nvar toObject = require('./_to-object');\nvar IE_PROTO = require('./_shared-key')('IE_PROTO');\nvar ObjectProto = Object.prototype;\n\nmodule.exports = Object.getPrototypeOf || function (O) {\n  O = toObject(O);\n  if (has(O, IE_PROTO)) return O[IE_PROTO];\n  if (typeof O.constructor == 'function' && O instanceof O.constructor) {\n    return O.constructor.prototype;\n  } return O instanceof Object ? ObjectProto : null;\n};\n","// https://github.com/tc39/proposal-promise-finally\n'use strict';\nvar $export = require('./_export');\nvar core = require('./_core');\nvar global = require('./_global');\nvar speciesConstructor = require('./_species-constructor');\nvar promiseResolve = require('./_promise-resolve');\n\n$export($export.P + $export.R, 'Promise', { 'finally': function (onFinally) {\n  var C = speciesConstructor(this, core.Promise || global.Promise);\n  var isFunction = typeof onFinally == 'function';\n  return this.then(\n    isFunction ? function (x) {\n      return promiseResolve(C, onFinally()).then(function () { return x; });\n    } : onFinally,\n    isFunction ? function (e) {\n      return promiseResolve(C, onFinally()).then(function () { throw e; });\n    } : onFinally\n  );\n} });\n","import BigNumber from 'bignumber.js';\nimport * as rlp from 'rlp';\nexport class RLP {\n    constructor(profile) {\n        this.profile = profile;\n    }\n    /**\n     * encode data according to profile\n     * @param data the structured data to be encoded\n     */\n    encode(data) {\n        const packed = pack(data, this.profile, '');\n        return rlp.encode(packed);\n    }\n    /**\n     * decode buffer according to profile\n     * @param buf rlp encoded data\n     */\n    decode(buf) {\n        const packed = rlp.decode(buf);\n        return unpack(packed, this.profile, '');\n    }\n}\n(function (RLP) {\n    /** base class of scalar kind */\n    class ScalarKind {\n    }\n    RLP.ScalarKind = ScalarKind;\n    /** a noop scalar kind */\n    class RawKind extends ScalarKind {\n        data(data, ctx) {\n            return { encode() { return data; } };\n        }\n        buffer(buf, ctx) {\n            return { decode() { return buf; } };\n        }\n    }\n    RLP.RawKind = RawKind;\n    /** a scalar kind to presents number */\n    class NumericKind extends ScalarKind {\n        /**\n         * create a numeric kind\n         * @param maxBytes up limit of data in bytes\n         */\n        constructor(maxBytes) {\n            super();\n            this.maxBytes = maxBytes;\n        }\n        data(data, ctx) {\n            assert(typeof data === 'string' || typeof data === 'number', ctx, 'expected string or number');\n            if (typeof data === 'string') {\n                const isHex = isHexString(data);\n                const isDec = isDecString(data);\n                assert(isHex || isDec, ctx, 'expected non-negative integer in hex or dec string');\n                if (isHex) {\n                    assert(data.length > 2, ctx, 'expected valid hex string');\n                }\n            }\n            else {\n                assert(Number.isSafeInteger(data) && data >= 0, ctx, 'expected non-negative safe integer');\n            }\n            const bn = new BigNumber(data);\n            if (bn.isZero()) {\n                return {\n                    encode() {\n                        return Buffer.alloc(0);\n                    }\n                };\n            }\n            let hex = bn.toString(16);\n            if (hex.length % 2 !== 0) {\n                hex = '0' + hex;\n            }\n            assert(this.maxBytes ? hex.length <= this.maxBytes * 2 : true, ctx, `expected number in ${this.maxBytes} bytes`);\n            return {\n                encode() {\n                    return Buffer.from(hex, 'hex');\n                }\n            };\n        }\n        buffer(buf, ctx) {\n            assert(this.maxBytes ? buf.length <= this.maxBytes : true, ctx, `expected less than ${this.maxBytes} bytes`);\n            assert(buf.length === 0 || buf[0] !== 0, ctx, `expected canonical integer (no leading zero bytes)`);\n            return {\n                decode() {\n                    if (buf.length === 0) {\n                        return 0;\n                    }\n                    const bn = new BigNumber(buf.toString('hex'), 16);\n                    const num = bn.toNumber();\n                    return Number.isSafeInteger(num) ? num : '0x' + bn.toString(16);\n                }\n            };\n        }\n    }\n    RLP.NumericKind = NumericKind;\n    /** a scalar kind to present blob */\n    class BlobKind extends ScalarKind {\n        data(data, ctx) {\n            assert(isHexString(data), ctx, 'expected hex string');\n            assert(data.length % 2 === 0, ctx, 'expected even length hex');\n            return {\n                encode() {\n                    return Buffer.from(data.slice(2), 'hex');\n                }\n            };\n        }\n        buffer(buf, ctx) {\n            return {\n                decode() {\n                    return '0x' + buf.toString('hex');\n                }\n            };\n        }\n    }\n    RLP.BlobKind = BlobKind;\n    /** fixed length blob */\n    class FixedBlobKind extends BlobKind {\n        constructor(bytes) {\n            super();\n            this.bytes = bytes;\n        }\n        data(data, ctx) {\n            const encoder = super.data(data, ctx);\n            assert(data.length === this.bytes * 2 + 2, ctx, `expected hex string presents ${this.bytes} bytes`);\n            return encoder;\n        }\n        buffer(buf, ctx) {\n            const decoder = super.buffer(buf, ctx);\n            assert(buf.length === this.bytes, ctx, `expected ${this.bytes} bytes`);\n            return decoder;\n        }\n    }\n    RLP.FixedBlobKind = FixedBlobKind;\n    /** fixed length blob allowing null */\n    class NullableFixedBlobKind extends FixedBlobKind {\n        data(data, ctx) {\n            if (!data) {\n                return {\n                    encode() {\n                        return Buffer.alloc(0);\n                    }\n                };\n            }\n            return super.data(data, ctx);\n        }\n        buffer(buf, ctx) {\n            if (buf.length === 0) {\n                return { decode() { return null; } };\n            }\n            return super.buffer(buf, ctx);\n        }\n    }\n    RLP.NullableFixedBlobKind = NullableFixedBlobKind;\n    /** fixed length blob kind that will remove leading zero on encoding and pad zero on decoding */\n    class CompactFixedBlobKind extends FixedBlobKind {\n        data(data, ctx) {\n            const buf = super.data(data, ctx).encode();\n            return {\n                encode() {\n                    const nzIndex = buf.findIndex(v => v !== 0);\n                    if (nzIndex >= 0) {\n                        return buf.slice(nzIndex);\n                    }\n                    return Buffer.alloc(0);\n                }\n            };\n        }\n        buffer(buf, ctx) {\n            assert(buf.length <= this.bytes, ctx, `expected less than ${this.bytes} bytes`);\n            assert(buf.length === 0 || buf[0] !== 0, ctx, `expected no leading zero bytes`);\n            const bytes = this.bytes;\n            return {\n                decode() {\n                    const zeros = '0'.repeat((bytes - buf.length) * 2);\n                    return '0x' + zeros + buf.toString('hex');\n                }\n            };\n        }\n    }\n    RLP.CompactFixedBlobKind = CompactFixedBlobKind;\n})(RLP || (RLP = {}));\nfunction pack(obj, profile, ctx) {\n    ctx = ctx ? ctx + '.' + profile.name : profile.name;\n    const kind = profile.kind;\n    if (kind instanceof RLP.ScalarKind) {\n        return kind.data(obj, ctx).encode();\n    }\n    if (Array.isArray(kind)) {\n        return kind.map(k => pack(obj[k.name], k, ctx));\n    }\n    assert(Array.isArray(obj), ctx, 'expected array');\n    const item = kind.item;\n    return obj.map((part, i) => pack(part, { name: '#' + i, kind: item }, ctx));\n}\nfunction unpack(packed, profile, ctx) {\n    ctx = ctx ? ctx + '.' + profile.name : profile.name;\n    const kind = profile.kind;\n    if (kind instanceof RLP.ScalarKind) {\n        if (!(kind instanceof RLP.RawKind)) {\n            assert(Buffer.isBuffer(packed), ctx, 'expected Buffer');\n        }\n        return kind.buffer(packed, ctx).decode();\n    }\n    if (Array.isArray(kind)) {\n        assert(Array.isArray(packed), ctx, 'expected array');\n        const parts = packed;\n        assert(parts.length === kind.length, ctx, `expected ${kind.length} items, but got ${parts.length}`);\n        return kind.reduce((o, p, i) => {\n            o[p.name] = unpack(parts[i], p, ctx);\n            return o;\n        }, {});\n    }\n    assert(Array.isArray(packed), ctx, 'expected array');\n    const item = kind.item;\n    return packed.map((part, i) => unpack(part, { name: '#' + i, kind: item }, ctx));\n}\nfunction assert(cond, ctx, msg) {\n    if (!cond) {\n        throw new RLPError(`${ctx}: ${msg}`);\n    }\n}\nfunction isHexString(str) {\n    return /^0x[0-9a-f]*$/i.test(str);\n}\nfunction isDecString(str) {\n    return /^[0-9]+$/.test(str);\n}\nclass RLPError extends Error {\n    constructor(msg) {\n        super(msg);\n        this.name = RLPError.name;\n    }\n}\n//# sourceMappingURL=data:application/json;base64,","'use strict';\n// https://github.com/tc39/proposal-promise-try\nvar $export = require('./_export');\nvar newPromiseCapability = require('./_new-promise-capability');\nvar perform = require('./_perform');\n\n$export($export.S, 'Promise', { 'try': function (callbackfn) {\n  var promiseCapability = newPromiseCapability.f(this);\n  var result = perform(callbackfn);\n  (result.e ? promiseCapability.reject : promiseCapability.resolve)(result.v);\n  return promiseCapability.promise;\n} });\n","module.exports = require(\"core-js/library/fn/get-iterator\");","module.exports = function (done, value) {\n  return { value: value, done: !!done };\n};\n","var ctx = require('./_ctx');\nvar call = require('./_iter-call');\nvar isArrayIter = require('./_is-array-iter');\nvar anObject = require('./_an-object');\nvar toLength = require('./_to-length');\nvar getIterFn = require('./core.get-iterator-method');\nvar BREAK = {};\nvar RETURN = {};\nvar exports = module.exports = function (iterable, entries, fn, that, ITERATOR) {\n  var iterFn = ITERATOR ? function () { return iterable; } : getIterFn(iterable);\n  var f = ctx(fn, that, entries ? 2 : 1);\n  var index = 0;\n  var length, step, iterator, result;\n  if (typeof iterFn != 'function') throw TypeError(iterable + ' is not iterable!');\n  // fast case for arrays with default iterator\n  if (isArrayIter(iterFn)) for (length = toLength(iterable.length); length > index; index++) {\n    result = entries ? f(anObject(step = iterable[index])[0], step[1]) : f(iterable[index]);\n    if (result === BREAK || result === RETURN) return result;\n  } else for (iterator = iterFn.call(iterable); !(step = iterator.next()).done;) {\n    result = call(iterator, f, step.value, entries);\n    if (result === BREAK || result === RETURN) return result;\n  }\n};\nexports.BREAK = BREAK;\nexports.RETURN = RETURN;\n","// 7.3.20 SpeciesConstructor(O, defaultConstructor)\nvar anObject = require('./_an-object');\nvar aFunction = require('./_a-function');\nvar SPECIES = require('./_wks')('species');\nmodule.exports = function (O, D) {\n  var C = anObject(O).constructor;\n  var S;\n  return C === undefined || (S = anObject(C)[SPECIES]) == undefined ? D : aFunction(S);\n};\n","<template>\n  <div class=\"container-fluid\">\n\n    <div v-if=\"!claimed\" class=\"container-fluid envelope-wrap\">\n      <div class=\"container-fluid envelope-container envelope-container--claim envelope--verified envelope-container--red envelope-container--with-card\">\n        <div class=\"container-fluid envelope-info\">\n          <div class=\"row envelope-info--top\">\n            <div class=\"col-xs-5 left-align\">\n              <p>{{ $t(\"envelope\") }} #{{ envelope.id }}</p>\n            </div>\n            <div class=\"col-xs-7 right-align\">\n              <p>\n                <span>Expires\n                  <time datetime=\"2019-03-07T15:19:30.000Z\" title=\"2019-03-07 15:19\">in {{ envelope.duration * 1000 | duration('humanize') }}</time>\n                </span>\n              </p>\n            </div>\n          </div>\n          <div>\n            <svg class=\"svg--icon-dog\" version=\"1.1\" x=\"0px\" y=\"0px\" viewBox=\"0 0 100 100\" xml:space=\"preserve\">\n              <circle cx=\"46.2\" cy=\"35\" r=\"3.7\"></circle>\n              <path d=\"M63.7,31.3c-3.1-8.7-11.4-15-21.2-15l-7.5,0c-6.1,0-11.3,3.6-13.7,8.8c-5.2,2.4-8.8,7.6-8.8,13.7v30H20v15h37.5V61.2l7.5,0  c12.4,0,22.5-10.1,22.5-22.5v-7.5H63.7z M65,53.7h-7.5c-4.1,0-7.5,3.4-7.5,7.5v15H27.5v-7.5c8.3,0,15-6.7,15-15v-7.5  c0-2.1-1.7-3.7-3.8-3.7S35,44.2,35,46.3v7.5c0,4.1-3.4,7.5-7.5,7.5l-7.5,0V38.8c0-4.1,3.4-7.5,7.5-7.5c0-4.1,3.4-7.5,7.5-7.5h7.5  c8.3,0,15,6.7,15,15H65h15C80,47,73.3,53.7,65,53.7z\"></path>\n            </svg>\n          </div>\n          <div class=\"envelope-info--message\">\n            <h2>{{ envelope.message || $t(\"create.comment_placeholder\") }}</h2>\n            <p>– {{ envelope.nickname || $t(\"create.from.placeholder\") }}</p>\n          </div>\n        </div>\n\n        <div class=\"envelope--buttons\">\n          <div class=\"envelope--input--disclaimer\">\n            <p>\n              <span>{{ $t(\"claim.hint\") }}</span>\n            </p>\n          </div>\n          <p>\n            <button :disabled=\"isClaiming\"  class=\"btn btn-env\" @click=\"claim\">{{ isClaiming ? $t(\"claim.claiming_btn_text\") + counter : $t(\"claim.claim_btn_text\") }}</button>\n          </p>\n        </div>\n\n      </div>\n    </div>\n\n    <AfterClaimCard v-else :envelope=\"envelope\" :tokenName=\"tokenName\" />\n  </div>\n</template>\n\n\n<script>\nimport BN from 'bignumber.js'\nimport IPFS from 'ipfs-mini'\nimport AfterClaimCard from \"@/components/AfterClaimCard.vue\";\nimport { cry, abi, RLP, Transaction } from 'thor-devkit'\n\nconst GAS_PER_CLAIMER = 200000\nconst ipfs = new IPFS({ host: 'ipfs.infura.io', port: 5001, protocol: 'https' })\n\n\nexport default {\n    name: 'ClaimCard',\n    components: {\n      AfterClaimCard,\n    },\n    props: {\n      visitor: String,\n      tokenName: String,\n      envelope: Object\n    },\n    data() {\n      return {\n        claimed: false,\n        isClaiming: false,\n        counter: 20,\n        cTicker: null\n      }\n    },\n    mounted() {\n      if (this.envelope.messageLink) {\n        ipfs.cat(this.envelope.messageLink).then(message => {\n          this.envelope.message = message\n        })\n      }\n    },\n    destroyed() {\n      clearInterval(this.cTicker)\n    },\n    watch: {\n      'envelope.messageLink': function (val, oldVal) {\n        if (this.envelope.messageLink) {\n          ipfs.cat(val).then(message => {\n            this.envelope.message = message\n          })\n        }\n      }\n    },\n    methods: {\n      claim() {\n        this.isClaiming = true\n        let spk = atob(this.$route.params.code)\n        let claimABI = {\"constant\":false,\"inputs\":[{\"name\":\"_id\",\"type\":\"uint256\"},{\"name\":\"_claimerAddr\",\"type\":\"address\"},{\"name\":\"_signature\",\"type\":\"bytes\"}],\"name\":\"claimEnvelope\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}\n\n        let params = [ {\"name\": \"id\", \"type\": \"uint256\"}, {\"name\": \"claimer\", \"type\": \"address\"} ]\n        let text = abi.encodeParameters(params, [this.envelope.id, this.visitor])\n\n        let signature = cry.secp256k1.sign(cry.keccak256(Buffer.from(text.slice(2), 'hex')), Buffer.from(spk.slice(2), 'hex'))\n        let data = (new abi.Function(claimABI)).encode(this.envelope.id, this.visitor, '0x' + signature.toString('hex'))\n\n        this.cTicker = setInterval(this.refreshCounter, 1000)\n\n        fetch(this.$config.providerUrl + '/blocks/best').then(resp => resp.json())\n        .then(block => {\n          let blockRef = block.id.slice(0, 18)\n\n          let body = {\n            chainTag: this.$config.chainTag,\n            blockRef: blockRef,\n            expiration: 360, // expire in 1 hour\n            clauses: [{to: this.$config.contract, value: '0x0', data: data}],\n            gasPriceCoef: 0,\n            gas: GAS_PER_CLAIMER,\n            dependsOn: null,\n            nonce: +new Date()\n          }\n\n          let tx = new Transaction(body)\n          let signingHash = cry.blake2b256(tx.encode())\n          tx.signature = cry.secp256k1.sign(signingHash, Buffer.from(spk.slice(2), 'hex'))\n          let raw = '0x' + tx.encode().toString('hex')\n\n          return fetch(this.$config.providerUrl + '/transactions', {\n            body: JSON.stringify({ raw }),\n            headers: {'content-type': 'application/json'},\n            method: 'POST',\n          })\n          .then(response => response.json())\n          .then(tx => {\n            this.getReceipt(tx.id, (err, receipt) => {\n              if (err) return\n              this.isClaiming = false\n\n              if (receipt.reverted) {\n                //\n                console.error(`claim tx failed: TxId=${tx.id}`)\n              } else {\n                this.claimed = true\n                let events = receipt.outputs[0].events\n                let claimAmount = events[events.length-1].data\n\n                this.$set(this.envelope, 'totalClaimers', this.envelope.totalClaimers + 1)\n                this.$set(this.envelope, 'claimed', (new BN(claimAmount, 16)).div(10**18).toFixed(2))\n\n                // \n                localStorage.setItem(`claimed:${this.$config.network}_${this.envelope.id}`, this.visitor)\n              }\n            })\n          })\n         })\n         .catch(err => {\n           console.error(err)\n           this.isClaiming = false\n         })\n\n      },\n      getReceipt(txID, cb) {\n        let counter = 0\n        let url = this.$config.providerUrl + `/transactions/${txID}/receipt`\n\n        function _getReceipt() {\n          counter++\n\n          fetch(url).then(resp => resp.json())\n          .then(receipt => {\n            console.log(receipt)\n\n            if (receipt) {\n              return cb(null, receipt)\n            }\n            if (counter < 7) {\n              setTimeout(_getReceipt, 10000)\n            } else {\n              return cb(new Error('fail to get receipt'), null)\n            }\n          })\n        }\n       \n       _getReceipt()\n      },\n      refreshCounter() {\n        if (this.counter == 0) {\n          this.counter = 20\n        }\n        this.counter--\n      }\n    }\n}\n</script>\n","require('../modules/es6.object.to-string');\nrequire('../modules/es6.string.iterator');\nrequire('../modules/web.dom.iterable');\nrequire('../modules/es6.promise');\nrequire('../modules/es7.promise.finally');\nrequire('../modules/es7.promise.try');\nmodule.exports = require('../modules/_core').Promise;\n","// check on default Array iterator\nvar Iterators = require('./_iterators');\nvar ITERATOR = require('./_wks')('iterator');\nvar ArrayProto = Array.prototype;\n\nmodule.exports = function (it) {\n  return it !== undefined && (Iterators.Array === it || ArrayProto[ITERATOR] === it);\n};\n","var global = require('./_global');\nvar macrotask = require('./_task').set;\nvar Observer = global.MutationObserver || global.WebKitMutationObserver;\nvar process = global.process;\nvar Promise = global.Promise;\nvar isNode = require('./_cof')(process) == 'process';\n\nmodule.exports = function () {\n  var head, last, notify;\n\n  var flush = function () {\n    var parent, fn;\n    if (isNode && (parent = process.domain)) parent.exit();\n    while (head) {\n      fn = head.fn;\n      head = head.next;\n      try {\n        fn();\n      } catch (e) {\n        if (head) notify();\n        else last = undefined;\n        throw e;\n      }\n    } last = undefined;\n    if (parent) parent.enter();\n  };\n\n  // Node.js\n  if (isNode) {\n    notify = function () {\n      process.nextTick(flush);\n    };\n  // browsers with MutationObserver, except iOS Safari - https://github.com/zloirock/core-js/issues/339\n  } else if (Observer && !(global.navigator && global.navigator.standalone)) {\n    var toggle = true;\n    var node = document.createTextNode('');\n    new Observer(flush).observe(node, { characterData: true }); // eslint-disable-line no-new\n    notify = function () {\n      node.data = toggle = !toggle;\n    };\n  // environments with maybe non-completely correct, but existent Promise\n  } else if (Promise && Promise.resolve) {\n    // Promise.resolve without an argument throws an error in LG WebOS 2\n    var promise = Promise.resolve(undefined);\n    notify = function () {\n      promise.then(flush);\n    };\n  // for other environments - macrotask based on:\n  // - setImmediate\n  // - MessageChannel\n  // - window.postMessag\n  // - onreadystatechange\n  // - setTimeout\n  } else {\n    notify = function () {\n      // strange IE + webpack dev server bug - use .call(global)\n      macrotask.call(global, flush);\n    };\n  }\n\n  return function (fn) {\n    var task = { fn: fn, next: undefined };\n    if (last) last.next = task;\n    if (!head) {\n      head = task;\n      notify();\n    } last = task;\n  };\n};\n","var toInteger = require('./_to-integer');\nvar defined = require('./_defined');\n// true  -> String#at\n// false -> String#codePointAt\nmodule.exports = function (TO_STRING) {\n  return function (that, pos) {\n    var s = String(defined(that));\n    var i = toInteger(pos);\n    var l = s.length;\n    var a, b;\n    if (i < 0 || i >= l) return TO_STRING ? '' : undefined;\n    a = s.charCodeAt(i);\n    return a < 0xd800 || a > 0xdbff || i + 1 === l || (b = s.charCodeAt(i + 1)) < 0xdc00 || b > 0xdfff\n      ? TO_STRING ? s.charAt(i) : a\n      : TO_STRING ? s.slice(i, i + 2) : (a - 0xd800 << 10) + (b - 0xdc00) + 0x10000;\n  };\n};\n","var dP = require('./_object-dp').f;\nvar FProto = Function.prototype;\nvar nameRE = /^\\s*function ([^ (]*)/;\nvar NAME = 'name';\n\n// 19.2.4.2 name\nNAME in FProto || require('./_descriptors') && dP(FProto, NAME, {\n  configurable: true,\n  get: function () {\n    try {\n      return ('' + this).match(nameRE)[1];\n    } catch (e) {\n      return '';\n    }\n  }\n});\n","// fast apply, http://jsperf.lnkit.com/fast-apply/5\nmodule.exports = function (fn, args, that) {\n  var un = that === undefined;\n  switch (args.length) {\n    case 0: return un ? fn()\n                      : fn.call(that);\n    case 1: return un ? fn(args[0])\n                      : fn.call(that, args[0]);\n    case 2: return un ? fn(args[0], args[1])\n                      : fn.call(that, args[0], args[1]);\n    case 3: return un ? fn(args[0], args[1], args[2])\n                      : fn.call(that, args[0], args[1], args[2]);\n    case 4: return un ? fn(args[0], args[1], args[2], args[3])\n                      : fn.call(that, args[0], args[1], args[2], args[3]);\n  } return fn.apply(that, args);\n};\n","// getting tag from 19.1.3.6 Object.prototype.toString()\nvar cof = require('./_cof');\nvar TAG = require('./_wks')('toStringTag');\n// ES3 wrong here\nvar ARG = cof(function () { return arguments; }()) == 'Arguments';\n\n// fallback for IE11 Script Access Denied error\nvar tryGet = function (it, key) {\n  try {\n    return it[key];\n  } catch (e) { /* empty */ }\n};\n\nmodule.exports = function (it) {\n  var O, T, B;\n  return it === undefined ? 'Undefined' : it === null ? 'Null'\n    // @@toStringTag case\n    : typeof (T = tryGet(O = Object(it), TAG)) == 'string' ? T\n    // builtinTag case\n    : ARG ? cof(O)\n    // ES3 arguments fallback\n    : (B = cof(O)) == 'Object' && typeof O.callee == 'function' ? 'Arguments' : B;\n};\n","var ctx = require('./_ctx');\nvar invoke = require('./_invoke');\nvar html = require('./_html');\nvar cel = require('./_dom-create');\nvar global = require('./_global');\nvar process = global.process;\nvar setTask = global.setImmediate;\nvar clearTask = global.clearImmediate;\nvar MessageChannel = global.MessageChannel;\nvar Dispatch = global.Dispatch;\nvar counter = 0;\nvar queue = {};\nvar ONREADYSTATECHANGE = 'onreadystatechange';\nvar defer, channel, port;\nvar run = function () {\n  var id = +this;\n  // eslint-disable-next-line no-prototype-builtins\n  if (queue.hasOwnProperty(id)) {\n    var fn = queue[id];\n    delete queue[id];\n    fn();\n  }\n};\nvar listener = function (event) {\n  run.call(event.data);\n};\n// Node.js 0.9+ & IE10+ has setImmediate, otherwise:\nif (!setTask || !clearTask) {\n  setTask = function setImmediate(fn) {\n    var args = [];\n    var i = 1;\n    while (arguments.length > i) args.push(arguments[i++]);\n    queue[++counter] = function () {\n      // eslint-disable-next-line no-new-func\n      invoke(typeof fn == 'function' ? fn : Function(fn), args);\n    };\n    defer(counter);\n    return counter;\n  };\n  clearTask = function clearImmediate(id) {\n    delete queue[id];\n  };\n  // Node.js 0.8-\n  if (require('./_cof')(process) == 'process') {\n    defer = function (id) {\n      process.nextTick(ctx(run, id, 1));\n    };\n  // Sphere (JS game engine) Dispatch API\n  } else if (Dispatch && Dispatch.now) {\n    defer = function (id) {\n      Dispatch.now(ctx(run, id, 1));\n    };\n  // Browsers with MessageChannel, includes WebWorkers\n  } else if (MessageChannel) {\n    channel = new MessageChannel();\n    port = channel.port2;\n    channel.port1.onmessage = listener;\n    defer = ctx(port.postMessage, port, 1);\n  // Browsers with postMessage, skip WebWorkers\n  // IE8 has postMessage, but it's sync & typeof its postMessage is 'object'\n  } else if (global.addEventListener && typeof postMessage == 'function' && !global.importScripts) {\n    defer = function (id) {\n      global.postMessage(id + '', '*');\n    };\n    global.addEventListener('message', listener, false);\n  // IE8-\n  } else if (ONREADYSTATECHANGE in cel('script')) {\n    defer = function (id) {\n      html.appendChild(cel('script'))[ONREADYSTATECHANGE] = function () {\n        html.removeChild(this);\n        run.call(id);\n      };\n    };\n  // Rest old browsers\n  } else {\n    defer = function (id) {\n      setTimeout(ctx(run, id, 1), 0);\n    };\n  }\n}\nmodule.exports = {\n  set: setTask,\n  clear: clearTask\n};\n","// call something on iterator step with safe closing on error\nvar anObject = require('./_an-object');\nmodule.exports = function (iterator, fn, value, entries) {\n  try {\n    return entries ? fn(anObject(value)[0], value[1]) : fn(value);\n  // 7.4.6 IteratorClose(iterator, completion)\n  } catch (e) {\n    var ret = iterator['return'];\n    if (ret !== undefined) anObject(ret.call(iterator));\n    throw e;\n  }\n};\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"app\"},[_c('header',{staticClass:\"navbar navbar-default\",attrs:{\"id\":\"header\"}},[_c('div',{staticClass:\"container-fluid header\"},[_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-sm-3 col-xs-12 navbar-header header--logo\"},[_c('h3',[_c('router-link',{attrs:{\"to\":{ name: 'home'}}},[_vm._v(_vm._s(_vm.$t(\"app_name\")))])],1)]),_c('div',{staticClass:\"col-sm-6 hidden-xs header--thor-info\"},[_c('div',{staticClass:\"header--thor-info--wrap\"},[_c('div',{staticClass:\"header--thor-info--wrap text-center\"},[_c('div',[_c('strong',[_vm._v(_vm._s(_vm.$t(\"account_label\"))+\": \")]),_c('span',[_c('a',{attrs:{\"href\":_vm.accountLink,\"target\":\"_blank\"}},[_vm._v(_vm._s(_vm.visitor))])])]),_vm._v(\" |\\n              \"),_c('div',[_c('strong',[_vm._v(_vm._s(_vm.$t(\"network\"))+\": \")]),_vm._v(_vm._s(_vm.network))])])])]),_c('div',{staticClass:\"col-sm-3 col-xs-6 navbar-header locale-select\"},[_c('h5',[_c('span',[_c('a',{attrs:{\"href\":\"#\"},on:{\"click\":function($event){return _vm.setLocale('en-US')}}},[_vm._v(\"English\")]),_vm._v(\" | \"),_c('a',{attrs:{\"href\":\"#\"},on:{\"click\":function($event){return _vm.setLocale('zh-CN')}}},[_vm._v(\"简体中文\")])])])])])])]),_c('div',{staticClass:\"container\"},[(_vm.showInptModal)?_c('div',{staticClass:\"alert envelope--modal\"},[_c('div',{staticClass:\"envelope--modal--container\"},[_c('div',{staticClass:\"envelope--modal--loading\"},[_c('span',{staticClass:\"animated\"},[_c('svg',{staticClass:\"svg--icon-dog\",attrs:{\"version\":\"1.1\",\"x\":\"0px\",\"y\":\"0px\",\"viewBox\":\"0 0 100 100\",\"xml:space\":\"preserve\"}},[_c('circle',{attrs:{\"cx\":\"46.2\",\"cy\":\"35\",\"r\":\"3.7\"}}),_c('path',{attrs:{\"d\":\"M63.7,31.3c-3.1-8.7-11.4-15-21.2-15l-7.5,0c-6.1,0-11.3,3.6-13.7,8.8c-5.2,2.4-8.8,7.6-8.8,13.7v30H20v15h37.5V61.2l7.5,0  c12.4,0,22.5-10.1,22.5-22.5v-7.5H63.7z M65,53.7h-7.5c-4.1,0-7.5,3.4-7.5,7.5v15H27.5v-7.5c8.3,0,15-6.7,15-15v-7.5  c0-2.1-1.7-3.7-3.8-3.7S35,44.2,35,46.3v7.5c0,4.1-3.4,7.5-7.5,7.5l-7.5,0V38.8c0-4.1,3.4-7.5,7.5-7.5c0-4.1,3.4-7.5,7.5-7.5h7.5  c8.3,0,15,6.7,15,15H65h15C80,47,73.3,53.7,65,53.7z\"}})])])]),_c('div',{staticClass:\"envelope--modal--details\"},[_c('div',{staticClass:\"container-fluid\"},[_c('div',{staticClass:\"envelope--field\"},[_c('h3',[_vm._v(\"Input your address\")]),_vm._m(0),_c('div',{staticClass:\"envelope--input\"},[_c('div',{staticClass:\"input-group\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.address),expression:\"address\"}],class:{'has-error': !_vm.isAddress()},attrs:{\"type\":\"text\",\"placeholder\":\"0x\"},domProps:{\"value\":(_vm.address)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.address=$event.target.value}}})])])]),_c('div',{staticClass:\"envelope--create-button--close\"},[_c('button',{attrs:{\"disabled\":!_vm.isAddress()},on:{\"click\":_vm.handleContinue}},[_c('h4',[_vm._v(\"Continue\")])])])])])])]):_vm._e(),_c('ShareCard',{attrs:{\"shareLink\":_vm.shareLink}}),(_vm.role=='creator')?_c('RedPacketInfo',{attrs:{\"visitor\":_vm.visitor,\"envelope\":_vm.envelope,\"tokenName\":_vm.tokenName}}):(_vm.role=='claimer' && _vm.envelope.claimed == '0.00' && _vm.envelope.status != '2')?_c('ClaimCard',{attrs:{\"visitor\":_vm.visitor,\"envelope\":_vm.envelope,\"tokenName\":_vm.tokenName}}):(_vm.role=='claimer' && _vm.envelope.claimed != '0.00')?_c('AfterClaimCard',{attrs:{\"envelope\":_vm.envelope,\"tokenName\":_vm.tokenName}}):_c('RedPacketInfo',{attrs:{\"visitor\":_vm.visitor,\"envelope\":_vm.envelope,\"tokenName\":_vm.tokenName}}),_c('CertModal',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.showCertModal),expression:\"showCertModal\"}]})],1)])}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('h4',[_c('span',[_vm._v(\"Please input your wallet address to catch your luck.\")]),_c('br')])}]\n\nexport { render, staticRenderFns }","import mod from \"-!../../node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js??ref--12-0!../../node_modules/_thread-loader@2.1.2@thread-loader/dist/cjs.js!../../node_modules/_babel-loader@8.0.5@babel-loader/lib/index.js!../../node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js??ref--0-0!../../node_modules/_vue-loader@15.7.0@vue-loader/lib/index.js??vue-loader-options!./Claim.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js??ref--12-0!../../node_modules/_thread-loader@2.1.2@thread-loader/dist/cjs.js!../../node_modules/_babel-loader@8.0.5@babel-loader/lib/index.js!../../node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js??ref--0-0!../../node_modules/_vue-loader@15.7.0@vue-loader/lib/index.js??vue-loader-options!./Claim.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Claim.vue?vue&type=template&id=044f5224&scoped=true&\"\nimport script from \"./Claim.vue?vue&type=script&lang=js&\"\nexport * from \"./Claim.vue?vue&type=script&lang=js&\"\nimport style0 from \"./Claim.vue?vue&type=style&index=0&id=044f5224&scoped=true&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/_vue-loader@15.7.0@vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"044f5224\",\n  null\n  \n)\n\nexport default component.exports","'use strict';\nvar $at = require('./_string-at')(true);\n\n// 21.1.3.27 String.prototype[@@iterator]()\nrequire('./_iter-define')(String, 'String', function (iterated) {\n  this._t = String(iterated); // target\n  this._i = 0;                // next index\n// 21.1.5.2.1 %StringIteratorPrototype%.next()\n}, function () {\n  var O = this._t;\n  var index = this._i;\n  var point;\n  if (index >= O.length) return { value: undefined, done: true };\n  point = $at(O, index);\n  this._i += point.length;\n  return { value: point, done: false };\n});\n","'use strict';\nvar $defineProperty = require('./_object-dp');\nvar createDesc = require('./_property-desc');\n\nmodule.exports = function (object, index, value) {\n  if (index in object) $defineProperty.f(object, index, createDesc(0, value));\n  else object[index] = value;\n};\n","'use strict';\nvar create = require('./_object-create');\nvar descriptor = require('./_property-desc');\nvar setToStringTag = require('./_set-to-string-tag');\nvar IteratorPrototype = {};\n\n// 25.1.2.1.1 %IteratorPrototype%[@@iterator]()\nrequire('./_hide')(IteratorPrototype, require('./_wks')('iterator'), function () { return this; });\n\nmodule.exports = function (Constructor, NAME, next) {\n  Constructor.prototype = create(IteratorPrototype, { next: descriptor(1, next) });\n  setToStringTag(Constructor, NAME + ' Iterator');\n};\n","'use strict';\nvar LIBRARY = require('./_library');\nvar global = require('./_global');\nvar ctx = require('./_ctx');\nvar classof = require('./_classof');\nvar $export = require('./_export');\nvar isObject = require('./_is-object');\nvar aFunction = require('./_a-function');\nvar anInstance = require('./_an-instance');\nvar forOf = require('./_for-of');\nvar speciesConstructor = require('./_species-constructor');\nvar task = require('./_task').set;\nvar microtask = require('./_microtask')();\nvar newPromiseCapabilityModule = require('./_new-promise-capability');\nvar perform = require('./_perform');\nvar userAgent = require('./_user-agent');\nvar promiseResolve = require('./_promise-resolve');\nvar PROMISE = 'Promise';\nvar TypeError = global.TypeError;\nvar process = global.process;\nvar versions = process && process.versions;\nvar v8 = versions && versions.v8 || '';\nvar $Promise = global[PROMISE];\nvar isNode = classof(process) == 'process';\nvar empty = function () { /* empty */ };\nvar Internal, newGenericPromiseCapability, OwnPromiseCapability, Wrapper;\nvar newPromiseCapability = newGenericPromiseCapability = newPromiseCapabilityModule.f;\n\nvar USE_NATIVE = !!function () {\n  try {\n    // correct subclassing with @@species support\n    var promise = $Promise.resolve(1);\n    var FakePromise = (promise.constructor = {})[require('./_wks')('species')] = function (exec) {\n      exec(empty, empty);\n    };\n    // unhandled rejections tracking support, NodeJS Promise without it fails @@species test\n    return (isNode || typeof PromiseRejectionEvent == 'function')\n      && promise.then(empty) instanceof FakePromise\n      // v8 6.6 (Node 10 and Chrome 66) have a bug with resolving custom thenables\n      // https://bugs.chromium.org/p/chromium/issues/detail?id=830565\n      // we can't detect it synchronously, so just check versions\n      && v8.indexOf('6.6') !== 0\n      && userAgent.indexOf('Chrome/66') === -1;\n  } catch (e) { /* empty */ }\n}();\n\n// helpers\nvar isThenable = function (it) {\n  var then;\n  return isObject(it) && typeof (then = it.then) == 'function' ? then : false;\n};\nvar notify = function (promise, isReject) {\n  if (promise._n) return;\n  promise._n = true;\n  var chain = promise._c;\n  microtask(function () {\n    var value = promise._v;\n    var ok = promise._s == 1;\n    var i = 0;\n    var run = function (reaction) {\n      var handler = ok ? reaction.ok : reaction.fail;\n      var resolve = reaction.resolve;\n      var reject = reaction.reject;\n      var domain = reaction.domain;\n      var result, then, exited;\n      try {\n        if (handler) {\n          if (!ok) {\n            if (promise._h == 2) onHandleUnhandled(promise);\n            promise._h = 1;\n          }\n          if (handler === true) result = value;\n          else {\n            if (domain) domain.enter();\n            result = handler(value); // may throw\n            if (domain) {\n              domain.exit();\n              exited = true;\n            }\n          }\n          if (result === reaction.promise) {\n            reject(TypeError('Promise-chain cycle'));\n          } else if (then = isThenable(result)) {\n            then.call(result, resolve, reject);\n          } else resolve(result);\n        } else reject(value);\n      } catch (e) {\n        if (domain && !exited) domain.exit();\n        reject(e);\n      }\n    };\n    while (chain.length > i) run(chain[i++]); // variable length - can't use forEach\n    promise._c = [];\n    promise._n = false;\n    if (isReject && !promise._h) onUnhandled(promise);\n  });\n};\nvar onUnhandled = function (promise) {\n  task.call(global, function () {\n    var value = promise._v;\n    var unhandled = isUnhandled(promise);\n    var result, handler, console;\n    if (unhandled) {\n      result = perform(function () {\n        if (isNode) {\n          process.emit('unhandledRejection', value, promise);\n        } else if (handler = global.onunhandledrejection) {\n          handler({ promise: promise, reason: value });\n        } else if ((console = global.console) && console.error) {\n          console.error('Unhandled promise rejection', value);\n        }\n      });\n      // Browsers should not trigger `rejectionHandled` event if it was handled here, NodeJS - should\n      promise._h = isNode || isUnhandled(promise) ? 2 : 1;\n    } promise._a = undefined;\n    if (unhandled && result.e) throw result.v;\n  });\n};\nvar isUnhandled = function (promise) {\n  return promise._h !== 1 && (promise._a || promise._c).length === 0;\n};\nvar onHandleUnhandled = function (promise) {\n  task.call(global, function () {\n    var handler;\n    if (isNode) {\n      process.emit('rejectionHandled', promise);\n    } else if (handler = global.onrejectionhandled) {\n      handler({ promise: promise, reason: promise._v });\n    }\n  });\n};\nvar $reject = function (value) {\n  var promise = this;\n  if (promise._d) return;\n  promise._d = true;\n  promise = promise._w || promise; // unwrap\n  promise._v = value;\n  promise._s = 2;\n  if (!promise._a) promise._a = promise._c.slice();\n  notify(promise, true);\n};\nvar $resolve = function (value) {\n  var promise = this;\n  var then;\n  if (promise._d) return;\n  promise._d = true;\n  promise = promise._w || promise; // unwrap\n  try {\n    if (promise === value) throw TypeError(\"Promise can't be resolved itself\");\n    if (then = isThenable(value)) {\n      microtask(function () {\n        var wrapper = { _w: promise, _d: false }; // wrap\n        try {\n          then.call(value, ctx($resolve, wrapper, 1), ctx($reject, wrapper, 1));\n        } catch (e) {\n          $reject.call(wrapper, e);\n        }\n      });\n    } else {\n      promise._v = value;\n      promise._s = 1;\n      notify(promise, false);\n    }\n  } catch (e) {\n    $reject.call({ _w: promise, _d: false }, e); // wrap\n  }\n};\n\n// constructor polyfill\nif (!USE_NATIVE) {\n  // 25.4.3.1 Promise(executor)\n  $Promise = function Promise(executor) {\n    anInstance(this, $Promise, PROMISE, '_h');\n    aFunction(executor);\n    Internal.call(this);\n    try {\n      executor(ctx($resolve, this, 1), ctx($reject, this, 1));\n    } catch (err) {\n      $reject.call(this, err);\n    }\n  };\n  // eslint-disable-next-line no-unused-vars\n  Internal = function Promise(executor) {\n    this._c = [];             // <- awaiting reactions\n    this._a = undefined;      // <- checked in isUnhandled reactions\n    this._s = 0;              // <- state\n    this._d = false;          // <- done\n    this._v = undefined;      // <- value\n    this._h = 0;              // <- rejection state, 0 - default, 1 - handled, 2 - unhandled\n    this._n = false;          // <- notify\n  };\n  Internal.prototype = require('./_redefine-all')($Promise.prototype, {\n    // 25.4.5.3 Promise.prototype.then(onFulfilled, onRejected)\n    then: function then(onFulfilled, onRejected) {\n      var reaction = newPromiseCapability(speciesConstructor(this, $Promise));\n      reaction.ok = typeof onFulfilled == 'function' ? onFulfilled : true;\n      reaction.fail = typeof onRejected == 'function' && onRejected;\n      reaction.domain = isNode ? process.domain : undefined;\n      this._c.push(reaction);\n      if (this._a) this._a.push(reaction);\n      if (this._s) notify(this, false);\n      return reaction.promise;\n    },\n    // 25.4.5.1 Promise.prototype.catch(onRejected)\n    'catch': function (onRejected) {\n      return this.then(undefined, onRejected);\n    }\n  });\n  OwnPromiseCapability = function () {\n    var promise = new Internal();\n    this.promise = promise;\n    this.resolve = ctx($resolve, promise, 1);\n    this.reject = ctx($reject, promise, 1);\n  };\n  newPromiseCapabilityModule.f = newPromiseCapability = function (C) {\n    return C === $Promise || C === Wrapper\n      ? new OwnPromiseCapability(C)\n      : newGenericPromiseCapability(C);\n  };\n}\n\n$export($export.G + $export.W + $export.F * !USE_NATIVE, { Promise: $Promise });\nrequire('./_set-to-string-tag')($Promise, PROMISE);\nrequire('./_set-species')(PROMISE);\nWrapper = require('./_core')[PROMISE];\n\n// statics\n$export($export.S + $export.F * !USE_NATIVE, PROMISE, {\n  // 25.4.4.5 Promise.reject(r)\n  reject: function reject(r) {\n    var capability = newPromiseCapability(this);\n    var $$reject = capability.reject;\n    $$reject(r);\n    return capability.promise;\n  }\n});\n$export($export.S + $export.F * (LIBRARY || !USE_NATIVE), PROMISE, {\n  // 25.4.4.6 Promise.resolve(x)\n  resolve: function resolve(x) {\n    return promiseResolve(LIBRARY && this === Wrapper ? $Promise : this, x);\n  }\n});\n$export($export.S + $export.F * !(USE_NATIVE && require('./_iter-detect')(function (iter) {\n  $Promise.all(iter)['catch'](empty);\n})), PROMISE, {\n  // 25.4.4.1 Promise.all(iterable)\n  all: function all(iterable) {\n    var C = this;\n    var capability = newPromiseCapability(C);\n    var resolve = capability.resolve;\n    var reject = capability.reject;\n    var result = perform(function () {\n      var values = [];\n      var index = 0;\n      var remaining = 1;\n      forOf(iterable, false, function (promise) {\n        var $index = index++;\n        var alreadyCalled = false;\n        values.push(undefined);\n        remaining++;\n        C.resolve(promise).then(function (value) {\n          if (alreadyCalled) return;\n          alreadyCalled = true;\n          values[$index] = value;\n          --remaining || resolve(values);\n        }, reject);\n      });\n      --remaining || resolve(values);\n    });\n    if (result.e) reject(result.v);\n    return capability.promise;\n  },\n  // 25.4.4.4 Promise.race(iterable)\n  race: function race(iterable) {\n    var C = this;\n    var capability = newPromiseCapability(C);\n    var reject = capability.reject;\n    var result = perform(function () {\n      forOf(iterable, false, function (promise) {\n        C.resolve(promise).then(capability.resolve, reject);\n      });\n    });\n    if (result.e) reject(result.v);\n    return capability.promise;\n  }\n});\n","var $iterators = require('./es6.array.iterator');\nvar getKeys = require('./_object-keys');\nvar redefine = require('./_redefine');\nvar global = require('./_global');\nvar hide = require('./_hide');\nvar Iterators = require('./_iterators');\nvar wks = require('./_wks');\nvar ITERATOR = wks('iterator');\nvar TO_STRING_TAG = wks('toStringTag');\nvar ArrayValues = Iterators.Array;\n\nvar DOMIterables = {\n  CSSRuleList: true, // TODO: Not spec compliant, should be false.\n  CSSStyleDeclaration: false,\n  CSSValueList: false,\n  ClientRectList: false,\n  DOMRectList: false,\n  DOMStringList: false,\n  DOMTokenList: true,\n  DataTransferItemList: false,\n  FileList: false,\n  HTMLAllCollection: false,\n  HTMLCollection: false,\n  HTMLFormElement: false,\n  HTMLSelectElement: false,\n  MediaList: true, // TODO: Not spec compliant, should be false.\n  MimeTypeArray: false,\n  NamedNodeMap: false,\n  NodeList: true,\n  PaintRequestList: false,\n  Plugin: false,\n  PluginArray: false,\n  SVGLengthList: false,\n  SVGNumberList: false,\n  SVGPathSegList: false,\n  SVGPointList: false,\n  SVGStringList: false,\n  SVGTransformList: false,\n  SourceBufferList: false,\n  StyleSheetList: true, // TODO: Not spec compliant, should be false.\n  TextTrackCueList: false,\n  TextTrackList: false,\n  TouchList: false\n};\n\nfor (var collections = getKeys(DOMIterables), i = 0; i < collections.length; i++) {\n  var NAME = collections[i];\n  var explicit = DOMIterables[NAME];\n  var Collection = global[NAME];\n  var proto = Collection && Collection.prototype;\n  var key;\n  if (proto) {\n    if (!proto[ITERATOR]) hide(proto, ITERATOR, ArrayValues);\n    if (!proto[TO_STRING_TAG]) hide(proto, TO_STRING_TAG, NAME);\n    Iterators[NAME] = ArrayValues;\n    if (explicit) for (key in $iterators) if (!proto[key]) redefine(proto, key, $iterators[key], true);\n  }\n}\n","var hide = require('./_hide');\nmodule.exports = function (target, src, safe) {\n  for (var key in src) {\n    if (safe && target[key]) target[key] = src[key];\n    else hide(target, key, src[key]);\n  } return target;\n};\n","'use strict';\nvar LIBRARY = require('./_library');\nvar $export = require('./_export');\nvar redefine = require('./_redefine');\nvar hide = require('./_hide');\nvar Iterators = require('./_iterators');\nvar $iterCreate = require('./_iter-create');\nvar setToStringTag = require('./_set-to-string-tag');\nvar getPrototypeOf = require('./_object-gpo');\nvar ITERATOR = require('./_wks')('iterator');\nvar BUGGY = !([].keys && 'next' in [].keys()); // Safari has buggy iterators w/o `next`\nvar FF_ITERATOR = '@@iterator';\nvar KEYS = 'keys';\nvar VALUES = 'values';\n\nvar returnThis = function () { return this; };\n\nmodule.exports = function (Base, NAME, Constructor, next, DEFAULT, IS_SET, FORCED) {\n  $iterCreate(Constructor, NAME, next);\n  var getMethod = function (kind) {\n    if (!BUGGY && kind in proto) return proto[kind];\n    switch (kind) {\n      case KEYS: return function keys() { return new Constructor(this, kind); };\n      case VALUES: return function values() { return new Constructor(this, kind); };\n    } return function entries() { return new Constructor(this, kind); };\n  };\n  var TAG = NAME + ' Iterator';\n  var DEF_VALUES = DEFAULT == VALUES;\n  var VALUES_BUG = false;\n  var proto = Base.prototype;\n  var $native = proto[ITERATOR] || proto[FF_ITERATOR] || DEFAULT && proto[DEFAULT];\n  var $default = $native || getMethod(DEFAULT);\n  var $entries = DEFAULT ? !DEF_VALUES ? $default : getMethod('entries') : undefined;\n  var $anyNative = NAME == 'Array' ? proto.entries || $native : $native;\n  var methods, key, IteratorPrototype;\n  // Fix native\n  if ($anyNative) {\n    IteratorPrototype = getPrototypeOf($anyNative.call(new Base()));\n    if (IteratorPrototype !== Object.prototype && IteratorPrototype.next) {\n      // Set @@toStringTag to native iterators\n      setToStringTag(IteratorPrototype, TAG, true);\n      // fix for some old engines\n      if (!LIBRARY && typeof IteratorPrototype[ITERATOR] != 'function') hide(IteratorPrototype, ITERATOR, returnThis);\n    }\n  }\n  // fix Array#{values, @@iterator}.name in V8 / FF\n  if (DEF_VALUES && $native && $native.name !== VALUES) {\n    VALUES_BUG = true;\n    $default = function values() { return $native.call(this); };\n  }\n  // Define iterator\n  if ((!LIBRARY || FORCED) && (BUGGY || VALUES_BUG || !proto[ITERATOR])) {\n    hide(proto, ITERATOR, $default);\n  }\n  // Plug for library\n  Iterators[NAME] = $default;\n  Iterators[TAG] = returnThis;\n  if (DEFAULT) {\n    methods = {\n      values: DEF_VALUES ? $default : getMethod(VALUES),\n      keys: IS_SET ? $default : getMethod(KEYS),\n      entries: $entries\n    };\n    if (FORCED) for (key in methods) {\n      if (!(key in proto)) redefine(proto, key, methods[key]);\n    } else $export($export.P + $export.F * (BUGGY || VALUES_BUG), NAME, methods);\n  }\n  return methods;\n};\n","'use strict';\nvar addToUnscopables = require('./_add-to-unscopables');\nvar step = require('./_iter-step');\nvar Iterators = require('./_iterators');\nvar toIObject = require('./_to-iobject');\n\n// 22.1.3.4 Array.prototype.entries()\n// 22.1.3.13 Array.prototype.keys()\n// 22.1.3.29 Array.prototype.values()\n// 22.1.3.30 Array.prototype[@@iterator]()\nmodule.exports = require('./_iter-define')(Array, 'Array', function (iterated, kind) {\n  this._t = toIObject(iterated); // target\n  this._i = 0;                   // next index\n  this._k = kind;                // kind\n// 22.1.5.2.1 %ArrayIteratorPrototype%.next()\n}, function () {\n  var O = this._t;\n  var kind = this._k;\n  var index = this._i++;\n  if (!O || index >= O.length) {\n    this._t = undefined;\n    return step(1);\n  }\n  if (kind == 'keys') return step(0, index);\n  if (kind == 'values') return step(0, O[index]);\n  return step(0, [index, O[index]]);\n}, 'values');\n\n// argumentsList[@@iterator] is %ArrayProto_values% (9.4.4.6, 9.4.4.7)\nIterators.Arguments = Iterators.Array;\n\naddToUnscopables('keys');\naddToUnscopables('values');\naddToUnscopables('entries');\n","'use strict';\nvar ctx = require('./_ctx');\nvar $export = require('./_export');\nvar toObject = require('./_to-object');\nvar call = require('./_iter-call');\nvar isArrayIter = require('./_is-array-iter');\nvar toLength = require('./_to-length');\nvar createProperty = require('./_create-property');\nvar getIterFn = require('./core.get-iterator-method');\n\n$export($export.S + $export.F * !require('./_iter-detect')(function (iter) { Array.from(iter); }), 'Array', {\n  // 22.1.2.1 Array.from(arrayLike, mapfn = undefined, thisArg = undefined)\n  from: function from(arrayLike /* , mapfn = undefined, thisArg = undefined */) {\n    var O = toObject(arrayLike);\n    var C = typeof this == 'function' ? this : Array;\n    var aLen = arguments.length;\n    var mapfn = aLen > 1 ? arguments[1] : undefined;\n    var mapping = mapfn !== undefined;\n    var index = 0;\n    var iterFn = getIterFn(O);\n    var length, result, step, iterator;\n    if (mapping) mapfn = ctx(mapfn, aLen > 2 ? arguments[2] : undefined, 2);\n    // if object isn't iterable or it's array with default iterator - use simple case\n    if (iterFn != undefined && !(C == Array && isArrayIter(iterFn))) {\n      for (iterator = iterFn.call(O), result = new C(); !(step = iterator.next()).done; index++) {\n        createProperty(result, index, mapping ? call(iterator, mapfn, [step.value, index], true) : step.value);\n      }\n    } else {\n      length = toLength(O.length);\n      for (result = new C(length); length > index; index++) {\n        createProperty(result, index, mapping ? mapfn(O[index], index) : O[index]);\n      }\n    }\n    result.length = index;\n    return result;\n  }\n});\n","module.exports = {};\n","require('../../modules/es6.string.iterator');\nrequire('../../modules/es6.array.from');\nmodule.exports = require('../../modules/_core').Array.from;\n","var classof = require('./_classof');\nvar ITERATOR = require('./_wks')('iterator');\nvar Iterators = require('./_iterators');\nmodule.exports = require('./_core').isIterable = function (it) {\n  var O = Object(it);\n  return O[ITERATOR] !== undefined\n    || '@@iterator' in O\n    // eslint-disable-next-line no-prototype-builtins\n    || Iterators.hasOwnProperty(classof(O));\n};\n","require('./es6.array.iterator');\nvar global = require('./_global');\nvar hide = require('./_hide');\nvar Iterators = require('./_iterators');\nvar TO_STRING_TAG = require('./_wks')('toStringTag');\n\nvar DOMIterables = ('CSSRuleList,CSSStyleDeclaration,CSSValueList,ClientRectList,DOMRectList,DOMStringList,' +\n  'DOMTokenList,DataTransferItemList,FileList,HTMLAllCollection,HTMLCollection,HTMLFormElement,HTMLSelectElement,' +\n  'MediaList,MimeTypeArray,NamedNodeMap,NodeList,PaintRequestList,Plugin,PluginArray,SVGLengthList,SVGNumberList,' +\n  'SVGPathSegList,SVGPointList,SVGStringList,SVGTransformList,SourceBufferList,StyleSheetList,TextTrackCueList,' +\n  'TextTrackList,TouchList').split(',');\n\nfor (var i = 0; i < DOMIterables.length; i++) {\n  var NAME = DOMIterables[i];\n  var Collection = global[NAME];\n  var proto = Collection && Collection.prototype;\n  if (proto && !proto[TO_STRING_TAG]) hide(proto, TO_STRING_TAG, NAME);\n  Iterators[NAME] = Iterators.Array;\n}\n","module.exports = function () { /* empty */ };\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"container-fluid envelope-wrap\"},[_c('div',{staticClass:\"envelope-wrap--title\"},[_c('h2',[_vm._v(_vm._s(_vm.$t(\"claim.claimed_text\"))+\" \"+_vm._s(_vm.envelope.claimed)+\" \"+_vm._s(_vm.tokenName)+\".\")])]),_c('div',{staticClass:\"container-fluid envelope-container envelope-container--claim\"},[_c('div',{staticClass:\"container-fluid envelope-info\"},[_c('div',{staticClass:\"row envelope-info--top\"},[_c('div',{staticClass:\"col-xs-5 left-align\"},[_vm._v(_vm._s(_vm.$t(\"envelope\"))+\" #\"+_vm._s(_vm.envelope.id))]),_c('div',{staticClass:\"col-xs-7 right-align\"},[(_vm.envelope.duration > 0)?_c('span',[_vm._v(\"\\n            Expires\\n            \"),_c('time',{attrs:{\"datetime\":\"2019-03-04T15:58:09.000Z\",\"title\":\"2019-03-04 15:58\"}},[_vm._v(\"in \"+_vm._s(_vm._f(\"duration\")(_vm.envelope.duration * 1000,'humanize')))])]):_c('span',[_vm._v(_vm._s(_vm.$t(\"expired\")))])])]),_c('div',[_c('svg',{staticClass:\"svg--icon-dog\",attrs:{\"version\":\"1.1\",\"x\":\"0px\",\"y\":\"0px\",\"viewBox\":\"0 0 100 100\",\"xml:space\":\"preserve\"}},[_c('circle',{attrs:{\"cx\":\"46.2\",\"cy\":\"35\",\"r\":\"3.7\"}}),_c('path',{attrs:{\"d\":\"M63.7,31.3c-3.1-8.7-11.4-15-21.2-15l-7.5,0c-6.1,0-11.3,3.6-13.7,8.8c-5.2,2.4-8.8,7.6-8.8,13.7v30H20v15h37.5V61.2l7.5,0  c12.4,0,22.5-10.1,22.5-22.5v-7.5H63.7z M65,53.7h-7.5c-4.1,0-7.5,3.4-7.5,7.5v15H27.5v-7.5c8.3,0,15-6.7,15-15v-7.5  c0-2.1-1.7-3.7-3.8-3.7S35,44.2,35,46.3v7.5c0,4.1-3.4,7.5-7.5,7.5l-7.5,0V38.8c0-4.1,3.4-7.5,7.5-7.5c0-4.1,3.4-7.5,7.5-7.5h7.5  c8.3,0,15,6.7,15,15H65h15C80,47,73.3,53.7,65,53.7z\"}})])]),_c('div',{staticClass:\"envelope-info--price\"},[_c('h2',[_vm._v(_vm._s(_vm.envelope.initialBalance || 0)+\" \"+_vm._s(_vm.tokenName))])]),_c('div',{staticClass:\"envelope-info--claim-details\"},[_c('p',[_c('span',[_vm._v(_vm._s(_vm.$t(\"claim.total_claims\"))+\": \"+_vm._s(_vm.envelope.totalClaimers || 0))])])]),_c('div',{staticClass:\"envelope-info--message\"},[_c('h2',[_vm._v(_vm._s(_vm.envelope.message || _vm.$t(\"create.comment_placeholder\")))]),_c('p',[_vm._v(\"– \"+_vm._s(_vm.envelope.nickname || _vm.$t(\"create.from.placeholder\")))])])])])])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <div class=\"container-fluid envelope-wrap\">\n    <div class=\"envelope-wrap--title\">\n      <h2>{{ $t(\"claim.claimed_text\") }} {{ envelope.claimed }} {{ tokenName }}.</h2>\n    </div>\n    <div class=\"container-fluid envelope-container envelope-container--claim\">\n      <div class=\"container-fluid envelope-info\">\n        <div class=\"row envelope-info--top\">\n          <div class=\"col-xs-5 left-align\">{{ $t(\"envelope\") }} #{{ envelope.id }}</div>\n          <div class=\"col-xs-7 right-align\">\n            <span v-if=\"envelope.duration > 0\">\n              Expires\n              <time datetime=\"2019-03-04T15:58:09.000Z\" title=\"2019-03-04 15:58\">in {{ envelope.duration * 1000 | duration('humanize') }}</time>\n            </span>\n            <span v-else>{{ $t(\"expired\") }}</span>\n          </div>\n        </div>\n        <div>\n          <svg class=\"svg--icon-dog\" version=\"1.1\" x=\"0px\" y=\"0px\" viewBox=\"0 0 100 100\" xml:space=\"preserve\">\n            <circle cx=\"46.2\" cy=\"35\" r=\"3.7\"></circle>\n            <path d=\"M63.7,31.3c-3.1-8.7-11.4-15-21.2-15l-7.5,0c-6.1,0-11.3,3.6-13.7,8.8c-5.2,2.4-8.8,7.6-8.8,13.7v30H20v15h37.5V61.2l7.5,0  c12.4,0,22.5-10.1,22.5-22.5v-7.5H63.7z M65,53.7h-7.5c-4.1,0-7.5,3.4-7.5,7.5v15H27.5v-7.5c8.3,0,15-6.7,15-15v-7.5  c0-2.1-1.7-3.7-3.8-3.7S35,44.2,35,46.3v7.5c0,4.1-3.4,7.5-7.5,7.5l-7.5,0V38.8c0-4.1,3.4-7.5,7.5-7.5c0-4.1,3.4-7.5,7.5-7.5h7.5  c8.3,0,15,6.7,15,15H65h15C80,47,73.3,53.7,65,53.7z\"></path>\n          </svg>\n        </div>\n        <div class=\"envelope-info--price\">\n          <h2>{{ envelope.initialBalance || 0 }} {{ tokenName }}</h2>\n        </div>\n        <div class=\"envelope-info--claim-details\">\n          <p>\n            <span>{{ $t(\"claim.total_claims\") }}: {{ envelope.totalClaimers || 0 }}</span>\n          </p>\n        </div>\n        <div class=\"envelope-info--message\">\n          <h2>{{ envelope.message || $t(\"create.comment_placeholder\") }}</h2>\n          <p>– {{ envelope.nickname || $t(\"create.from.placeholder\") }}</p>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n\n\n<script>\nimport IPFS from 'ipfs-mini'\nconst ipfs = new IPFS({ host: 'ipfs.infura.io', port: 5001, protocol: 'https' })\n\n\nexport default {\n    name: 'AfterClaimCard',\n    props: {\n      tokenName: String,\n      envelope: Object\n    },\n    mounted() {\n      if (this.envelope.messageLink) {\n        ipfs.cat(this.envelope.messageLink).then(message => {\n          this.envelope.message = message\n        })\n      }\n    },\n    watch: {\n      'envelope.messageLink': function (val, oldVal) {\n        if (this.envelope.messageLink) {\n          ipfs.cat(val).then(message => {\n            this.envelope.message = message\n          })\n        }\n      }\n    },\n    methods: {\n    }\n}\n</script>\n\n","import mod from \"-!../../node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js??ref--12-0!../../node_modules/_thread-loader@2.1.2@thread-loader/dist/cjs.js!../../node_modules/_babel-loader@8.0.5@babel-loader/lib/index.js!../../node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js??ref--0-0!../../node_modules/_vue-loader@15.7.0@vue-loader/lib/index.js??vue-loader-options!./AfterClaimCard.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js??ref--12-0!../../node_modules/_thread-loader@2.1.2@thread-loader/dist/cjs.js!../../node_modules/_babel-loader@8.0.5@babel-loader/lib/index.js!../../node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js??ref--0-0!../../node_modules/_vue-loader@15.7.0@vue-loader/lib/index.js??vue-loader-options!./AfterClaimCard.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./AfterClaimCard.vue?vue&type=template&id=5f2d4e70&\"\nimport script from \"./AfterClaimCard.vue?vue&type=script&lang=js&\"\nexport * from \"./AfterClaimCard.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/_vue-loader@15.7.0@vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","import _Array$isArray from \"../../core-js/array/is-array\";\nexport default function _arrayWithHoles(arr) {\n  if (_Array$isArray(arr)) return arr;\n}","import _getIterator from \"../../core-js/get-iterator\";\nexport default function _iterableToArrayLimit(arr, i) {\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = _getIterator(arr), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n}","import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || nonIterableRest();\n}","module.exports = require(\"core-js/library/fn/promise\");","module.exports = require(\"core-js/library/fn/is-iterable\");","import { blake2b256, publicKeyToAddress, secp256k1 } from './cry';\nimport { RLP } from './rlp';\n/** Transaction class defines VeChainThor's multi-clause transaction */\nexport class Transaction {\n    /** decode from Buffer to transaction */\n    static decode(raw) {\n        try {\n            const body = unsignedTxRLP.decode(raw);\n            return new Transaction(body);\n        }\n        catch (_a) {\n            const body = txRLP.decode(raw);\n            const sig = body.signature;\n            delete body.signature;\n            const tx = new Transaction(body);\n            tx.signature = Buffer.from(sig.slice(2), 'hex');\n            return tx;\n        }\n    }\n    /**\n     * construct a transaction object with given body\n     * @param body body of tx\n     */\n    constructor(body) {\n        this.body = Object.assign({}, body, { reserved: body.reserved || [] });\n    }\n    /**\n     * returns transaction ID\n     * null returned if something wrong (e.g. invalid signature)\n     */\n    get id() {\n        if (!this.signature) {\n            return null;\n        }\n        try {\n            const signingHash = blake2b256(unsignedTxRLP.encode(this.body));\n            const pubKey = secp256k1.recover(signingHash, this.signature);\n            const signer = publicKeyToAddress(pubKey);\n            return '0x' + blake2b256(signingHash, signer).toString('hex');\n        }\n        catch (_a) {\n            return null;\n        }\n    }\n    /** returns signer. null returned if no signature or not incorrectly signed */\n    get signer() {\n        if (!this.signature) {\n            return null;\n        }\n        try {\n            const signingHash = blake2b256(unsignedTxRLP.encode(this.body));\n            const pubKey = secp256k1.recover(signingHash, this.signature);\n            return '0x' + publicKeyToAddress(pubKey).toString('hex');\n        }\n        catch (_a) {\n            return null;\n        }\n    }\n    /** returns intrinsic gas it takes */\n    get intrinsicGas() {\n        return Transaction.intrinsicGas(this.body.clauses);\n    }\n    /** encode into Buffer */\n    encode() {\n        if (this.signature) {\n            const sigHex = '0x' + this.signature.toString('hex');\n            return txRLP.encode(Object.assign({}, this.body, { signature: sigHex }));\n        }\n        return unsignedTxRLP.encode(this.body);\n    }\n}\n(function (Transaction) {\n    /**\n     * calculates intrinsic gas that a tx costs with the given clauses.\n     * @param clauses\n     */\n    function intrinsicGas(clauses) {\n        const txGas = 5000;\n        const clauseGas = 16000;\n        const clauseGasContractCreation = 48000;\n        if (clauses.length === 0) {\n            return txGas + clauseGas;\n        }\n        return clauses.reduce((sum, c) => {\n            if (c.to) {\n                sum += clauseGas;\n            }\n            else {\n                sum += clauseGasContractCreation;\n            }\n            sum += dataGas(c.data);\n            return sum;\n        }, txGas);\n    }\n    Transaction.intrinsicGas = intrinsicGas;\n    function dataGas(data) {\n        const zgas = 4;\n        const nzgas = 68;\n        let sum = 0;\n        for (let i = 2; i < data.length; i += 2) {\n            if (data.substr(i, 2) === '00') {\n                sum += zgas;\n            }\n            else {\n                sum += nzgas;\n            }\n        }\n        return sum;\n    }\n})(Transaction || (Transaction = {}));\nconst unsignedTxRLP = new RLP({\n    name: 'tx',\n    kind: [\n        { name: 'chainTag', kind: new RLP.NumericKind(1) },\n        { name: 'blockRef', kind: new RLP.CompactFixedBlobKind(8) },\n        { name: 'expiration', kind: new RLP.NumericKind(4) },\n        {\n            name: 'clauses', kind: {\n                item: [\n                    { name: 'to', kind: new RLP.NullableFixedBlobKind(20) },\n                    { name: 'value', kind: new RLP.NumericKind(32) },\n                    { name: 'data', kind: new RLP.BlobKind() },\n                ],\n            },\n        },\n        { name: 'gasPriceCoef', kind: new RLP.NumericKind(1) },\n        { name: 'gas', kind: new RLP.NumericKind(8) },\n        { name: 'dependsOn', kind: new RLP.NullableFixedBlobKind(32) },\n        { name: 'nonce', kind: new RLP.NumericKind(8) },\n        { name: 'reserved', kind: new RLP.RawKind() },\n    ],\n});\nconst txRLP = new RLP({\n    name: 'tx',\n    kind: [...unsignedTxRLP.profile.kind, { name: 'signature', kind: new RLP.BlobKind() }],\n});\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidHJhbnNhY3Rpb24uanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi9zcmMvdHJhbnNhY3Rpb24udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFVBQVUsRUFBRSxrQkFBa0IsRUFBRSxTQUFTLEVBQUUsTUFBTSxPQUFPLENBQUE7QUFDakUsT0FBTyxFQUFFLEdBQUcsRUFBRSxNQUFNLE9BQU8sQ0FBQTtBQUUzQix1RUFBdUU7QUFDdkUsTUFBTTtJQUNGLHdDQUF3QztJQUNqQyxNQUFNLENBQUMsTUFBTSxDQUFDLEdBQVc7UUFDNUIsSUFBSTtZQUNBLE1BQU0sSUFBSSxHQUFHLGFBQWEsQ0FBQyxNQUFNLENBQUMsR0FBRyxDQUFDLENBQUE7WUFDdEMsT0FBTyxJQUFJLFdBQVcsQ0FBQyxJQUFJLENBQUMsQ0FBQTtTQUMvQjtRQUFDLFdBQU07WUFDSixNQUFNLElBQUksR0FBRyxLQUFLLENBQUMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxDQUFBO1lBQzlCLE1BQU0sR0FBRyxHQUFHLElBQUksQ0FBQyxTQUFtQixDQUFBO1lBQ3BDLE9BQU8sSUFBSSxDQUFDLFNBQVMsQ0FBQTtZQUVyQixNQUFNLEVBQUUsR0FBRyxJQUFJLFdBQVcsQ0FBQyxJQUFJLENBQUMsQ0FBQTtZQUNoQyxFQUFFLENBQUMsU0FBUyxHQUFHLE1BQU0sQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsRUFBRSxLQUFLLENBQUMsQ0FBQTtZQUMvQyxPQUFPLEVBQUUsQ0FBQTtTQUNaO0lBQ0wsQ0FBQztJQU9EOzs7T0FHRztJQUNILFlBQVksSUFBc0I7UUFDOUIsSUFBSSxDQUFDLElBQUkscUJBQVEsSUFBSSxJQUFFLFFBQVEsRUFBRSxJQUFJLENBQUMsUUFBUSxJQUFJLEVBQUUsR0FBRSxDQUFBO0lBQzFELENBQUM7SUFFRDs7O09BR0c7SUFDSCxJQUFJLEVBQUU7UUFDRixJQUFJLENBQUMsSUFBSSxDQUFDLFNBQVMsRUFBRTtZ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","require('../modules/web.dom.iterable');\nrequire('../modules/es6.string.iterator');\nmodule.exports = require('../modules/core.is-iterable');\n","// 22.1.2.2 / 15.4.3.2 Array.isArray(arg)\nvar $export = require('./_export');\n\n$export($export.S, 'Array', { isArray: require('./_is-array') });\n","module.exports = require(\"core-js/library/fn/array/from\");","'use strict';\nvar $at = require('./_string-at')(true);\n\n// 21.1.3.27 String.prototype[@@iterator]()\nrequire('./_iter-define')(String, 'String', function (iterated) {\n  this._t = String(iterated); // target\n  this._i = 0;                // next index\n// 21.1.5.2.1 %StringIteratorPrototype%.next()\n}, function () {\n  var O = this._t;\n  var index = this._i;\n  var point;\n  if (index >= O.length) return { value: undefined, done: true };\n  point = $at(O, index);\n  this._i += point.length;\n  return { value: point, done: false };\n});\n",";(function (globalObject) {\r\n  'use strict';\r\n\r\n/*\r\n *      bignumber.js v7.2.1\r\n *      A JavaScript library for arbitrary-precision arithmetic.\r\n *      https://github.com/MikeMcl/bignumber.js\r\n *      Copyright (c) 2018 Michael Mclaughlin <M8ch88l@gmail.com>\r\n *      MIT Licensed.\r\n *\r\n *      BigNumber.prototype methods     |  BigNumber methods\r\n *                                      |\r\n *      absoluteValue            abs    |  clone\r\n *      comparedTo                      |  config               set\r\n *      decimalPlaces            dp     |      DECIMAL_PLACES\r\n *      dividedBy                div    |      ROUNDING_MODE\r\n *      dividedToIntegerBy       idiv   |      EXPONENTIAL_AT\r\n *      exponentiatedBy          pow    |      RANGE\r\n *      integerValue                    |      CRYPTO\r\n *      isEqualTo                eq     |      MODULO_MODE\r\n *      isFinite                        |      POW_PRECISION\r\n *      isGreaterThan            gt     |      FORMAT\r\n *      isGreaterThanOrEqualTo   gte    |      ALPHABET\r\n *      isInteger                       |  isBigNumber\r\n *      isLessThan               lt     |  maximum              max\r\n *      isLessThanOrEqualTo      lte    |  minimum              min\r\n *      isNaN                           |  random\r\n *      isNegative                      |\r\n *      isPositive                      |\r\n *      isZero                          |\r\n *      minus                           |\r\n *      modulo                   mod    |\r\n *      multipliedBy             times  |\r\n *      negated                         |\r\n *      plus                            |\r\n *      precision                sd     |\r\n *      shiftedBy                       |\r\n *      squareRoot               sqrt   |\r\n *      toExponential                   |\r\n *      toFixed                         |\r\n *      toFormat                        |\r\n *      toFraction                      |\r\n *      toJSON                          |\r\n *      toNumber                        |\r\n *      toPrecision                     |\r\n *      toString                        |\r\n *      valueOf                         |\r\n *\r\n */\r\n\r\n\r\n  var BigNumber,\r\n    isNumeric = /^-?(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:e[+-]?\\d+)?$/i,\r\n\r\n    mathceil = Math.ceil,\r\n    mathfloor = Math.floor,\r\n\r\n    bignumberError = '[BigNumber Error] ',\r\n    tooManyDigits = bignumberError + 'Number primitive has more than 15 significant digits: ',\r\n\r\n    BASE = 1e14,\r\n    LOG_BASE = 14,\r\n    MAX_SAFE_INTEGER = 0x1fffffffffffff,         // 2^53 - 1\r\n    // MAX_INT32 = 0x7fffffff,                   // 2^31 - 1\r\n    POWS_TEN = [1, 10, 100, 1e3, 1e4, 1e5, 1e6, 1e7, 1e8, 1e9, 1e10, 1e11, 1e12, 1e13],\r\n    SQRT_BASE = 1e7,\r\n\r\n    // EDITABLE\r\n    // The limit on the value of DECIMAL_PLACES, TO_EXP_NEG, TO_EXP_POS, MIN_EXP, MAX_EXP, and\r\n    // the arguments to toExponential, toFixed, toFormat, and toPrecision.\r\n    MAX = 1E9;                                   // 0 to MAX_INT32\r\n\r\n\r\n  /*\r\n   * Create and return a BigNumber constructor.\r\n   */\r\n  function clone(configObject) {\r\n    var div, convertBase, parseNumeric,\r\n      P = BigNumber.prototype = { constructor: BigNumber, toString: null, valueOf: null },\r\n      ONE = new BigNumber(1),\r\n\r\n\r\n      //----------------------------- EDITABLE CONFIG DEFAULTS -------------------------------\r\n\r\n\r\n      // The default values below must be integers within the inclusive ranges stated.\r\n      // The values can also be changed at run-time using BigNumber.set.\r\n\r\n      // The maximum number of decimal places for operations involving division.\r\n      DECIMAL_PLACES = 20,                     // 0 to MAX\r\n\r\n      // The rounding mode used when rounding to the above decimal places, and when using\r\n      // toExponential, toFixed, toFormat and toPrecision, and round (default value).\r\n      // UP         0 Away from zero.\r\n      // DOWN       1 Towards zero.\r\n      // CEIL       2 Towards +Infinity.\r\n      // FLOOR      3 Towards -Infinity.\r\n      // HALF_UP    4 Towards nearest neighbour. If equidistant, up.\r\n      // HALF_DOWN  5 Towards nearest neighbour. If equidistant, down.\r\n      // HALF_EVEN  6 Towards nearest neighbour. If equidistant, towards even neighbour.\r\n      // HALF_CEIL  7 Towards nearest neighbour. If equidistant, towards +Infinity.\r\n      // HALF_FLOOR 8 Towards nearest neighbour. If equidistant, towards -Infinity.\r\n      ROUNDING_MODE = 4,                       // 0 to 8\r\n\r\n      // EXPONENTIAL_AT : [TO_EXP_NEG , TO_EXP_POS]\r\n\r\n      // The exponent value at and beneath which toString returns exponential notation.\r\n      // Number type: -7\r\n      TO_EXP_NEG = -7,                         // 0 to -MAX\r\n\r\n      // The exponent value at and above which toString returns exponential notation.\r\n      // Number type: 21\r\n      TO_EXP_POS = 21,                         // 0 to MAX\r\n\r\n      // RANGE : [MIN_EXP, MAX_EXP]\r\n\r\n      // The minimum exponent value, beneath which underflow to zero occurs.\r\n      // Number type: -324  (5e-324)\r\n      MIN_EXP = -1e7,                          // -1 to -MAX\r\n\r\n      // The maximum exponent value, above which overflow to Infinity occurs.\r\n      // Number type:  308  (1.7976931348623157e+308)\r\n      // For MAX_EXP > 1e7, e.g. new BigNumber('1e100000000').plus(1) may be slow.\r\n      MAX_EXP = 1e7,                           // 1 to MAX\r\n\r\n      // Whether to use cryptographically-secure random number generation, if available.\r\n      CRYPTO = false,                          // true or false\r\n\r\n      // The modulo mode used when calculating the modulus: a mod n.\r\n      // The quotient (q = a / n) is calculated according to the corresponding rounding mode.\r\n      // The remainder (r) is calculated as: r = a - n * q.\r\n      //\r\n      // UP        0 The remainder is positive if the dividend is negative, else is negative.\r\n      // DOWN      1 The remainder has the same sign as the dividend.\r\n      //             This modulo mode is commonly known as 'truncated division' and is\r\n      //             equivalent to (a % n) in JavaScript.\r\n      // FLOOR     3 The remainder has the same sign as the divisor (Python %).\r\n      // HALF_EVEN 6 This modulo mode implements the IEEE 754 remainder function.\r\n      // EUCLID    9 Euclidian division. q = sign(n) * floor(a / abs(n)).\r\n      //             The remainder is always positive.\r\n      //\r\n      // The truncated division, floored division, Euclidian division and IEEE 754 remainder\r\n      // modes are commonly used for the modulus operation.\r\n      // Although the other rounding modes can also be used, they may not give useful results.\r\n      MODULO_MODE = 1,                         // 0 to 9\r\n\r\n      // The maximum number of significant digits of the result of the exponentiatedBy operation.\r\n      // If POW_PRECISION is 0, there will be unlimited significant digits.\r\n      POW_PRECISION = 0,                    // 0 to MAX\r\n\r\n      // The format specification used by the BigNumber.prototype.toFormat method.\r\n      FORMAT = {\r\n        decimalSeparator: '.',\r\n        groupSeparator: ',',\r\n        groupSize: 3,\r\n        secondaryGroupSize: 0,\r\n        fractionGroupSeparator: '\\xA0',      // non-breaking space\r\n        fractionGroupSize: 0\r\n      },\r\n\r\n      // The alphabet used for base conversion.\r\n      // It must be at least 2 characters long, with no '.' or repeated character.\r\n      // '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ$_'\r\n      ALPHABET = '0123456789abcdefghijklmnopqrstuvwxyz';\r\n\r\n\r\n    //------------------------------------------------------------------------------------------\r\n\r\n\r\n    // CONSTRUCTOR\r\n\r\n\r\n    /*\r\n     * The BigNumber constructor and exported function.\r\n     * Create and return a new instance of a BigNumber object.\r\n     *\r\n     * n {number|string|BigNumber} A numeric value.\r\n     * [b] {number} The base of n. Integer, 2 to ALPHABET.length inclusive.\r\n     */\r\n    function BigNumber(n, b) {\r\n      var alphabet, c, caseChanged, e, i, isNum, len, str,\r\n        x = this;\r\n\r\n      // Enable constructor usage without new.\r\n      if (!(x instanceof BigNumber)) {\r\n\r\n        // Don't throw on constructor call without new (#81).\r\n        // '[BigNumber Error] Constructor call without new: {n}'\r\n        //throw Error(bignumberError + ' Constructor call without new: ' + n);\r\n        return new BigNumber(n, b);\r\n      }\r\n\r\n      if (b == null) {\r\n\r\n        // Duplicate.\r\n        if (n instanceof BigNumber) {\r\n          x.s = n.s;\r\n          x.e = n.e;\r\n          x.c = (n = n.c) ? n.slice() : n;\r\n          return;\r\n        }\r\n\r\n        isNum = typeof n == 'number';\r\n\r\n        if (isNum && n * 0 == 0) {\r\n\r\n          // Use `1 / n` to handle minus zero also.\r\n          x.s = 1 / n < 0 ? (n = -n, -1) : 1;\r\n\r\n          // Faster path for integers.\r\n          if (n === ~~n) {\r\n            for (e = 0, i = n; i >= 10; i /= 10, e++);\r\n            x.e = e;\r\n            x.c = [n];\r\n            return;\r\n          }\r\n\r\n          str = n + '';\r\n        } else {\r\n          if (!isNumeric.test(str = n + '')) return parseNumeric(x, str, isNum);\r\n          x.s = str.charCodeAt(0) == 45 ? (str = str.slice(1), -1) : 1;\r\n        }\r\n\r\n        // Decimal point?\r\n        if ((e = str.indexOf('.')) > -1) str = str.replace('.', '');\r\n\r\n        // Exponential form?\r\n        if ((i = str.search(/e/i)) > 0) {\r\n\r\n          // Determine exponent.\r\n          if (e < 0) e = i;\r\n          e += +str.slice(i + 1);\r\n          str = str.substring(0, i);\r\n        } else if (e < 0) {\r\n\r\n          // Integer.\r\n          e = str.length;\r\n        }\r\n\r\n      } else {\r\n\r\n        // '[BigNumber Error] Base {not a primitive number|not an integer|out of range}: {b}'\r\n        intCheck(b, 2, ALPHABET.length, 'Base');\r\n        str = n + '';\r\n\r\n        // Allow exponential notation to be used with base 10 argument, while\r\n        // also rounding to DECIMAL_PLACES as with other bases.\r\n        if (b == 10) {\r\n          x = new BigNumber(n instanceof BigNumber ? n : str);\r\n          return round(x, DECIMAL_PLACES + x.e + 1, ROUNDING_MODE);\r\n        }\r\n\r\n        isNum = typeof n == 'number';\r\n\r\n        if (isNum) {\r\n\r\n          // Avoid potential interpretation of Infinity and NaN as base 44+ values.\r\n          if (n * 0 != 0) return parseNumeric(x, str, isNum, b);\r\n\r\n          x.s = 1 / n < 0 ? (str = str.slice(1), -1) : 1;\r\n\r\n          // '[BigNumber Error] Number primitive has more than 15 significant digits: {n}'\r\n          if (BigNumber.DEBUG && str.replace(/^0\\.0*|\\./, '').length > 15) {\r\n            throw Error\r\n             (tooManyDigits + n);\r\n          }\r\n\r\n          // Prevent later check for length on converted number.\r\n          isNum = false;\r\n        } else {\r\n          x.s = str.charCodeAt(0) === 45 ? (str = str.slice(1), -1) : 1;\r\n        }\r\n\r\n        alphabet = ALPHABET.slice(0, b);\r\n        e = i = 0;\r\n\r\n        // Check that str is a valid base b number.\r\n        // Don't use RegExp so alphabet can contain special characters.\r\n        for (len = str.length; i < len; i++) {\r\n          if (alphabet.indexOf(c = str.charAt(i)) < 0) {\r\n            if (c == '.') {\r\n\r\n              // If '.' is not the first character and it has not be found before.\r\n              if (i > e) {\r\n                e = len;\r\n                continue;\r\n              }\r\n            } else if (!caseChanged) {\r\n\r\n              // Allow e.g. hexadecimal 'FF' as well as 'ff'.\r\n              if (str == str.toUpperCase() && (str = str.toLowerCase()) ||\r\n                  str == str.toLowerCase() && (str = str.toUpperCase())) {\r\n                caseChanged = true;\r\n                i = -1;\r\n                e = 0;\r\n                continue;\r\n              }\r\n            }\r\n\r\n            return parseNumeric(x, n + '', isNum, b);\r\n          }\r\n        }\r\n\r\n        str = convertBase(str, b, 10, x.s);\r\n\r\n        // Decimal point?\r\n        if ((e = str.indexOf('.')) > -1) str = str.replace('.', '');\r\n        else e = str.length;\r\n      }\r\n\r\n      // Determine leading zeros.\r\n      for (i = 0; str.charCodeAt(i) === 48; i++);\r\n\r\n      // Determine trailing zeros.\r\n      for (len = str.length; str.charCodeAt(--len) === 48;);\r\n\r\n      str = str.slice(i, ++len);\r\n\r\n      if (str) {\r\n        len -= i;\r\n\r\n        // '[BigNumber Error] Number primitive has more than 15 significant digits: {n}'\r\n        if (isNum && BigNumber.DEBUG &&\r\n          len > 15 && (n > MAX_SAFE_INTEGER || n !== mathfloor(n))) {\r\n            throw Error\r\n             (tooManyDigits + (x.s * n));\r\n        }\r\n\r\n        e = e - i - 1;\r\n\r\n         // Overflow?\r\n        if (e > MAX_EXP) {\r\n\r\n          // Infinity.\r\n          x.c = x.e = null;\r\n\r\n        // Underflow?\r\n        } else if (e < MIN_EXP) {\r\n\r\n          // Zero.\r\n          x.c = [x.e = 0];\r\n        } else {\r\n          x.e = e;\r\n          x.c = [];\r\n\r\n          // Transform base\r\n\r\n          // e is the base 10 exponent.\r\n          // i is where to slice str to get the first element of the coefficient array.\r\n          i = (e + 1) % LOG_BASE;\r\n          if (e < 0) i += LOG_BASE;\r\n\r\n          if (i < len) {\r\n            if (i) x.c.push(+str.slice(0, i));\r\n\r\n            for (len -= LOG_BASE; i < len;) {\r\n              x.c.push(+str.slice(i, i += LOG_BASE));\r\n            }\r\n\r\n            str = str.slice(i);\r\n            i = LOG_BASE - str.length;\r\n          } else {\r\n            i -= len;\r\n          }\r\n\r\n          for (; i--; str += '0');\r\n          x.c.push(+str);\r\n        }\r\n      } else {\r\n\r\n        // Zero.\r\n        x.c = [x.e = 0];\r\n      }\r\n    }\r\n\r\n\r\n    // CONSTRUCTOR PROPERTIES\r\n\r\n\r\n    BigNumber.clone = clone;\r\n\r\n    BigNumber.ROUND_UP = 0;\r\n    BigNumber.ROUND_DOWN = 1;\r\n    BigNumber.ROUND_CEIL = 2;\r\n    BigNumber.ROUND_FLOOR = 3;\r\n    BigNumber.ROUND_HALF_UP = 4;\r\n    BigNumber.ROUND_HALF_DOWN = 5;\r\n    BigNumber.ROUND_HALF_EVEN = 6;\r\n    BigNumber.ROUND_HALF_CEIL = 7;\r\n    BigNumber.ROUND_HALF_FLOOR = 8;\r\n    BigNumber.EUCLID = 9;\r\n\r\n\r\n    /*\r\n     * Configure infrequently-changing library-wide settings.\r\n     *\r\n     * Accept an object with the following optional properties (if the value of a property is\r\n     * a number, it must be an integer within the inclusive range stated):\r\n     *\r\n     *   DECIMAL_PLACES   {number}           0 to MAX\r\n     *   ROUNDING_MODE    {number}           0 to 8\r\n     *   EXPONENTIAL_AT   {number|number[]}  -MAX to MAX  or  [-MAX to 0, 0 to MAX]\r\n     *   RANGE            {number|number[]}  -MAX to MAX (not zero)  or  [-MAX to -1, 1 to MAX]\r\n     *   CRYPTO           {boolean}          true or false\r\n     *   MODULO_MODE      {number}           0 to 9\r\n     *   POW_PRECISION       {number}           0 to MAX\r\n     *   ALPHABET         {string}           A string of two or more unique characters which does\r\n     *                                       not contain '.'.\r\n     *   FORMAT           {object}           An object with some of the following properties:\r\n     *      decimalSeparator       {string}\r\n     *      groupSeparator         {string}\r\n     *      groupSize              {number}\r\n     *      secondaryGroupSize     {number}\r\n     *      fractionGroupSeparator {string}\r\n     *      fractionGroupSize      {number}\r\n     *\r\n     * (The values assigned to the above FORMAT object properties are not checked for validity.)\r\n     *\r\n     * E.g.\r\n     * BigNumber.config({ DECIMAL_PLACES : 20, ROUNDING_MODE : 4 })\r\n     *\r\n     * Ignore properties/parameters set to null or undefined, except for ALPHABET.\r\n     *\r\n     * Return an object with the properties current values.\r\n     */\r\n    BigNumber.config = BigNumber.set = function (obj) {\r\n      var p, v;\r\n\r\n      if (obj != null) {\r\n\r\n        if (typeof obj == 'object') {\r\n\r\n          // DECIMAL_PLACES {number} Integer, 0 to MAX inclusive.\r\n          // '[BigNumber Error] DECIMAL_PLACES {not a primitive number|not an integer|out of range}: {v}'\r\n          if (obj.hasOwnProperty(p = 'DECIMAL_PLACES')) {\r\n            v = obj[p];\r\n            intCheck(v, 0, MAX, p);\r\n            DECIMAL_PLACES = v;\r\n          }\r\n\r\n          // ROUNDING_MODE {number} Integer, 0 to 8 inclusive.\r\n          // '[BigNumber Error] ROUNDING_MODE {not a primitive number|not an integer|out of range}: {v}'\r\n          if (obj.hasOwnProperty(p = 'ROUNDING_MODE')) {\r\n            v = obj[p];\r\n            intCheck(v, 0, 8, p);\r\n            ROUNDING_MODE = v;\r\n          }\r\n\r\n          // EXPONENTIAL_AT {number|number[]}\r\n          // Integer, -MAX to MAX inclusive or\r\n          // [integer -MAX to 0 inclusive, 0 to MAX inclusive].\r\n          // '[BigNumber Error] EXPONENTIAL_AT {not a primitive number|not an integer|out of range}: {v}'\r\n          if (obj.hasOwnProperty(p = 'EXPONENTIAL_AT')) {\r\n            v = obj[p];\r\n            if (isArray(v)) {\r\n              intCheck(v[0], -MAX, 0, p);\r\n              intCheck(v[1], 0, MAX, p);\r\n              TO_EXP_NEG = v[0];\r\n              TO_EXP_POS = v[1];\r\n            } else {\r\n              intCheck(v, -MAX, MAX, p);\r\n              TO_EXP_NEG = -(TO_EXP_POS = v < 0 ? -v : v);\r\n            }\r\n          }\r\n\r\n          // RANGE {number|number[]} Non-zero integer, -MAX to MAX inclusive or\r\n          // [integer -MAX to -1 inclusive, integer 1 to MAX inclusive].\r\n          // '[BigNumber Error] RANGE {not a primitive number|not an integer|out of range|cannot be zero}: {v}'\r\n          if (obj.hasOwnProperty(p = 'RANGE')) {\r\n            v = obj[p];\r\n            if (isArray(v)) {\r\n              intCheck(v[0], -MAX, -1, p);\r\n              intCheck(v[1], 1, MAX, p);\r\n              MIN_EXP = v[0];\r\n              MAX_EXP = v[1];\r\n            } else {\r\n              intCheck(v, -MAX, MAX, p);\r\n              if (v) {\r\n                MIN_EXP = -(MAX_EXP = v < 0 ? -v : v);\r\n              } else {\r\n                throw Error\r\n                 (bignumberError + p + ' cannot be zero: ' + v);\r\n              }\r\n            }\r\n          }\r\n\r\n          // CRYPTO {boolean} true or false.\r\n          // '[BigNumber Error] CRYPTO not true or false: {v}'\r\n          // '[BigNumber Error] crypto unavailable'\r\n          if (obj.hasOwnProperty(p = 'CRYPTO')) {\r\n            v = obj[p];\r\n            if (v === !!v) {\r\n              if (v) {\r\n                if (typeof crypto != 'undefined' && crypto &&\r\n                 (crypto.getRandomValues || crypto.randomBytes)) {\r\n                  CRYPTO = v;\r\n                } else {\r\n                  CRYPTO = !v;\r\n                  throw Error\r\n                   (bignumberError + 'crypto unavailable');\r\n                }\r\n              } else {\r\n                CRYPTO = v;\r\n              }\r\n            } else {\r\n              throw Error\r\n               (bignumberError + p + ' not true or false: ' + v);\r\n            }\r\n          }\r\n\r\n          // MODULO_MODE {number} Integer, 0 to 9 inclusive.\r\n          // '[BigNumber Error] MODULO_MODE {not a primitive number|not an integer|out of range}: {v}'\r\n          if (obj.hasOwnProperty(p = 'MODULO_MODE')) {\r\n            v = obj[p];\r\n            intCheck(v, 0, 9, p);\r\n            MODULO_MODE = v;\r\n          }\r\n\r\n          // POW_PRECISION {number} Integer, 0 to MAX inclusive.\r\n          // '[BigNumber Error] POW_PRECISION {not a primitive number|not an integer|out of range}: {v}'\r\n          if (obj.hasOwnProperty(p = 'POW_PRECISION')) {\r\n            v = obj[p];\r\n            intCheck(v, 0, MAX, p);\r\n            POW_PRECISION = v;\r\n          }\r\n\r\n          // FORMAT {object}\r\n          // '[BigNumber Error] FORMAT not an object: {v}'\r\n          if (obj.hasOwnProperty(p = 'FORMAT')) {\r\n            v = obj[p];\r\n            if (typeof v == 'object') FORMAT = v;\r\n            else throw Error\r\n             (bignumberError + p + ' not an object: ' + v);\r\n          }\r\n\r\n          // ALPHABET {string}\r\n          // '[BigNumber Error] ALPHABET invalid: {v}'\r\n          if (obj.hasOwnProperty(p = 'ALPHABET')) {\r\n            v = obj[p];\r\n\r\n            // Disallow if only one character, or contains '.' or a repeated character.\r\n            if (typeof v == 'string' && !/^.$|\\.|(.).*\\1/.test(v)) {\r\n              ALPHABET = v;\r\n            } else {\r\n              throw Error\r\n               (bignumberError + p + ' invalid: ' + v);\r\n            }\r\n          }\r\n\r\n        } else {\r\n\r\n          // '[BigNumber Error] Object expected: {v}'\r\n          throw Error\r\n           (bignumberError + 'Object expected: ' + obj);\r\n        }\r\n      }\r\n\r\n      return {\r\n        DECIMAL_PLACES: DECIMAL_PLACES,\r\n        ROUNDING_MODE: ROUNDING_MODE,\r\n        EXPONENTIAL_AT: [TO_EXP_NEG, TO_EXP_POS],\r\n        RANGE: [MIN_EXP, MAX_EXP],\r\n        CRYPTO: CRYPTO,\r\n        MODULO_MODE: MODULO_MODE,\r\n        POW_PRECISION: POW_PRECISION,\r\n        FORMAT: FORMAT,\r\n        ALPHABET: ALPHABET\r\n      };\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if v is a BigNumber instance, otherwise return false.\r\n     *\r\n     * v {any}\r\n     */\r\n    BigNumber.isBigNumber = function (v) {\r\n      return v instanceof BigNumber || v && v._isBigNumber === true || false;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a new BigNumber whose value is the maximum of the arguments.\r\n     *\r\n     * arguments {number|string|BigNumber}\r\n     */\r\n    BigNumber.maximum = BigNumber.max = function () {\r\n      return maxOrMin(arguments, P.lt);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a new BigNumber whose value is the minimum of the arguments.\r\n     *\r\n     * arguments {number|string|BigNumber}\r\n     */\r\n    BigNumber.minimum = BigNumber.min = function () {\r\n      return maxOrMin(arguments, P.gt);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a new BigNumber with a random value equal to or greater than 0 and less than 1,\r\n     * and with dp, or DECIMAL_PLACES if dp is omitted, decimal places (or less if trailing\r\n     * zeros are produced).\r\n     *\r\n     * [dp] {number} Decimal places. Integer, 0 to MAX inclusive.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp}'\r\n     * '[BigNumber Error] crypto unavailable'\r\n     */\r\n    BigNumber.random = (function () {\r\n      var pow2_53 = 0x20000000000000;\r\n\r\n      // Return a 53 bit integer n, where 0 <= n < 9007199254740992.\r\n      // Check if Math.random() produces more than 32 bits of randomness.\r\n      // If it does, assume at least 53 bits are produced, otherwise assume at least 30 bits.\r\n      // 0x40000000 is 2^30, 0x800000 is 2^23, 0x1fffff is 2^21 - 1.\r\n      var random53bitInt = (Math.random() * pow2_53) & 0x1fffff\r\n       ? function () { return mathfloor(Math.random() * pow2_53); }\r\n       : function () { return ((Math.random() * 0x40000000 | 0) * 0x800000) +\r\n         (Math.random() * 0x800000 | 0); };\r\n\r\n      return function (dp) {\r\n        var a, b, e, k, v,\r\n          i = 0,\r\n          c = [],\r\n          rand = new BigNumber(ONE);\r\n\r\n        if (dp == null) dp = DECIMAL_PLACES;\r\n        else intCheck(dp, 0, MAX);\r\n\r\n        k = mathceil(dp / LOG_BASE);\r\n\r\n        if (CRYPTO) {\r\n\r\n          // Browsers supporting crypto.getRandomValues.\r\n          if (crypto.getRandomValues) {\r\n\r\n            a = crypto.getRandomValues(new Uint32Array(k *= 2));\r\n\r\n            for (; i < k;) {\r\n\r\n              // 53 bits:\r\n              // ((Math.pow(2, 32) - 1) * Math.pow(2, 21)).toString(2)\r\n              // 11111 11111111 11111111 11111111 11100000 00000000 00000000\r\n              // ((Math.pow(2, 32) - 1) >>> 11).toString(2)\r\n              //                                     11111 11111111 11111111\r\n              // 0x20000 is 2^21.\r\n              v = a[i] * 0x20000 + (a[i + 1] >>> 11);\r\n\r\n              // Rejection sampling:\r\n              // 0 <= v < 9007199254740992\r\n              // Probability that v >= 9e15, is\r\n              // 7199254740992 / 9007199254740992 ~= 0.0008, i.e. 1 in 1251\r\n              if (v >= 9e15) {\r\n                b = crypto.getRandomValues(new Uint32Array(2));\r\n                a[i] = b[0];\r\n                a[i + 1] = b[1];\r\n              } else {\r\n\r\n                // 0 <= v <= 8999999999999999\r\n                // 0 <= (v % 1e14) <= 99999999999999\r\n                c.push(v % 1e14);\r\n                i += 2;\r\n              }\r\n            }\r\n            i = k / 2;\r\n\r\n          // Node.js supporting crypto.randomBytes.\r\n          } else if (crypto.randomBytes) {\r\n\r\n            // buffer\r\n            a = crypto.randomBytes(k *= 7);\r\n\r\n            for (; i < k;) {\r\n\r\n              // 0x1000000000000 is 2^48, 0x10000000000 is 2^40\r\n              // 0x100000000 is 2^32, 0x1000000 is 2^24\r\n              // 11111 11111111 11111111 11111111 11111111 11111111 11111111\r\n              // 0 <= v < 9007199254740992\r\n              v = ((a[i] & 31) * 0x1000000000000) + (a[i + 1] * 0x10000000000) +\r\n                 (a[i + 2] * 0x100000000) + (a[i + 3] * 0x1000000) +\r\n                 (a[i + 4] << 16) + (a[i + 5] << 8) + a[i + 6];\r\n\r\n              if (v >= 9e15) {\r\n                crypto.randomBytes(7).copy(a, i);\r\n              } else {\r\n\r\n                // 0 <= (v % 1e14) <= 99999999999999\r\n                c.push(v % 1e14);\r\n                i += 7;\r\n              }\r\n            }\r\n            i = k / 7;\r\n          } else {\r\n            CRYPTO = false;\r\n            throw Error\r\n             (bignumberError + 'crypto unavailable');\r\n          }\r\n        }\r\n\r\n        // Use Math.random.\r\n        if (!CRYPTO) {\r\n\r\n          for (; i < k;) {\r\n            v = random53bitInt();\r\n            if (v < 9e15) c[i++] = v % 1e14;\r\n          }\r\n        }\r\n\r\n        k = c[--i];\r\n        dp %= LOG_BASE;\r\n\r\n        // Convert trailing digits to zeros according to dp.\r\n        if (k && dp) {\r\n          v = POWS_TEN[LOG_BASE - dp];\r\n          c[i] = mathfloor(k / v) * v;\r\n        }\r\n\r\n        // Remove trailing elements which are zero.\r\n        for (; c[i] === 0; c.pop(), i--);\r\n\r\n        // Zero?\r\n        if (i < 0) {\r\n          c = [e = 0];\r\n        } else {\r\n\r\n          // Remove leading elements which are zero and adjust exponent accordingly.\r\n          for (e = -1 ; c[0] === 0; c.splice(0, 1), e -= LOG_BASE);\r\n\r\n          // Count the digits of the first element of c to determine leading zeros, and...\r\n          for (i = 1, v = c[0]; v >= 10; v /= 10, i++);\r\n\r\n          // adjust the exponent accordingly.\r\n          if (i < LOG_BASE) e -= LOG_BASE - i;\r\n        }\r\n\r\n        rand.e = e;\r\n        rand.c = c;\r\n        return rand;\r\n      };\r\n    })();\r\n\r\n\r\n    // PRIVATE FUNCTIONS\r\n\r\n\r\n    // Called by BigNumber and BigNumber.prototype.toString.\r\n    convertBase = (function () {\r\n      var decimal = '0123456789';\r\n\r\n      /*\r\n       * Convert string of baseIn to an array of numbers of baseOut.\r\n       * Eg. toBaseOut('255', 10, 16) returns [15, 15].\r\n       * Eg. toBaseOut('ff', 16, 10) returns [2, 5, 5].\r\n       */\r\n      function toBaseOut(str, baseIn, baseOut, alphabet) {\r\n        var j,\r\n          arr = [0],\r\n          arrL,\r\n          i = 0,\r\n          len = str.length;\r\n\r\n        for (; i < len;) {\r\n          for (arrL = arr.length; arrL--; arr[arrL] *= baseIn);\r\n\r\n          arr[0] += alphabet.indexOf(str.charAt(i++));\r\n\r\n          for (j = 0; j < arr.length; j++) {\r\n\r\n            if (arr[j] > baseOut - 1) {\r\n              if (arr[j + 1] == null) arr[j + 1] = 0;\r\n              arr[j + 1] += arr[j] / baseOut | 0;\r\n              arr[j] %= baseOut;\r\n            }\r\n          }\r\n        }\r\n\r\n        return arr.reverse();\r\n      }\r\n\r\n      // Convert a numeric string of baseIn to a numeric string of baseOut.\r\n      // If the caller is toString, we are converting from base 10 to baseOut.\r\n      // If the caller is BigNumber, we are converting from baseIn to base 10.\r\n      return function (str, baseIn, baseOut, sign, callerIsToString) {\r\n        var alphabet, d, e, k, r, x, xc, y,\r\n          i = str.indexOf('.'),\r\n          dp = DECIMAL_PLACES,\r\n          rm = ROUNDING_MODE;\r\n\r\n        // Non-integer.\r\n        if (i >= 0) {\r\n          k = POW_PRECISION;\r\n\r\n          // Unlimited precision.\r\n          POW_PRECISION = 0;\r\n          str = str.replace('.', '');\r\n          y = new BigNumber(baseIn);\r\n          x = y.pow(str.length - i);\r\n          POW_PRECISION = k;\r\n\r\n          // Convert str as if an integer, then restore the fraction part by dividing the\r\n          // result by its base raised to a power.\r\n\r\n          y.c = toBaseOut(toFixedPoint(coeffToString(x.c), x.e, '0'),\r\n           10, baseOut, decimal);\r\n          y.e = y.c.length;\r\n        }\r\n\r\n        // Convert the number as integer.\r\n\r\n        xc = toBaseOut(str, baseIn, baseOut, callerIsToString\r\n         ? (alphabet = ALPHABET, decimal)\r\n         : (alphabet = decimal, ALPHABET));\r\n\r\n        // xc now represents str as an integer and converted to baseOut. e is the exponent.\r\n        e = k = xc.length;\r\n\r\n        // Remove trailing zeros.\r\n        for (; xc[--k] == 0; xc.pop());\r\n\r\n        // Zero?\r\n        if (!xc[0]) return alphabet.charAt(0);\r\n\r\n        // Does str represent an integer? If so, no need for the division.\r\n        if (i < 0) {\r\n          --e;\r\n        } else {\r\n          x.c = xc;\r\n          x.e = e;\r\n\r\n          // The sign is needed for correct rounding.\r\n          x.s = sign;\r\n          x = div(x, y, dp, rm, baseOut);\r\n          xc = x.c;\r\n          r = x.r;\r\n          e = x.e;\r\n        }\r\n\r\n        // xc now represents str converted to baseOut.\r\n\r\n        // THe index of the rounding digit.\r\n        d = e + dp + 1;\r\n\r\n        // The rounding digit: the digit to the right of the digit that may be rounded up.\r\n        i = xc[d];\r\n\r\n        // Look at the rounding digits and mode to determine whether to round up.\r\n\r\n        k = baseOut / 2;\r\n        r = r || d < 0 || xc[d + 1] != null;\r\n\r\n        r = rm < 4 ? (i != null || r) && (rm == 0 || rm == (x.s < 0 ? 3 : 2))\r\n              : i > k || i == k &&(rm == 4 || r || rm == 6 && xc[d - 1] & 1 ||\r\n               rm == (x.s < 0 ? 8 : 7));\r\n\r\n        // If the index of the rounding digit is not greater than zero, or xc represents\r\n        // zero, then the result of the base conversion is zero or, if rounding up, a value\r\n        // such as 0.00001.\r\n        if (d < 1 || !xc[0]) {\r\n\r\n          // 1^-dp or 0\r\n          str = r ? toFixedPoint(alphabet.charAt(1), -dp, alphabet.charAt(0))\r\n              : alphabet.charAt(0);\r\n        } else {\r\n\r\n          // Truncate xc to the required number of decimal places.\r\n          xc.length = d;\r\n\r\n          // Round up?\r\n          if (r) {\r\n\r\n            // Rounding up may mean the previous digit has to be rounded up and so on.\r\n            for (--baseOut; ++xc[--d] > baseOut;) {\r\n              xc[d] = 0;\r\n\r\n              if (!d) {\r\n                ++e;\r\n                xc = [1].concat(xc);\r\n              }\r\n            }\r\n          }\r\n\r\n          // Determine trailing zeros.\r\n          for (k = xc.length; !xc[--k];);\r\n\r\n          // E.g. [4, 11, 15] becomes 4bf.\r\n          for (i = 0, str = ''; i <= k; str += alphabet.charAt(xc[i++]));\r\n\r\n          // Add leading zeros, decimal point and trailing zeros as required.\r\n          str = toFixedPoint(str, e, alphabet.charAt(0));\r\n        }\r\n\r\n        // The caller will add the sign.\r\n        return str;\r\n      };\r\n    })();\r\n\r\n\r\n    // Perform division in the specified base. Called by div and convertBase.\r\n    div = (function () {\r\n\r\n      // Assume non-zero x and k.\r\n      function multiply(x, k, base) {\r\n        var m, temp, xlo, xhi,\r\n          carry = 0,\r\n          i = x.length,\r\n          klo = k % SQRT_BASE,\r\n          khi = k / SQRT_BASE | 0;\r\n\r\n        for (x = x.slice(); i--;) {\r\n          xlo = x[i] % SQRT_BASE;\r\n          xhi = x[i] / SQRT_BASE | 0;\r\n          m = khi * xlo + xhi * klo;\r\n          temp = klo * xlo + ((m % SQRT_BASE) * SQRT_BASE) + carry;\r\n          carry = (temp / base | 0) + (m / SQRT_BASE | 0) + khi * xhi;\r\n          x[i] = temp % base;\r\n        }\r\n\r\n        if (carry) x = [carry].concat(x);\r\n\r\n        return x;\r\n      }\r\n\r\n      function compare(a, b, aL, bL) {\r\n        var i, cmp;\r\n\r\n        if (aL != bL) {\r\n          cmp = aL > bL ? 1 : -1;\r\n        } else {\r\n\r\n          for (i = cmp = 0; i < aL; i++) {\r\n\r\n            if (a[i] != b[i]) {\r\n              cmp = a[i] > b[i] ? 1 : -1;\r\n              break;\r\n            }\r\n          }\r\n        }\r\n\r\n        return cmp;\r\n      }\r\n\r\n      function subtract(a, b, aL, base) {\r\n        var i = 0;\r\n\r\n        // Subtract b from a.\r\n        for (; aL--;) {\r\n          a[aL] -= i;\r\n          i = a[aL] < b[aL] ? 1 : 0;\r\n          a[aL] = i * base + a[aL] - b[aL];\r\n        }\r\n\r\n        // Remove leading zeros.\r\n        for (; !a[0] && a.length > 1; a.splice(0, 1));\r\n      }\r\n\r\n      // x: dividend, y: divisor.\r\n      return function (x, y, dp, rm, base) {\r\n        var cmp, e, i, more, n, prod, prodL, q, qc, rem, remL, rem0, xi, xL, yc0,\r\n          yL, yz,\r\n          s = x.s == y.s ? 1 : -1,\r\n          xc = x.c,\r\n          yc = y.c;\r\n\r\n        // Either NaN, Infinity or 0?\r\n        if (!xc || !xc[0] || !yc || !yc[0]) {\r\n\r\n          return new BigNumber(\r\n\r\n           // Return NaN if either NaN, or both Infinity or 0.\r\n           !x.s || !y.s || (xc ? yc && xc[0] == yc[0] : !yc) ? NaN :\r\n\r\n            // Return ±0 if x is ±0 or y is ±Infinity, or return ±Infinity as y is ±0.\r\n            xc && xc[0] == 0 || !yc ? s * 0 : s / 0\r\n         );\r\n        }\r\n\r\n        q = new BigNumber(s);\r\n        qc = q.c = [];\r\n        e = x.e - y.e;\r\n        s = dp + e + 1;\r\n\r\n        if (!base) {\r\n          base = BASE;\r\n          e = bitFloor(x.e / LOG_BASE) - bitFloor(y.e / LOG_BASE);\r\n          s = s / LOG_BASE | 0;\r\n        }\r\n\r\n        // Result exponent may be one less then the current value of e.\r\n        // The coefficients of the BigNumbers from convertBase may have trailing zeros.\r\n        for (i = 0; yc[i] == (xc[i] || 0); i++);\r\n\r\n        if (yc[i] > (xc[i] || 0)) e--;\r\n\r\n        if (s < 0) {\r\n          qc.push(1);\r\n          more = true;\r\n        } else {\r\n          xL = xc.length;\r\n          yL = yc.length;\r\n          i = 0;\r\n          s += 2;\r\n\r\n          // Normalise xc and yc so highest order digit of yc is >= base / 2.\r\n\r\n          n = mathfloor(base / (yc[0] + 1));\r\n\r\n          // Not necessary, but to handle odd bases where yc[0] == (base / 2) - 1.\r\n          // if (n > 1 || n++ == 1 && yc[0] < base / 2) {\r\n          if (n > 1) {\r\n            yc = multiply(yc, n, base);\r\n            xc = multiply(xc, n, base);\r\n            yL = yc.length;\r\n            xL = xc.length;\r\n          }\r\n\r\n          xi = yL;\r\n          rem = xc.slice(0, yL);\r\n          remL = rem.length;\r\n\r\n          // Add zeros to make remainder as long as divisor.\r\n          for (; remL < yL; rem[remL++] = 0);\r\n          yz = yc.slice();\r\n          yz = [0].concat(yz);\r\n          yc0 = yc[0];\r\n          if (yc[1] >= base / 2) yc0++;\r\n          // Not necessary, but to prevent trial digit n > base, when using base 3.\r\n          // else if (base == 3 && yc0 == 1) yc0 = 1 + 1e-15;\r\n\r\n          do {\r\n            n = 0;\r\n\r\n            // Compare divisor and remainder.\r\n            cmp = compare(yc, rem, yL, remL);\r\n\r\n            // If divisor < remainder.\r\n            if (cmp < 0) {\r\n\r\n              // Calculate trial digit, n.\r\n\r\n              rem0 = rem[0];\r\n              if (yL != remL) rem0 = rem0 * base + (rem[1] || 0);\r\n\r\n              // n is how many times the divisor goes into the current remainder.\r\n              n = mathfloor(rem0 / yc0);\r\n\r\n              //  Algorithm:\r\n              //  product = divisor multiplied by trial digit (n).\r\n              //  Compare product and remainder.\r\n              //  If product is greater than remainder:\r\n              //    Subtract divisor from product, decrement trial digit.\r\n              //  Subtract product from remainder.\r\n              //  If product was less than remainder at the last compare:\r\n              //    Compare new remainder and divisor.\r\n              //    If remainder is greater than divisor:\r\n              //      Subtract divisor from remainder, increment trial digit.\r\n\r\n              if (n > 1) {\r\n\r\n                // n may be > base only when base is 3.\r\n                if (n >= base) n = base - 1;\r\n\r\n                // product = divisor * trial digit.\r\n                prod = multiply(yc, n, base);\r\n                prodL = prod.length;\r\n                remL = rem.length;\r\n\r\n                // Compare product and remainder.\r\n                // If product > remainder then trial digit n too high.\r\n                // n is 1 too high about 5% of the time, and is not known to have\r\n                // ever been more than 1 too high.\r\n                while (compare(prod, rem, prodL, remL) == 1) {\r\n                  n--;\r\n\r\n                  // Subtract divisor from product.\r\n                  subtract(prod, yL < prodL ? yz : yc, prodL, base);\r\n                  prodL = prod.length;\r\n                  cmp = 1;\r\n                }\r\n              } else {\r\n\r\n                // n is 0 or 1, cmp is -1.\r\n                // If n is 0, there is no need to compare yc and rem again below,\r\n                // so change cmp to 1 to avoid it.\r\n                // If n is 1, leave cmp as -1, so yc and rem are compared again.\r\n                if (n == 0) {\r\n\r\n                  // divisor < remainder, so n must be at least 1.\r\n                  cmp = n = 1;\r\n                }\r\n\r\n                // product = divisor\r\n                prod = yc.slice();\r\n                prodL = prod.length;\r\n              }\r\n\r\n              if (prodL < remL) prod = [0].concat(prod);\r\n\r\n              // Subtract product from remainder.\r\n              subtract(rem, prod, remL, base);\r\n              remL = rem.length;\r\n\r\n               // If product was < remainder.\r\n              if (cmp == -1) {\r\n\r\n                // Compare divisor and new remainder.\r\n                // If divisor < new remainder, subtract divisor from remainder.\r\n                // Trial digit n too low.\r\n                // n is 1 too low about 5% of the time, and very rarely 2 too low.\r\n                while (compare(yc, rem, yL, remL) < 1) {\r\n                  n++;\r\n\r\n                  // Subtract divisor from remainder.\r\n                  subtract(rem, yL < remL ? yz : yc, remL, base);\r\n                  remL = rem.length;\r\n                }\r\n              }\r\n            } else if (cmp === 0) {\r\n              n++;\r\n              rem = [0];\r\n            } // else cmp === 1 and n will be 0\r\n\r\n            // Add the next digit, n, to the result array.\r\n            qc[i++] = n;\r\n\r\n            // Update the remainder.\r\n            if (rem[0]) {\r\n              rem[remL++] = xc[xi] || 0;\r\n            } else {\r\n              rem = [xc[xi]];\r\n              remL = 1;\r\n            }\r\n          } while ((xi++ < xL || rem[0] != null) && s--);\r\n\r\n          more = rem[0] != null;\r\n\r\n          // Leading zero?\r\n          if (!qc[0]) qc.splice(0, 1);\r\n        }\r\n\r\n        if (base == BASE) {\r\n\r\n          // To calculate q.e, first get the number of digits of qc[0].\r\n          for (i = 1, s = qc[0]; s >= 10; s /= 10, i++);\r\n\r\n          round(q, dp + (q.e = i + e * LOG_BASE - 1) + 1, rm, more);\r\n\r\n        // Caller is convertBase.\r\n        } else {\r\n          q.e = e;\r\n          q.r = +more;\r\n        }\r\n\r\n        return q;\r\n      };\r\n    })();\r\n\r\n\r\n    /*\r\n     * Return a string representing the value of BigNumber n in fixed-point or exponential\r\n     * notation rounded to the specified decimal places or significant digits.\r\n     *\r\n     * n: a BigNumber.\r\n     * i: the index of the last digit required (i.e. the digit that may be rounded up).\r\n     * rm: the rounding mode.\r\n     * id: 1 (toExponential) or 2 (toPrecision).\r\n     */\r\n    function format(n, i, rm, id) {\r\n      var c0, e, ne, len, str;\r\n\r\n      if (rm == null) rm = ROUNDING_MODE;\r\n      else intCheck(rm, 0, 8);\r\n\r\n      if (!n.c) return n.toString();\r\n\r\n      c0 = n.c[0];\r\n      ne = n.e;\r\n\r\n      if (i == null) {\r\n        str = coeffToString(n.c);\r\n        str = id == 1 || id == 2 && ne <= TO_EXP_NEG\r\n         ? toExponential(str, ne)\r\n         : toFixedPoint(str, ne, '0');\r\n      } else {\r\n        n = round(new BigNumber(n), i, rm);\r\n\r\n        // n.e may have changed if the value was rounded up.\r\n        e = n.e;\r\n\r\n        str = coeffToString(n.c);\r\n        len = str.length;\r\n\r\n        // toPrecision returns exponential notation if the number of significant digits\r\n        // specified is less than the number of digits necessary to represent the integer\r\n        // part of the value in fixed-point notation.\r\n\r\n        // Exponential notation.\r\n        if (id == 1 || id == 2 && (i <= e || e <= TO_EXP_NEG)) {\r\n\r\n          // Append zeros?\r\n          for (; len < i; str += '0', len++);\r\n          str = toExponential(str, e);\r\n\r\n        // Fixed-point notation.\r\n        } else {\r\n          i -= ne;\r\n          str = toFixedPoint(str, e, '0');\r\n\r\n          // Append zeros?\r\n          if (e + 1 > len) {\r\n            if (--i > 0) for (str += '.'; i--; str += '0');\r\n          } else {\r\n            i += e - len;\r\n            if (i > 0) {\r\n              if (e + 1 == len) str += '.';\r\n              for (; i--; str += '0');\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      return n.s < 0 && c0 ? '-' + str : str;\r\n    }\r\n\r\n\r\n    // Handle BigNumber.max and BigNumber.min.\r\n    function maxOrMin(args, method) {\r\n      var m, n,\r\n        i = 0;\r\n\r\n      if (isArray(args[0])) args = args[0];\r\n      m = new BigNumber(args[0]);\r\n\r\n      for (; ++i < args.length;) {\r\n        n = new BigNumber(args[i]);\r\n\r\n        // If any number is NaN, return NaN.\r\n        if (!n.s) {\r\n          m = n;\r\n          break;\r\n        } else if (method.call(m, n)) {\r\n          m = n;\r\n        }\r\n      }\r\n\r\n      return m;\r\n    }\r\n\r\n\r\n    /*\r\n     * Strip trailing zeros, calculate base 10 exponent and check against MIN_EXP and MAX_EXP.\r\n     * Called by minus, plus and times.\r\n     */\r\n    function normalise(n, c, e) {\r\n      var i = 1,\r\n        j = c.length;\r\n\r\n       // Remove trailing zeros.\r\n      for (; !c[--j]; c.pop());\r\n\r\n      // Calculate the base 10 exponent. First get the number of digits of c[0].\r\n      for (j = c[0]; j >= 10; j /= 10, i++);\r\n\r\n      // Overflow?\r\n      if ((e = i + e * LOG_BASE - 1) > MAX_EXP) {\r\n\r\n        // Infinity.\r\n        n.c = n.e = null;\r\n\r\n      // Underflow?\r\n      } else if (e < MIN_EXP) {\r\n\r\n        // Zero.\r\n        n.c = [n.e = 0];\r\n      } else {\r\n        n.e = e;\r\n        n.c = c;\r\n      }\r\n\r\n      return n;\r\n    }\r\n\r\n\r\n    // Handle values that fail the validity test in BigNumber.\r\n    parseNumeric = (function () {\r\n      var basePrefix = /^(-?)0([xbo])(?=\\w[\\w.]*$)/i,\r\n        dotAfter = /^([^.]+)\\.$/,\r\n        dotBefore = /^\\.([^.]+)$/,\r\n        isInfinityOrNaN = /^-?(Infinity|NaN)$/,\r\n        whitespaceOrPlus = /^\\s*\\+(?=[\\w.])|^\\s+|\\s+$/g;\r\n\r\n      return function (x, str, isNum, b) {\r\n        var base,\r\n          s = isNum ? str : str.replace(whitespaceOrPlus, '');\r\n\r\n        // No exception on ±Infinity or NaN.\r\n        if (isInfinityOrNaN.test(s)) {\r\n          x.s = isNaN(s) ? null : s < 0 ? -1 : 1;\r\n          x.c = x.e = null;\r\n        } else {\r\n          if (!isNum) {\r\n\r\n            // basePrefix = /^(-?)0([xbo])(?=\\w[\\w.]*$)/i\r\n            s = s.replace(basePrefix, function (m, p1, p2) {\r\n              base = (p2 = p2.toLowerCase()) == 'x' ? 16 : p2 == 'b' ? 2 : 8;\r\n              return !b || b == base ? p1 : m;\r\n            });\r\n\r\n            if (b) {\r\n              base = b;\r\n\r\n              // E.g. '1.' to '1', '.1' to '0.1'\r\n              s = s.replace(dotAfter, '$1').replace(dotBefore, '0.$1');\r\n            }\r\n\r\n            if (str != s) return new BigNumber(s, base);\r\n          }\r\n\r\n          // '[BigNumber Error] Not a number: {n}'\r\n          // '[BigNumber Error] Not a base {b} number: {n}'\r\n          if (BigNumber.DEBUG) {\r\n            throw Error\r\n              (bignumberError + 'Not a' + (b ? ' base ' + b : '') + ' number: ' + str);\r\n          }\r\n\r\n          // NaN\r\n          x.c = x.e = x.s = null;\r\n        }\r\n      }\r\n    })();\r\n\r\n\r\n    /*\r\n     * Round x to sd significant digits using rounding mode rm. Check for over/under-flow.\r\n     * If r is truthy, it is known that there are more digits after the rounding digit.\r\n     */\r\n    function round(x, sd, rm, r) {\r\n      var d, i, j, k, n, ni, rd,\r\n        xc = x.c,\r\n        pows10 = POWS_TEN;\r\n\r\n      // if x is not Infinity or NaN...\r\n      if (xc) {\r\n\r\n        // rd is the rounding digit, i.e. the digit after the digit that may be rounded up.\r\n        // n is a base 1e14 number, the value of the element of array x.c containing rd.\r\n        // ni is the index of n within x.c.\r\n        // d is the number of digits of n.\r\n        // i is the index of rd within n including leading zeros.\r\n        // j is the actual index of rd within n (if < 0, rd is a leading zero).\r\n        out: {\r\n\r\n          // Get the number of digits of the first element of xc.\r\n          for (d = 1, k = xc[0]; k >= 10; k /= 10, d++);\r\n          i = sd - d;\r\n\r\n          // If the rounding digit is in the first element of xc...\r\n          if (i < 0) {\r\n            i += LOG_BASE;\r\n            j = sd;\r\n            n = xc[ni = 0];\r\n\r\n            // Get the rounding digit at index j of n.\r\n            rd = n / pows10[d - j - 1] % 10 | 0;\r\n          } else {\r\n            ni = mathceil((i + 1) / LOG_BASE);\r\n\r\n            if (ni >= xc.length) {\r\n\r\n              if (r) {\r\n\r\n                // Needed by sqrt.\r\n                for (; xc.length <= ni; xc.push(0));\r\n                n = rd = 0;\r\n                d = 1;\r\n                i %= LOG_BASE;\r\n                j = i - LOG_BASE + 1;\r\n              } else {\r\n                break out;\r\n              }\r\n            } else {\r\n              n = k = xc[ni];\r\n\r\n              // Get the number of digits of n.\r\n              for (d = 1; k >= 10; k /= 10, d++);\r\n\r\n              // Get the index of rd within n.\r\n              i %= LOG_BASE;\r\n\r\n              // Get the index of rd within n, adjusted for leading zeros.\r\n              // The number of leading zeros of n is given by LOG_BASE - d.\r\n              j = i - LOG_BASE + d;\r\n\r\n              // Get the rounding digit at index j of n.\r\n              rd = j < 0 ? 0 : n / pows10[d - j - 1] % 10 | 0;\r\n            }\r\n          }\r\n\r\n          r = r || sd < 0 ||\r\n\r\n          // Are there any non-zero digits after the rounding digit?\r\n          // The expression  n % pows10[d - j - 1]  returns all digits of n to the right\r\n          // of the digit at j, e.g. if n is 908714 and j is 2, the expression gives 714.\r\n           xc[ni + 1] != null || (j < 0 ? n : n % pows10[d - j - 1]);\r\n\r\n          r = rm < 4\r\n           ? (rd || r) && (rm == 0 || rm == (x.s < 0 ? 3 : 2))\r\n           : rd > 5 || rd == 5 && (rm == 4 || r || rm == 6 &&\r\n\r\n            // Check whether the digit to the left of the rounding digit is odd.\r\n            ((i > 0 ? j > 0 ? n / pows10[d - j] : 0 : xc[ni - 1]) % 10) & 1 ||\r\n             rm == (x.s < 0 ? 8 : 7));\r\n\r\n          if (sd < 1 || !xc[0]) {\r\n            xc.length = 0;\r\n\r\n            if (r) {\r\n\r\n              // Convert sd to decimal places.\r\n              sd -= x.e + 1;\r\n\r\n              // 1, 0.1, 0.01, 0.001, 0.0001 etc.\r\n              xc[0] = pows10[(LOG_BASE - sd % LOG_BASE) % LOG_BASE];\r\n              x.e = -sd || 0;\r\n            } else {\r\n\r\n              // Zero.\r\n              xc[0] = x.e = 0;\r\n            }\r\n\r\n            return x;\r\n          }\r\n\r\n          // Remove excess digits.\r\n          if (i == 0) {\r\n            xc.length = ni;\r\n            k = 1;\r\n            ni--;\r\n          } else {\r\n            xc.length = ni + 1;\r\n            k = pows10[LOG_BASE - i];\r\n\r\n            // E.g. 56700 becomes 56000 if 7 is the rounding digit.\r\n            // j > 0 means i > number of leading zeros of n.\r\n            xc[ni] = j > 0 ? mathfloor(n / pows10[d - j] % pows10[j]) * k : 0;\r\n          }\r\n\r\n          // Round up?\r\n          if (r) {\r\n\r\n            for (; ;) {\r\n\r\n              // If the digit to be rounded up is in the first element of xc...\r\n              if (ni == 0) {\r\n\r\n                // i will be the length of xc[0] before k is added.\r\n                for (i = 1, j = xc[0]; j >= 10; j /= 10, i++);\r\n                j = xc[0] += k;\r\n                for (k = 1; j >= 10; j /= 10, k++);\r\n\r\n                // if i != k the length has increased.\r\n                if (i != k) {\r\n                  x.e++;\r\n                  if (xc[0] == BASE) xc[0] = 1;\r\n                }\r\n\r\n                break;\r\n              } else {\r\n                xc[ni] += k;\r\n                if (xc[ni] != BASE) break;\r\n                xc[ni--] = 0;\r\n                k = 1;\r\n              }\r\n            }\r\n          }\r\n\r\n          // Remove trailing zeros.\r\n          for (i = xc.length; xc[--i] === 0; xc.pop());\r\n        }\r\n\r\n        // Overflow? Infinity.\r\n        if (x.e > MAX_EXP) {\r\n          x.c = x.e = null;\r\n\r\n        // Underflow? Zero.\r\n        } else if (x.e < MIN_EXP) {\r\n          x.c = [x.e = 0];\r\n        }\r\n      }\r\n\r\n      return x;\r\n    }\r\n\r\n\r\n    // PROTOTYPE/INSTANCE METHODS\r\n\r\n\r\n    /*\r\n     * Return a new BigNumber whose value is the absolute value of this BigNumber.\r\n     */\r\n    P.absoluteValue = P.abs = function () {\r\n      var x = new BigNumber(this);\r\n      if (x.s < 0) x.s = 1;\r\n      return x;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return\r\n     *   1 if the value of this BigNumber is greater than the value of BigNumber(y, b),\r\n     *   -1 if the value of this BigNumber is less than the value of BigNumber(y, b),\r\n     *   0 if they have the same value,\r\n     *   or null if the value of either is NaN.\r\n     */\r\n    P.comparedTo = function (y, b) {\r\n      return compare(this, new BigNumber(y, b));\r\n    };\r\n\r\n\r\n    /*\r\n     * If dp is undefined or null or true or false, return the number of decimal places of the\r\n     * value of this BigNumber, or null if the value of this BigNumber is ±Infinity or NaN.\r\n     *\r\n     * Otherwise, if dp is a number, return a new BigNumber whose value is the value of this\r\n     * BigNumber rounded to a maximum of dp decimal places using rounding mode rm, or\r\n     * ROUNDING_MODE if rm is omitted.\r\n     *\r\n     * [dp] {number} Decimal places: integer, 0 to MAX inclusive.\r\n     * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp|rm}'\r\n     */\r\n    P.decimalPlaces = P.dp = function (dp, rm) {\r\n      var c, n, v,\r\n        x = this;\r\n\r\n      if (dp != null) {\r\n        intCheck(dp, 0, MAX);\r\n        if (rm == null) rm = ROUNDING_MODE;\r\n        else intCheck(rm, 0, 8);\r\n\r\n        return round(new BigNumber(x), dp + x.e + 1, rm);\r\n      }\r\n\r\n      if (!(c = x.c)) return null;\r\n      n = ((v = c.length - 1) - bitFloor(this.e / LOG_BASE)) * LOG_BASE;\r\n\r\n      // Subtract the number of trailing zeros of the last number.\r\n      if (v = c[v]) for (; v % 10 == 0; v /= 10, n--);\r\n      if (n < 0) n = 0;\r\n\r\n      return n;\r\n    };\r\n\r\n\r\n    /*\r\n     *  n / 0 = I\r\n     *  n / N = N\r\n     *  n / I = 0\r\n     *  0 / n = 0\r\n     *  0 / 0 = N\r\n     *  0 / N = N\r\n     *  0 / I = 0\r\n     *  N / n = N\r\n     *  N / 0 = N\r\n     *  N / N = N\r\n     *  N / I = N\r\n     *  I / n = I\r\n     *  I / 0 = I\r\n     *  I / N = N\r\n     *  I / I = N\r\n     *\r\n     * Return a new BigNumber whose value is the value of this BigNumber divided by the value of\r\n     * BigNumber(y, b), rounded according to DECIMAL_PLACES and ROUNDING_MODE.\r\n     */\r\n    P.dividedBy = P.div = function (y, b) {\r\n      return div(this, new BigNumber(y, b), DECIMAL_PLACES, ROUNDING_MODE);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a new BigNumber whose value is the integer part of dividing the value of this\r\n     * BigNumber by the value of BigNumber(y, b).\r\n     */\r\n    P.dividedToIntegerBy = P.idiv = function (y, b) {\r\n      return div(this, new BigNumber(y, b), 0, 1);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a BigNumber whose value is the value of this BigNumber exponentiated by n.\r\n     *\r\n     * If m is present, return the result modulo m.\r\n     * If n is negative round according to DECIMAL_PLACES and ROUNDING_MODE.\r\n     * If POW_PRECISION is non-zero and m is not present, round to POW_PRECISION using ROUNDING_MODE.\r\n     *\r\n     * The modular power operation works efficiently when x, n, and m are integers, otherwise it\r\n     * is equivalent to calculating x.exponentiatedBy(n).modulo(m) with a POW_PRECISION of 0.\r\n     *\r\n     * n {number|string|BigNumber} The exponent. An integer.\r\n     * [m] {number|string|BigNumber} The modulus.\r\n     *\r\n     * '[BigNumber Error] Exponent not an integer: {n}'\r\n     */\r\n    P.exponentiatedBy = P.pow = function (n, m) {\r\n      var half, isModExp, k, more, nIsBig, nIsNeg, nIsOdd, y,\r\n        x = this;\r\n\r\n      n = new BigNumber(n);\r\n\r\n      // Allow NaN and ±Infinity, but not other non-integers.\r\n      if (n.c && !n.isInteger()) {\r\n        throw Error\r\n          (bignumberError + 'Exponent not an integer: ' + n);\r\n      }\r\n\r\n      if (m != null) m = new BigNumber(m);\r\n\r\n      // Exponent of MAX_SAFE_INTEGER is 15.\r\n      nIsBig = n.e > 14;\r\n\r\n      // If x is NaN, ±Infinity, ±0 or ±1, or n is ±Infinity, NaN or ±0.\r\n      if (!x.c || !x.c[0] || x.c[0] == 1 && !x.e && x.c.length == 1 || !n.c || !n.c[0]) {\r\n\r\n        // The sign of the result of pow when x is negative depends on the evenness of n.\r\n        // If +n overflows to ±Infinity, the evenness of n would be not be known.\r\n        y = new BigNumber(Math.pow(+x.valueOf(), nIsBig ? 2 - isOdd(n) : +n));\r\n        return m ? y.mod(m) : y;\r\n      }\r\n\r\n      nIsNeg = n.s < 0;\r\n\r\n      if (m) {\r\n\r\n        // x % m returns NaN if abs(m) is zero, or m is NaN.\r\n        if (m.c ? !m.c[0] : !m.s) return new BigNumber(NaN);\r\n\r\n        isModExp = !nIsNeg && x.isInteger() && m.isInteger();\r\n\r\n        if (isModExp) x = x.mod(m);\r\n\r\n      // Overflow to ±Infinity: >=2**1e10 or >=1.0000024**1e15.\r\n      // Underflow to ±0: <=0.79**1e10 or <=0.9999975**1e15.\r\n      } else if (n.e > 9 && (x.e > 0 || x.e < -1 || (x.e == 0\r\n        // [1, 240000000]\r\n        ? x.c[0] > 1 || nIsBig && x.c[1] >= 24e7\r\n        // [80000000000000]  [99999750000000]\r\n        : x.c[0] < 8e13 || nIsBig && x.c[0] <= 9999975e7))) {\r\n\r\n        // If x is negative and n is odd, k = -0, else k = 0.\r\n        k = x.s < 0 && isOdd(n) ? -0 : 0;\r\n\r\n        // If x >= 1, k = ±Infinity.\r\n        if (x.e > -1) k = 1 / k;\r\n\r\n        // If n is negative return ±0, else return ±Infinity.\r\n        return new BigNumber(nIsNeg ? 1 / k : k);\r\n\r\n      } else if (POW_PRECISION) {\r\n\r\n        // Truncating each coefficient array to a length of k after each multiplication\r\n        // equates to truncating significant digits to POW_PRECISION + [28, 41],\r\n        // i.e. there will be a minimum of 28 guard digits retained.\r\n        k = mathceil(POW_PRECISION / LOG_BASE + 2);\r\n      }\r\n\r\n      if (nIsBig) {\r\n        half = new BigNumber(0.5);\r\n        nIsOdd = isOdd(n);\r\n      } else {\r\n        nIsOdd = n % 2;\r\n      }\r\n\r\n      if (nIsNeg) n.s = 1;\r\n\r\n      y = new BigNumber(ONE);\r\n\r\n      // Performs 54 loop iterations for n of 9007199254740991.\r\n      for (; ;) {\r\n\r\n        if (nIsOdd) {\r\n          y = y.times(x);\r\n          if (!y.c) break;\r\n\r\n          if (k) {\r\n            if (y.c.length > k) y.c.length = k;\r\n          } else if (isModExp) {\r\n            y = y.mod(m);    //y = y.minus(div(y, m, 0, MODULO_MODE).times(m));\r\n          }\r\n        }\r\n\r\n        if (nIsBig) {\r\n          n = n.times(half);\r\n          round(n, n.e + 1, 1);\r\n          if (!n.c[0]) break;\r\n          nIsBig = n.e > 14;\r\n          nIsOdd = isOdd(n);\r\n        } else {\r\n          n = mathfloor(n / 2);\r\n          if (!n) break;\r\n          nIsOdd = n % 2;\r\n        }\r\n\r\n        x = x.times(x);\r\n\r\n        if (k) {\r\n          if (x.c && x.c.length > k) x.c.length = k;\r\n        } else if (isModExp) {\r\n          x = x.mod(m);    //x = x.minus(div(x, m, 0, MODULO_MODE).times(m));\r\n        }\r\n      }\r\n\r\n      if (isModExp) return y;\r\n      if (nIsNeg) y = ONE.div(y);\r\n\r\n      return m ? y.mod(m) : k ? round(y, POW_PRECISION, ROUNDING_MODE, more) : y;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a new BigNumber whose value is the value of this BigNumber rounded to an integer\r\n     * using rounding mode rm, or ROUNDING_MODE if rm is omitted.\r\n     *\r\n     * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {rm}'\r\n     */\r\n    P.integerValue = function (rm) {\r\n      var n = new BigNumber(this);\r\n      if (rm == null) rm = ROUNDING_MODE;\r\n      else intCheck(rm, 0, 8);\r\n      return round(n, n.e + 1, rm);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is equal to the value of BigNumber(y, b),\r\n     * otherwise return false.\r\n     */\r\n    P.isEqualTo = P.eq = function (y, b) {\r\n      return compare(this, new BigNumber(y, b)) === 0;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is a finite number, otherwise return false.\r\n     */\r\n    P.isFinite = function () {\r\n      return !!this.c;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is greater than the value of BigNumber(y, b),\r\n     * otherwise return false.\r\n     */\r\n    P.isGreaterThan = P.gt = function (y, b) {\r\n      return compare(this, new BigNumber(y, b)) > 0;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is greater than or equal to the value of\r\n     * BigNumber(y, b), otherwise return false.\r\n     */\r\n    P.isGreaterThanOrEqualTo = P.gte = function (y, b) {\r\n      return (b = compare(this, new BigNumber(y, b))) === 1 || b === 0;\r\n\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is an integer, otherwise return false.\r\n     */\r\n    P.isInteger = function () {\r\n      return !!this.c && bitFloor(this.e / LOG_BASE) > this.c.length - 2;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is less than the value of BigNumber(y, b),\r\n     * otherwise return false.\r\n     */\r\n    P.isLessThan = P.lt = function (y, b) {\r\n      return compare(this, new BigNumber(y, b)) < 0;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is less than or equal to the value of\r\n     * BigNumber(y, b), otherwise return false.\r\n     */\r\n    P.isLessThanOrEqualTo = P.lte = function (y, b) {\r\n      return (b = compare(this, new BigNumber(y, b))) === -1 || b === 0;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is NaN, otherwise return false.\r\n     */\r\n    P.isNaN = function () {\r\n      return !this.s;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is negative, otherwise return false.\r\n     */\r\n    P.isNegative = function () {\r\n      return this.s < 0;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is positive, otherwise return false.\r\n     */\r\n    P.isPositive = function () {\r\n      return this.s > 0;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is 0 or -0, otherwise return false.\r\n     */\r\n    P.isZero = function () {\r\n      return !!this.c && this.c[0] == 0;\r\n    };\r\n\r\n\r\n    /*\r\n     *  n - 0 = n\r\n     *  n - N = N\r\n     *  n - I = -I\r\n     *  0 - n = -n\r\n     *  0 - 0 = 0\r\n     *  0 - N = N\r\n     *  0 - I = -I\r\n     *  N - n = N\r\n     *  N - 0 = N\r\n     *  N - N = N\r\n     *  N - I = N\r\n     *  I - n = I\r\n     *  I - 0 = I\r\n     *  I - N = N\r\n     *  I - I = N\r\n     *\r\n     * Return a new BigNumber whose value is the value of this BigNumber minus the value of\r\n     * BigNumber(y, b).\r\n     */\r\n    P.minus = function (y, b) {\r\n      var i, j, t, xLTy,\r\n        x = this,\r\n        a = x.s;\r\n\r\n      y = new BigNumber(y, b);\r\n      b = y.s;\r\n\r\n      // Either NaN?\r\n      if (!a || !b) return new BigNumber(NaN);\r\n\r\n      // Signs differ?\r\n      if (a != b) {\r\n        y.s = -b;\r\n        return x.plus(y);\r\n      }\r\n\r\n      var xe = x.e / LOG_BASE,\r\n        ye = y.e / LOG_BASE,\r\n        xc = x.c,\r\n        yc = y.c;\r\n\r\n      if (!xe || !ye) {\r\n\r\n        // Either Infinity?\r\n        if (!xc || !yc) return xc ? (y.s = -b, y) : new BigNumber(yc ? x : NaN);\r\n\r\n        // Either zero?\r\n        if (!xc[0] || !yc[0]) {\r\n\r\n          // Return y if y is non-zero, x if x is non-zero, or zero if both are zero.\r\n          return yc[0] ? (y.s = -b, y) : new BigNumber(xc[0] ? x :\r\n\r\n           // IEEE 754 (2008) 6.3: n - n = -0 when rounding to -Infinity\r\n           ROUNDING_MODE == 3 ? -0 : 0);\r\n        }\r\n      }\r\n\r\n      xe = bitFloor(xe);\r\n      ye = bitFloor(ye);\r\n      xc = xc.slice();\r\n\r\n      // Determine which is the bigger number.\r\n      if (a = xe - ye) {\r\n\r\n        if (xLTy = a < 0) {\r\n          a = -a;\r\n          t = xc;\r\n        } else {\r\n          ye = xe;\r\n          t = yc;\r\n        }\r\n\r\n        t.reverse();\r\n\r\n        // Prepend zeros to equalise exponents.\r\n        for (b = a; b--; t.push(0));\r\n        t.reverse();\r\n      } else {\r\n\r\n        // Exponents equal. Check digit by digit.\r\n        j = (xLTy = (a = xc.length) < (b = yc.length)) ? a : b;\r\n\r\n        for (a = b = 0; b < j; b++) {\r\n\r\n          if (xc[b] != yc[b]) {\r\n            xLTy = xc[b] < yc[b];\r\n            break;\r\n          }\r\n        }\r\n      }\r\n\r\n      // x < y? Point xc to the array of the bigger number.\r\n      if (xLTy) t = xc, xc = yc, yc = t, y.s = -y.s;\r\n\r\n      b = (j = yc.length) - (i = xc.length);\r\n\r\n      // Append zeros to xc if shorter.\r\n      // No need to add zeros to yc if shorter as subtract only needs to start at yc.length.\r\n      if (b > 0) for (; b--; xc[i++] = 0);\r\n      b = BASE - 1;\r\n\r\n      // Subtract yc from xc.\r\n      for (; j > a;) {\r\n\r\n        if (xc[--j] < yc[j]) {\r\n          for (i = j; i && !xc[--i]; xc[i] = b);\r\n          --xc[i];\r\n          xc[j] += BASE;\r\n        }\r\n\r\n        xc[j] -= yc[j];\r\n      }\r\n\r\n      // Remove leading zeros and adjust exponent accordingly.\r\n      for (; xc[0] == 0; xc.splice(0, 1), --ye);\r\n\r\n      // Zero?\r\n      if (!xc[0]) {\r\n\r\n        // Following IEEE 754 (2008) 6.3,\r\n        // n - n = +0  but  n - n = -0  when rounding towards -Infinity.\r\n        y.s = ROUNDING_MODE == 3 ? -1 : 1;\r\n        y.c = [y.e = 0];\r\n        return y;\r\n      }\r\n\r\n      // No need to check for Infinity as +x - +y != Infinity && -x - -y != Infinity\r\n      // for finite x and y.\r\n      return normalise(y, xc, ye);\r\n    };\r\n\r\n\r\n    /*\r\n     *   n % 0 =  N\r\n     *   n % N =  N\r\n     *   n % I =  n\r\n     *   0 % n =  0\r\n     *  -0 % n = -0\r\n     *   0 % 0 =  N\r\n     *   0 % N =  N\r\n     *   0 % I =  0\r\n     *   N % n =  N\r\n     *   N % 0 =  N\r\n     *   N % N =  N\r\n     *   N % I =  N\r\n     *   I % n =  N\r\n     *   I % 0 =  N\r\n     *   I % N =  N\r\n     *   I % I =  N\r\n     *\r\n     * Return a new BigNumber whose value is the value of this BigNumber modulo the value of\r\n     * BigNumber(y, b). The result depends on the value of MODULO_MODE.\r\n     */\r\n    P.modulo = P.mod = function (y, b) {\r\n      var q, s,\r\n        x = this;\r\n\r\n      y = new BigNumber(y, b);\r\n\r\n      // Return NaN if x is Infinity or NaN, or y is NaN or zero.\r\n      if (!x.c || !y.s || y.c && !y.c[0]) {\r\n        return new BigNumber(NaN);\r\n\r\n      // Return x if y is Infinity or x is zero.\r\n      } else if (!y.c || x.c && !x.c[0]) {\r\n        return new BigNumber(x);\r\n      }\r\n\r\n      if (MODULO_MODE == 9) {\r\n\r\n        // Euclidian division: q = sign(y) * floor(x / abs(y))\r\n        // r = x - qy    where  0 <= r < abs(y)\r\n        s = y.s;\r\n        y.s = 1;\r\n        q = div(x, y, 0, 3);\r\n        y.s = s;\r\n        q.s *= s;\r\n      } else {\r\n        q = div(x, y, 0, MODULO_MODE);\r\n      }\r\n\r\n      y = x.minus(q.times(y));\r\n\r\n      // To match JavaScript %, ensure sign of zero is sign of dividend.\r\n      if (!y.c[0] && MODULO_MODE == 1) y.s = x.s;\r\n\r\n      return y;\r\n    };\r\n\r\n\r\n    /*\r\n     *  n * 0 = 0\r\n     *  n * N = N\r\n     *  n * I = I\r\n     *  0 * n = 0\r\n     *  0 * 0 = 0\r\n     *  0 * N = N\r\n     *  0 * I = N\r\n     *  N * n = N\r\n     *  N * 0 = N\r\n     *  N * N = N\r\n     *  N * I = N\r\n     *  I * n = I\r\n     *  I * 0 = N\r\n     *  I * N = N\r\n     *  I * I = I\r\n     *\r\n     * Return a new BigNumber whose value is the value of this BigNumber multiplied by the value\r\n     * of BigNumber(y, b).\r\n     */\r\n    P.multipliedBy = P.times = function (y, b) {\r\n      var c, e, i, j, k, m, xcL, xlo, xhi, ycL, ylo, yhi, zc,\r\n        base, sqrtBase,\r\n        x = this,\r\n        xc = x.c,\r\n        yc = (y = new BigNumber(y, b)).c;\r\n\r\n      // Either NaN, ±Infinity or ±0?\r\n      if (!xc || !yc || !xc[0] || !yc[0]) {\r\n\r\n        // Return NaN if either is NaN, or one is 0 and the other is Infinity.\r\n        if (!x.s || !y.s || xc && !xc[0] && !yc || yc && !yc[0] && !xc) {\r\n          y.c = y.e = y.s = null;\r\n        } else {\r\n          y.s *= x.s;\r\n\r\n          // Return ±Infinity if either is ±Infinity.\r\n          if (!xc || !yc) {\r\n            y.c = y.e = null;\r\n\r\n          // Return ±0 if either is ±0.\r\n          } else {\r\n            y.c = [0];\r\n            y.e = 0;\r\n          }\r\n        }\r\n\r\n        return y;\r\n      }\r\n\r\n      e = bitFloor(x.e / LOG_BASE) + bitFloor(y.e / LOG_BASE);\r\n      y.s *= x.s;\r\n      xcL = xc.length;\r\n      ycL = yc.length;\r\n\r\n      // Ensure xc points to longer array and xcL to its length.\r\n      if (xcL < ycL) zc = xc, xc = yc, yc = zc, i = xcL, xcL = ycL, ycL = i;\r\n\r\n      // Initialise the result array with zeros.\r\n      for (i = xcL + ycL, zc = []; i--; zc.push(0));\r\n\r\n      base = BASE;\r\n      sqrtBase = SQRT_BASE;\r\n\r\n      for (i = ycL; --i >= 0;) {\r\n        c = 0;\r\n        ylo = yc[i] % sqrtBase;\r\n        yhi = yc[i] / sqrtBase | 0;\r\n\r\n        for (k = xcL, j = i + k; j > i;) {\r\n          xlo = xc[--k] % sqrtBase;\r\n          xhi = xc[k] / sqrtBase | 0;\r\n          m = yhi * xlo + xhi * ylo;\r\n          xlo = ylo * xlo + ((m % sqrtBase) * sqrtBase) + zc[j] + c;\r\n          c = (xlo / base | 0) + (m / sqrtBase | 0) + yhi * xhi;\r\n          zc[j--] = xlo % base;\r\n        }\r\n\r\n        zc[j] = c;\r\n      }\r\n\r\n      if (c) {\r\n        ++e;\r\n      } else {\r\n        zc.splice(0, 1);\r\n      }\r\n\r\n      return normalise(y, zc, e);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a new BigNumber whose value is the value of this BigNumber negated,\r\n     * i.e. multiplied by -1.\r\n     */\r\n    P.negated = function () {\r\n      var x = new BigNumber(this);\r\n      x.s = -x.s || null;\r\n      return x;\r\n    };\r\n\r\n\r\n    /*\r\n     *  n + 0 = n\r\n     *  n + N = N\r\n     *  n + I = I\r\n     *  0 + n = n\r\n     *  0 + 0 = 0\r\n     *  0 + N = N\r\n     *  0 + I = I\r\n     *  N + n = N\r\n     *  N + 0 = N\r\n     *  N + N = N\r\n     *  N + I = N\r\n     *  I + n = I\r\n     *  I + 0 = I\r\n     *  I + N = N\r\n     *  I + I = I\r\n     *\r\n     * Return a new BigNumber whose value is the value of this BigNumber plus the value of\r\n     * BigNumber(y, b).\r\n     */\r\n    P.plus = function (y, b) {\r\n      var t,\r\n        x = this,\r\n        a = x.s;\r\n\r\n      y = new BigNumber(y, b);\r\n      b = y.s;\r\n\r\n      // Either NaN?\r\n      if (!a || !b) return new BigNumber(NaN);\r\n\r\n      // Signs differ?\r\n       if (a != b) {\r\n        y.s = -b;\r\n        return x.minus(y);\r\n      }\r\n\r\n      var xe = x.e / LOG_BASE,\r\n        ye = y.e / LOG_BASE,\r\n        xc = x.c,\r\n        yc = y.c;\r\n\r\n      if (!xe || !ye) {\r\n\r\n        // Return ±Infinity if either ±Infinity.\r\n        if (!xc || !yc) return new BigNumber(a / 0);\r\n\r\n        // Either zero?\r\n        // Return y if y is non-zero, x if x is non-zero, or zero if both are zero.\r\n        if (!xc[0] || !yc[0]) return yc[0] ? y : new BigNumber(xc[0] ? x : a * 0);\r\n      }\r\n\r\n      xe = bitFloor(xe);\r\n      ye = bitFloor(ye);\r\n      xc = xc.slice();\r\n\r\n      // Prepend zeros to equalise exponents. Faster to use reverse then do unshifts.\r\n      if (a = xe - ye) {\r\n        if (a > 0) {\r\n          ye = xe;\r\n          t = yc;\r\n        } else {\r\n          a = -a;\r\n          t = xc;\r\n        }\r\n\r\n        t.reverse();\r\n        for (; a--; t.push(0));\r\n        t.reverse();\r\n      }\r\n\r\n      a = xc.length;\r\n      b = yc.length;\r\n\r\n      // Point xc to the longer array, and b to the shorter length.\r\n      if (a - b < 0) t = yc, yc = xc, xc = t, b = a;\r\n\r\n      // Only start adding at yc.length - 1 as the further digits of xc can be ignored.\r\n      for (a = 0; b;) {\r\n        a = (xc[--b] = xc[b] + yc[b] + a) / BASE | 0;\r\n        xc[b] = BASE === xc[b] ? 0 : xc[b] % BASE;\r\n      }\r\n\r\n      if (a) {\r\n        xc = [a].concat(xc);\r\n        ++ye;\r\n      }\r\n\r\n      // No need to check for zero, as +x + +y != 0 && -x + -y != 0\r\n      // ye = MAX_EXP + 1 possible\r\n      return normalise(y, xc, ye);\r\n    };\r\n\r\n\r\n    /*\r\n     * If sd is undefined or null or true or false, return the number of significant digits of\r\n     * the value of this BigNumber, or null if the value of this BigNumber is ±Infinity or NaN.\r\n     * If sd is true include integer-part trailing zeros in the count.\r\n     *\r\n     * Otherwise, if sd is a number, return a new BigNumber whose value is the value of this\r\n     * BigNumber rounded to a maximum of sd significant digits using rounding mode rm, or\r\n     * ROUNDING_MODE if rm is omitted.\r\n     *\r\n     * sd {number|boolean} number: significant digits: integer, 1 to MAX inclusive.\r\n     *                     boolean: whether to count integer-part trailing zeros: true or false.\r\n     * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {sd|rm}'\r\n     */\r\n    P.precision = P.sd = function (sd, rm) {\r\n      var c, n, v,\r\n        x = this;\r\n\r\n      if (sd != null && sd !== !!sd) {\r\n        intCheck(sd, 1, MAX);\r\n        if (rm == null) rm = ROUNDING_MODE;\r\n        else intCheck(rm, 0, 8);\r\n\r\n        return round(new BigNumber(x), sd, rm);\r\n      }\r\n\r\n      if (!(c = x.c)) return null;\r\n      v = c.length - 1;\r\n      n = v * LOG_BASE + 1;\r\n\r\n      if (v = c[v]) {\r\n\r\n        // Subtract the number of trailing zeros of the last element.\r\n        for (; v % 10 == 0; v /= 10, n--);\r\n\r\n        // Add the number of digits of the first element.\r\n        for (v = c[0]; v >= 10; v /= 10, n++);\r\n      }\r\n\r\n      if (sd && x.e + 1 > n) n = x.e + 1;\r\n\r\n      return n;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a new BigNumber whose value is the value of this BigNumber shifted by k places\r\n     * (powers of 10). Shift to the right if n > 0, and to the left if n < 0.\r\n     *\r\n     * k {number} Integer, -MAX_SAFE_INTEGER to MAX_SAFE_INTEGER inclusive.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {k}'\r\n     */\r\n    P.shiftedBy = function (k) {\r\n      intCheck(k, -MAX_SAFE_INTEGER, MAX_SAFE_INTEGER);\r\n      return this.times('1e' + k);\r\n    };\r\n\r\n\r\n    /*\r\n     *  sqrt(-n) =  N\r\n     *  sqrt(N) =  N\r\n     *  sqrt(-I) =  N\r\n     *  sqrt(I) =  I\r\n     *  sqrt(0) =  0\r\n     *  sqrt(-0) = -0\r\n     *\r\n     * Return a new BigNumber whose value is the square root of the value of this BigNumber,\r\n     * rounded according to DECIMAL_PLACES and ROUNDING_MODE.\r\n     */\r\n    P.squareRoot = P.sqrt = function () {\r\n      var m, n, r, rep, t,\r\n        x = this,\r\n        c = x.c,\r\n        s = x.s,\r\n        e = x.e,\r\n        dp = DECIMAL_PLACES + 4,\r\n        half = new BigNumber('0.5');\r\n\r\n      // Negative/NaN/Infinity/zero?\r\n      if (s !== 1 || !c || !c[0]) {\r\n        return new BigNumber(!s || s < 0 && (!c || c[0]) ? NaN : c ? x : 1 / 0);\r\n      }\r\n\r\n      // Initial estimate.\r\n      s = Math.sqrt(+x);\r\n\r\n      // Math.sqrt underflow/overflow?\r\n      // Pass x to Math.sqrt as integer, then adjust the exponent of the result.\r\n      if (s == 0 || s == 1 / 0) {\r\n        n = coeffToString(c);\r\n        if ((n.length + e) % 2 == 0) n += '0';\r\n        s = Math.sqrt(n);\r\n        e = bitFloor((e + 1) / 2) - (e < 0 || e % 2);\r\n\r\n        if (s == 1 / 0) {\r\n          n = '1e' + e;\r\n        } else {\r\n          n = s.toExponential();\r\n          n = n.slice(0, n.indexOf('e') + 1) + e;\r\n        }\r\n\r\n        r = new BigNumber(n);\r\n      } else {\r\n        r = new BigNumber(s + '');\r\n      }\r\n\r\n      // Check for zero.\r\n      // r could be zero if MIN_EXP is changed after the this value was created.\r\n      // This would cause a division by zero (x/t) and hence Infinity below, which would cause\r\n      // coeffToString to throw.\r\n      if (r.c[0]) {\r\n        e = r.e;\r\n        s = e + dp;\r\n        if (s < 3) s = 0;\r\n\r\n        // Newton-Raphson iteration.\r\n        for (; ;) {\r\n          t = r;\r\n          r = half.times(t.plus(div(x, t, dp, 1)));\r\n\r\n          if (coeffToString(t.c  ).slice(0, s) === (n =\r\n             coeffToString(r.c)).slice(0, s)) {\r\n\r\n            // The exponent of r may here be one less than the final result exponent,\r\n            // e.g 0.0009999 (e-4) --> 0.001 (e-3), so adjust s so the rounding digits\r\n            // are indexed correctly.\r\n            if (r.e < e) --s;\r\n            n = n.slice(s - 3, s + 1);\r\n\r\n            // The 4th rounding digit may be in error by -1 so if the 4 rounding digits\r\n            // are 9999 or 4999 (i.e. approaching a rounding boundary) continue the\r\n            // iteration.\r\n            if (n == '9999' || !rep && n == '4999') {\r\n\r\n              // On the first iteration only, check to see if rounding up gives the\r\n              // exact result as the nines may infinitely repeat.\r\n              if (!rep) {\r\n                round(t, t.e + DECIMAL_PLACES + 2, 0);\r\n\r\n                if (t.times(t).eq(x)) {\r\n                  r = t;\r\n                  break;\r\n                }\r\n              }\r\n\r\n              dp += 4;\r\n              s += 4;\r\n              rep = 1;\r\n            } else {\r\n\r\n              // If rounding digits are null, 0{0,4} or 50{0,3}, check for exact\r\n              // result. If not, then there are further digits and m will be truthy.\r\n              if (!+n || !+n.slice(1) && n.charAt(0) == '5') {\r\n\r\n                // Truncate to the first rounding digit.\r\n                round(r, r.e + DECIMAL_PLACES + 2, 1);\r\n                m = !r.times(r).eq(x);\r\n              }\r\n\r\n              break;\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      return round(r, r.e + DECIMAL_PLACES + 1, ROUNDING_MODE, m);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a string representing the value of this BigNumber in exponential notation and\r\n     * rounded using ROUNDING_MODE to dp fixed decimal places.\r\n     *\r\n     * [dp] {number} Decimal places. Integer, 0 to MAX inclusive.\r\n     * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp|rm}'\r\n     */\r\n    P.toExponential = function (dp, rm) {\r\n      if (dp != null) {\r\n        intCheck(dp, 0, MAX);\r\n        dp++;\r\n      }\r\n      return format(this, dp, rm, 1);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a string representing the value of this BigNumber in fixed-point notation rounding\r\n     * to dp fixed decimal places using rounding mode rm, or ROUNDING_MODE if rm is omitted.\r\n     *\r\n     * Note: as with JavaScript's number type, (-0).toFixed(0) is '0',\r\n     * but e.g. (-0.00001).toFixed(0) is '-0'.\r\n     *\r\n     * [dp] {number} Decimal places. Integer, 0 to MAX inclusive.\r\n     * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp|rm}'\r\n     */\r\n    P.toFixed = function (dp, rm) {\r\n      if (dp != null) {\r\n        intCheck(dp, 0, MAX);\r\n        dp = dp + this.e + 1;\r\n      }\r\n      return format(this, dp, rm);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a string representing the value of this BigNumber in fixed-point notation rounded\r\n     * using rm or ROUNDING_MODE to dp decimal places, and formatted according to the properties\r\n     * of the FORMAT object (see BigNumber.set).\r\n     *\r\n     * FORMAT = {\r\n     *      decimalSeparator : '.',\r\n     *      groupSeparator : ',',\r\n     *      groupSize : 3,\r\n     *      secondaryGroupSize : 0,\r\n     *      fractionGroupSeparator : '\\xA0',    // non-breaking space\r\n     *      fractionGroupSize : 0\r\n     * };\r\n     *\r\n     * [dp] {number} Decimal places. Integer, 0 to MAX inclusive.\r\n     * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp|rm}'\r\n     */\r\n    P.toFormat = function (dp, rm) {\r\n      var str = this.toFixed(dp, rm);\r\n\r\n      if (this.c) {\r\n        var i,\r\n          arr = str.split('.'),\r\n          g1 = +FORMAT.groupSize,\r\n          g2 = +FORMAT.secondaryGroupSize,\r\n          groupSeparator = FORMAT.groupSeparator,\r\n          intPart = arr[0],\r\n          fractionPart = arr[1],\r\n          isNeg = this.s < 0,\r\n          intDigits = isNeg ? intPart.slice(1) : intPart,\r\n          len = intDigits.length;\r\n\r\n        if (g2) i = g1, g1 = g2, g2 = i, len -= i;\r\n\r\n        if (g1 > 0 && len > 0) {\r\n          i = len % g1 || g1;\r\n          intPart = intDigits.substr(0, i);\r\n\r\n          for (; i < len; i += g1) {\r\n            intPart += groupSeparator + intDigits.substr(i, g1);\r\n          }\r\n\r\n          if (g2 > 0) intPart += groupSeparator + intDigits.slice(i);\r\n          if (isNeg) intPart = '-' + intPart;\r\n        }\r\n\r\n        str = fractionPart\r\n         ? intPart + FORMAT.decimalSeparator + ((g2 = +FORMAT.fractionGroupSize)\r\n          ? fractionPart.replace(new RegExp('\\\\d{' + g2 + '}\\\\B', 'g'),\r\n           '$&' + FORMAT.fractionGroupSeparator)\r\n          : fractionPart)\r\n         : intPart;\r\n      }\r\n\r\n      return str;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a string array representing the value of this BigNumber as a simple fraction with\r\n     * an integer numerator and an integer denominator. The denominator will be a positive\r\n     * non-zero value less than or equal to the specified maximum denominator. If a maximum\r\n     * denominator is not specified, the denominator will be the lowest value necessary to\r\n     * represent the number exactly.\r\n     *\r\n     * [md] {number|string|BigNumber} Integer >= 1, or Infinity. The maximum denominator.\r\n     *\r\n     * '[BigNumber Error] Argument {not an integer|out of range} : {md}'\r\n     */\r\n    P.toFraction = function (md) {\r\n      var arr, d, d0, d1, d2, e, exp, n, n0, n1, q, s,\r\n        x = this,\r\n        xc = x.c;\r\n\r\n      if (md != null) {\r\n        n = new BigNumber(md);\r\n\r\n        // Throw if md is less than one or is not an integer, unless it is Infinity.\r\n        if (!n.isInteger() && (n.c || n.s !== 1) || n.lt(ONE)) {\r\n          throw Error\r\n            (bignumberError + 'Argument ' +\r\n              (n.isInteger() ? 'out of range: ' : 'not an integer: ') + md);\r\n        }\r\n      }\r\n\r\n      if (!xc) return x.toString();\r\n\r\n      d = new BigNumber(ONE);\r\n      n1 = d0 = new BigNumber(ONE);\r\n      d1 = n0 = new BigNumber(ONE);\r\n      s = coeffToString(xc);\r\n\r\n      // Determine initial denominator.\r\n      // d is a power of 10 and the minimum max denominator that specifies the value exactly.\r\n      e = d.e = s.length - x.e - 1;\r\n      d.c[0] = POWS_TEN[(exp = e % LOG_BASE) < 0 ? LOG_BASE + exp : exp];\r\n      md = !md || n.comparedTo(d) > 0 ? (e > 0 ? d : n1) : n;\r\n\r\n      exp = MAX_EXP;\r\n      MAX_EXP = 1 / 0;\r\n      n = new BigNumber(s);\r\n\r\n      // n0 = d1 = 0\r\n      n0.c[0] = 0;\r\n\r\n      for (; ;)  {\r\n        q = div(n, d, 0, 1);\r\n        d2 = d0.plus(q.times(d1));\r\n        if (d2.comparedTo(md) == 1) break;\r\n        d0 = d1;\r\n        d1 = d2;\r\n        n1 = n0.plus(q.times(d2 = n1));\r\n        n0 = d2;\r\n        d = n.minus(q.times(d2 = d));\r\n        n = d2;\r\n      }\r\n\r\n      d2 = div(md.minus(d0), d1, 0, 1);\r\n      n0 = n0.plus(d2.times(n1));\r\n      d0 = d0.plus(d2.times(d1));\r\n      n0.s = n1.s = x.s;\r\n      e *= 2;\r\n\r\n      // Determine which fraction is closer to x, n0/d0 or n1/d1\r\n      arr = div(n1, d1, e, ROUNDING_MODE).minus(x).abs().comparedTo(\r\n         div(n0, d0, e, ROUNDING_MODE).minus(x).abs()) < 1\r\n          ? [n1.toString(), d1.toString()]\r\n          : [n0.toString(), d0.toString()];\r\n\r\n      MAX_EXP = exp;\r\n      return arr;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return the value of this BigNumber converted to a number primitive.\r\n     */\r\n    P.toNumber = function () {\r\n      return +this;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a string representing the value of this BigNumber rounded to sd significant digits\r\n     * using rounding mode rm or ROUNDING_MODE. If sd is less than the number of digits\r\n     * necessary to represent the integer part of the value in fixed-point notation, then use\r\n     * exponential notation.\r\n     *\r\n     * [sd] {number} Significant digits. Integer, 1 to MAX inclusive.\r\n     * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {sd|rm}'\r\n     */\r\n    P.toPrecision = function (sd, rm) {\r\n      if (sd != null) intCheck(sd, 1, MAX);\r\n      return format(this, sd, rm, 2);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a string representing the value of this BigNumber in base b, or base 10 if b is\r\n     * omitted. If a base is specified, including base 10, round according to DECIMAL_PLACES and\r\n     * ROUNDING_MODE. If a base is not specified, and this BigNumber has a positive exponent\r\n     * that is equal to or greater than TO_EXP_POS, or a negative exponent equal to or less than\r\n     * TO_EXP_NEG, return exponential notation.\r\n     *\r\n     * [b] {number} Integer, 2 to ALPHABET.length inclusive.\r\n     *\r\n     * '[BigNumber Error] Base {not a primitive number|not an integer|out of range}: {b}'\r\n     */\r\n    P.toString = function (b) {\r\n      var str,\r\n        n = this,\r\n        s = n.s,\r\n        e = n.e;\r\n\r\n      // Infinity or NaN?\r\n      if (e === null) {\r\n\r\n        if (s) {\r\n          str = 'Infinity';\r\n          if (s < 0) str = '-' + str;\r\n        } else {\r\n          str = 'NaN';\r\n        }\r\n      } else {\r\n        str = coeffToString(n.c);\r\n\r\n        if (b == null) {\r\n          str = e <= TO_EXP_NEG || e >= TO_EXP_POS\r\n           ? toExponential(str, e)\r\n           : toFixedPoint(str, e, '0');\r\n        } else {\r\n          intCheck(b, 2, ALPHABET.length, 'Base');\r\n          str = convertBase(toFixedPoint(str, e, '0'), 10, b, s, true);\r\n        }\r\n\r\n        if (s < 0 && n.c[0]) str = '-' + str;\r\n      }\r\n\r\n      return str;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return as toString, but do not accept a base argument, and include the minus sign for\r\n     * negative zero.\r\n     */\r\n    P.valueOf = P.toJSON = function () {\r\n      var str,\r\n        n = this,\r\n        e = n.e;\r\n\r\n      if (e === null) return n.toString();\r\n\r\n      str = coeffToString(n.c);\r\n\r\n      str = e <= TO_EXP_NEG || e >= TO_EXP_POS\r\n        ? toExponential(str, e)\r\n        : toFixedPoint(str, e, '0');\r\n\r\n      return n.s < 0 ? '-' + str : str;\r\n    };\r\n\r\n\r\n    P._isBigNumber = true;\r\n\r\n    if (configObject != null) BigNumber.set(configObject);\r\n\r\n    return BigNumber;\r\n  }\r\n\r\n\r\n  // PRIVATE HELPER FUNCTIONS\r\n\r\n\r\n  function bitFloor(n) {\r\n    var i = n | 0;\r\n    return n > 0 || n === i ? i : i - 1;\r\n  }\r\n\r\n\r\n  // Return a coefficient array as a string of base 10 digits.\r\n  function coeffToString(a) {\r\n    var s, z,\r\n      i = 1,\r\n      j = a.length,\r\n      r = a[0] + '';\r\n\r\n    for (; i < j;) {\r\n      s = a[i++] + '';\r\n      z = LOG_BASE - s.length;\r\n      for (; z--; s = '0' + s);\r\n      r += s;\r\n    }\r\n\r\n    // Determine trailing zeros.\r\n    for (j = r.length; r.charCodeAt(--j) === 48;);\r\n    return r.slice(0, j + 1 || 1);\r\n  }\r\n\r\n\r\n  // Compare the value of BigNumbers x and y.\r\n  function compare(x, y) {\r\n    var a, b,\r\n      xc = x.c,\r\n      yc = y.c,\r\n      i = x.s,\r\n      j = y.s,\r\n      k = x.e,\r\n      l = y.e;\r\n\r\n    // Either NaN?\r\n    if (!i || !j) return null;\r\n\r\n    a = xc && !xc[0];\r\n    b = yc && !yc[0];\r\n\r\n    // Either zero?\r\n    if (a || b) return a ? b ? 0 : -j : i;\r\n\r\n    // Signs differ?\r\n    if (i != j) return i;\r\n\r\n    a = i < 0;\r\n    b = k == l;\r\n\r\n    // Either Infinity?\r\n    if (!xc || !yc) return b ? 0 : !xc ^ a ? 1 : -1;\r\n\r\n    // Compare exponents.\r\n    if (!b) return k > l ^ a ? 1 : -1;\r\n\r\n    j = (k = xc.length) < (l = yc.length) ? k : l;\r\n\r\n    // Compare digit by digit.\r\n    for (i = 0; i < j; i++) if (xc[i] != yc[i]) return xc[i] > yc[i] ^ a ? 1 : -1;\r\n\r\n    // Compare lengths.\r\n    return k == l ? 0 : k > l ^ a ? 1 : -1;\r\n  }\r\n\r\n\r\n  /*\r\n   * Check that n is a primitive number, an integer, and in range, otherwise throw.\r\n   */\r\n  function intCheck(n, min, max, name) {\r\n    if (n < min || n > max || n !== (n < 0 ? mathceil(n) : mathfloor(n))) {\r\n      throw Error\r\n       (bignumberError + (name || 'Argument') + (typeof n == 'number'\r\n         ? n < min || n > max ? ' out of range: ' : ' not an integer: '\r\n         : ' not a primitive number: ') + n);\r\n    }\r\n  }\r\n\r\n\r\n  function isArray(obj) {\r\n    return Object.prototype.toString.call(obj) == '[object Array]';\r\n  }\r\n\r\n\r\n  // Assumes finite n.\r\n  function isOdd(n) {\r\n    var k = n.c.length - 1;\r\n    return bitFloor(n.e / LOG_BASE) == k && n.c[k] % 2 != 0;\r\n  }\r\n\r\n\r\n  function toExponential(str, e) {\r\n    return (str.length > 1 ? str.charAt(0) + '.' + str.slice(1) : str) +\r\n     (e < 0 ? 'e' : 'e+') + e;\r\n  }\r\n\r\n\r\n  function toFixedPoint(str, e, z) {\r\n    var len, zs;\r\n\r\n    // Negative exponent?\r\n    if (e < 0) {\r\n\r\n      // Prepend zeros.\r\n      for (zs = z + '.'; ++e; zs += z);\r\n      str = zs + str;\r\n\r\n    // Positive exponent\r\n    } else {\r\n      len = str.length;\r\n\r\n      // Append zeros.\r\n      if (++e > len) {\r\n        for (zs = z, e -= len; --e; zs += z);\r\n        str += zs;\r\n      } else if (e < len) {\r\n        str = str.slice(0, e) + '.' + str.slice(e);\r\n      }\r\n    }\r\n\r\n    return str;\r\n  }\r\n\r\n\r\n  // EXPORT\r\n\r\n\r\n  BigNumber = clone();\r\n  BigNumber['default'] = BigNumber.BigNumber = BigNumber;\r\n\r\n  // AMD.\r\n  if (typeof define == 'function' && define.amd) {\r\n    define(function () { return BigNumber; });\r\n\r\n  // Node.js and other environments that support module.exports.\r\n  } else if (typeof module != 'undefined' && module.exports) {\r\n    module.exports = BigNumber;\r\n\r\n  // Browser.\r\n  } else {\r\n    if (!globalObject) {\r\n      globalObject = typeof self != 'undefined' && self ? self : window;\r\n    }\r\n\r\n    globalObject.BigNumber = BigNumber;\r\n  }\r\n})(this);\r\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"container-fluid\"},[(!_vm.claimed)?_c('div',{staticClass:\"container-fluid envelope-wrap\"},[_c('div',{staticClass:\"container-fluid envelope-container envelope-container--claim envelope--verified envelope-container--red envelope-container--with-card\"},[_c('div',{staticClass:\"container-fluid envelope-info\"},[_c('div',{staticClass:\"row envelope-info--top\"},[_c('div',{staticClass:\"col-xs-5 left-align\"},[_c('p',[_vm._v(_vm._s(_vm.$t(\"envelope\"))+\" #\"+_vm._s(_vm.envelope.id))])]),_c('div',{staticClass:\"col-xs-7 right-align\"},[_c('p',[_c('span',[_vm._v(\"Expires\\n                \"),_c('time',{attrs:{\"datetime\":\"2019-03-07T15:19:30.000Z\",\"title\":\"2019-03-07 15:19\"}},[_vm._v(\"in \"+_vm._s(_vm._f(\"duration\")(_vm.envelope.duration * 1000,'humanize')))])])])])]),_c('div',[_c('svg',{staticClass:\"svg--icon-dog\",attrs:{\"version\":\"1.1\",\"x\":\"0px\",\"y\":\"0px\",\"viewBox\":\"0 0 100 100\",\"xml:space\":\"preserve\"}},[_c('circle',{attrs:{\"cx\":\"46.2\",\"cy\":\"35\",\"r\":\"3.7\"}}),_c('path',{attrs:{\"d\":\"M63.7,31.3c-3.1-8.7-11.4-15-21.2-15l-7.5,0c-6.1,0-11.3,3.6-13.7,8.8c-5.2,2.4-8.8,7.6-8.8,13.7v30H20v15h37.5V61.2l7.5,0  c12.4,0,22.5-10.1,22.5-22.5v-7.5H63.7z M65,53.7h-7.5c-4.1,0-7.5,3.4-7.5,7.5v15H27.5v-7.5c8.3,0,15-6.7,15-15v-7.5  c0-2.1-1.7-3.7-3.8-3.7S35,44.2,35,46.3v7.5c0,4.1-3.4,7.5-7.5,7.5l-7.5,0V38.8c0-4.1,3.4-7.5,7.5-7.5c0-4.1,3.4-7.5,7.5-7.5h7.5  c8.3,0,15,6.7,15,15H65h15C80,47,73.3,53.7,65,53.7z\"}})])]),_c('div',{staticClass:\"envelope-info--message\"},[_c('h2',[_vm._v(_vm._s(_vm.envelope.message || _vm.$t(\"create.comment_placeholder\")))]),_c('p',[_vm._v(\"– \"+_vm._s(_vm.envelope.nickname || _vm.$t(\"create.from.placeholder\")))])])]),_c('div',{staticClass:\"envelope--buttons\"},[_c('div',{staticClass:\"envelope--input--disclaimer\"},[_c('p',[_c('span',[_vm._v(_vm._s(_vm.$t(\"claim.hint\")))])])]),_c('p',[_c('button',{staticClass:\"btn btn-env\",attrs:{\"disabled\":_vm.isClaiming},on:{\"click\":_vm.claim}},[_vm._v(_vm._s(_vm.isClaiming ? _vm.$t(\"claim.claiming_btn_text\") + _vm.counter : _vm.$t(\"claim.claim_btn_text\")))])])])])]):_c('AfterClaimCard',{attrs:{\"envelope\":_vm.envelope,\"tokenName\":_vm.tokenName}})],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","import mod from \"-!../../node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js??ref--12-0!../../node_modules/_thread-loader@2.1.2@thread-loader/dist/cjs.js!../../node_modules/_babel-loader@8.0.5@babel-loader/lib/index.js!../../node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js??ref--0-0!../../node_modules/_vue-loader@15.7.0@vue-loader/lib/index.js??vue-loader-options!./ClaimCard.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js??ref--12-0!../../node_modules/_thread-loader@2.1.2@thread-loader/dist/cjs.js!../../node_modules/_babel-loader@8.0.5@babel-loader/lib/index.js!../../node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js??ref--0-0!../../node_modules/_vue-loader@15.7.0@vue-loader/lib/index.js??vue-loader-options!./ClaimCard.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./ClaimCard.vue?vue&type=template&id=56af6af5&\"\nimport script from \"./ClaimCard.vue?vue&type=script&lang=js&\"\nexport * from \"./ClaimCard.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/_vue-loader@15.7.0@vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar BN = require(\"bn.js\");\n/**\n * RLP Encoding based on: https://github.com/ethereum/wiki/wiki/%5BEnglish%5D-RLP\n * This function takes in a data, convert it to buffer if not, and a length for recursion\n * @param input - will be converted to buffer\n * @returns returns buffer of encoded data\n **/\nfunction encode(input) {\n    if (Array.isArray(input)) {\n        var output = [];\n        for (var i = 0; i < input.length; i++) {\n            output.push(encode(input[i]));\n        }\n        var buf = Buffer.concat(output);\n        return Buffer.concat([encodeLength(buf.length, 192), buf]);\n    }\n    else {\n        var inputBuf = toBuffer(input);\n        return inputBuf.length === 1 && inputBuf[0] < 128\n            ? inputBuf\n            : Buffer.concat([encodeLength(inputBuf.length, 128), inputBuf]);\n    }\n}\nexports.encode = encode;\n/**\n * Parse integers. Check if there is no leading zeros\n * @param v The value to parse\n * @param base The base to parse the integer into\n */\nfunction safeParseInt(v, base) {\n    if (v.slice(0, 2) === '00') {\n        throw new Error('invalid RLP: extra zeros');\n    }\n    return parseInt(v, base);\n}\nfunction encodeLength(len, offset) {\n    if (len < 56) {\n        return Buffer.from([len + offset]);\n    }\n    else {\n        var hexLength = intToHex(len);\n        var lLength = hexLength.length / 2;\n        var firstByte = intToHex(offset + 55 + lLength);\n        return Buffer.from(firstByte + hexLength, 'hex');\n    }\n}\nfunction decode(input, stream) {\n    if (stream === void 0) { stream = false; }\n    if (!input || input.length === 0) {\n        return Buffer.from([]);\n    }\n    var inputBuffer = toBuffer(input);\n    var decoded = _decode(inputBuffer);\n    if (stream) {\n        return decoded;\n    }\n    if (decoded.remainder.length !== 0) {\n        throw new Error('invalid remainder');\n    }\n    return decoded.data;\n}\nexports.decode = decode;\n/**\n * Get the length of the RLP input\n * @param input\n * @returns The length of the input or an empty Buffer if no input\n */\nfunction getLength(input) {\n    if (!input || input.length === 0) {\n        return Buffer.from([]);\n    }\n    var inputBuffer = toBuffer(input);\n    var firstByte = inputBuffer[0];\n    if (firstByte <= 0x7f) {\n        return inputBuffer.length;\n    }\n    else if (firstByte <= 0xb7) {\n        return firstByte - 0x7f;\n    }\n    else if (firstByte <= 0xbf) {\n        return firstByte - 0xb6;\n    }\n    else if (firstByte <= 0xf7) {\n        // a list between  0-55 bytes long\n        return firstByte - 0xbf;\n    }\n    else {\n        // a list  over 55 bytes long\n        var llength = firstByte - 0xf6;\n        var length = safeParseInt(inputBuffer.slice(1, llength).toString('hex'), 16);\n        return llength + length;\n    }\n}\nexports.getLength = getLength;\n/** Decode an input with RLP */\nfunction _decode(input) {\n    var length, llength, data, innerRemainder, d;\n    var decoded = [];\n    var firstByte = input[0];\n    if (firstByte <= 0x7f) {\n        // a single byte whose value is in the [0x00, 0x7f] range, that byte is its own RLP encoding.\n        return {\n            data: input.slice(0, 1),\n            remainder: input.slice(1),\n        };\n    }\n    else if (firstByte <= 0xb7) {\n        // string is 0-55 bytes long. A single byte with value 0x80 plus the length of the string followed by the string\n        // The range of the first byte is [0x80, 0xb7]\n        length = firstByte - 0x7f;\n        // set 0x80 null to 0\n        if (firstByte === 0x80) {\n            data = Buffer.from([]);\n        }\n        else {\n            data = input.slice(1, length);\n        }\n        if (length === 2 && data[0] < 0x80) {\n            throw new Error('invalid rlp encoding: byte must be less 0x80');\n        }\n        return {\n            data: data,\n            remainder: input.slice(length),\n        };\n    }\n    else if (firstByte <= 0xbf) {\n        llength = firstByte - 0xb6;\n        length = safeParseInt(input.slice(1, llength).toString('hex'), 16);\n        data = input.slice(llength, length + llength);\n        if (data.length < length) {\n            throw new Error('invalid RLP');\n        }\n        return {\n            data: data,\n            remainder: input.slice(length + llength),\n        };\n    }\n    else if (firstByte <= 0xf7) {\n        // a list between  0-55 bytes long\n        length = firstByte - 0xbf;\n        innerRemainder = input.slice(1, length);\n        while (innerRemainder.length) {\n            d = _decode(innerRemainder);\n            decoded.push(d.data);\n            innerRemainder = d.remainder;\n        }\n        return {\n            data: decoded,\n            remainder: input.slice(length),\n        };\n    }\n    else {\n        // a list  over 55 bytes long\n        llength = firstByte - 0xf6;\n        length = safeParseInt(input.slice(1, llength).toString('hex'), 16);\n        var totalLength = llength + length;\n        if (totalLength > input.length) {\n            throw new Error('invalid rlp: total length is larger than the data');\n        }\n        innerRemainder = input.slice(llength, totalLength);\n        if (innerRemainder.length === 0) {\n            throw new Error('invalid rlp, List has a invalid length');\n        }\n        while (innerRemainder.length) {\n            d = _decode(innerRemainder);\n            decoded.push(d.data);\n            innerRemainder = d.remainder;\n        }\n        return {\n            data: decoded,\n            remainder: input.slice(totalLength),\n        };\n    }\n}\n/** Check if a string is prefixed by 0x */\nfunction isHexPrefixed(str) {\n    return str.slice(0, 2) === '0x';\n}\n/** Removes 0x from a given String */\nfunction stripHexPrefix(str) {\n    if (typeof str !== 'string') {\n        return str;\n    }\n    return isHexPrefixed(str) ? str.slice(2) : str;\n}\n/** Transform an integer into its hexadecimal value */\nfunction intToHex(integer) {\n    if (integer < 0) {\n        throw new Error('Invalid integer as argument, must be unsigned!');\n    }\n    var hex = integer.toString(16);\n    return hex.length % 2 ? \"0\" + hex : hex;\n}\n/** Pad a string to be even */\nfunction padToEven(a) {\n    return a.length % 2 ? \"0\" + a : a;\n}\n/** Transform an integer into a Buffer */\nfunction intToBuffer(integer) {\n    var hex = intToHex(integer);\n    return Buffer.from(hex, 'hex');\n}\n/** Transform anything into a Buffer */\nfunction toBuffer(v) {\n    if (!Buffer.isBuffer(v)) {\n        if (typeof v === 'string') {\n            if (isHexPrefixed(v)) {\n                return Buffer.from(padToEven(stripHexPrefix(v)), 'hex');\n            }\n            else {\n                return Buffer.from(v);\n            }\n        }\n        else if (typeof v === 'number') {\n            if (!v) {\n                return Buffer.from([]);\n            }\n            else {\n                return intToBuffer(v);\n            }\n        }\n        else if (v === null || v === undefined) {\n            return Buffer.from([]);\n        }\n        else if (v instanceof Uint8Array) {\n            return Buffer.from(v);\n        }\n        else if (BN.isBN(v)) {\n            // converts a BN to a Buffer\n            return Buffer.from(v.toArray());\n        }\n        else {\n            throw new Error('invalid type');\n        }\n    }\n    return v;\n}\n//# sourceMappingURL=index.js.map","import _Array$isArray from \"../../core-js/array/is-array\";\nexport default function _arrayWithoutHoles(arr) {\n  if (_Array$isArray(arr)) {\n    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  }\n}","import _Array$from from \"../../core-js/array/from\";\nimport _isIterable from \"../../core-js/is-iterable\";\nexport default function _iterableToArray(iter) {\n  if (_isIterable(Object(iter)) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return _Array$from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n}","import arrayWithoutHoles from \"./arrayWithoutHoles\";\nimport iterableToArray from \"./iterableToArray\";\nimport nonIterableSpread from \"./nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || nonIterableSpread();\n}","var toInteger = require('./_to-integer');\nvar defined = require('./_defined');\n// true  -> String#at\n// false -> String#codePointAt\nmodule.exports = function (TO_STRING) {\n  return function (that, pos) {\n    var s = String(defined(that));\n    var i = toInteger(pos);\n    var l = s.length;\n    var a, b;\n    if (i < 0 || i >= l) return TO_STRING ? '' : undefined;\n    a = s.charCodeAt(i);\n    return a < 0xd800 || a > 0xdbff || i + 1 === l || (b = s.charCodeAt(i + 1)) < 0xdc00 || b > 0xdfff\n      ? TO_STRING ? s.charAt(i) : a\n      : TO_STRING ? s.slice(i, i + 2) : (a - 0xd800 << 10) + (b - 0xdc00) + 0x10000;\n  };\n};\n","var anObject = require('./_an-object');\nvar get = require('./core.get-iterator-method');\nmodule.exports = require('./_core').getIterator = function (it) {\n  var iterFn = get(it);\n  if (typeof iterFn != 'function') throw TypeError(it + ' is not iterable!');\n  return anObject(iterFn.call(it));\n};\n","module.exports = function (it, Constructor, name, forbiddenField) {\n  if (!(it instanceof Constructor) || (forbiddenField !== undefined && forbiddenField in it)) {\n    throw TypeError(name + ': incorrect invocation!');\n  } return it;\n};\n","module.exports = function (exec) {\n  try {\n    return { e: false, v: exec() };\n  } catch (e) {\n    return { e: true, v: e };\n  }\n};\n","var anObject = require('./_an-object');\nvar isObject = require('./_is-object');\nvar newPromiseCapability = require('./_new-promise-capability');\n\nmodule.exports = function (C, x) {\n  anObject(C);\n  if (isObject(x) && x.constructor === C) return x;\n  var promiseCapability = newPromiseCapability.f(C);\n  var resolve = promiseCapability.resolve;\n  resolve(x);\n  return promiseCapability.promise;\n};\n","module.exports = require(\"core-js/library/fn/array/is-array\");","import mod from \"-!../../node_modules/_mini-css-extract-plugin@0.5.0@mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/_css-loader@1.0.1@css-loader/index.js??ref--6-oneOf-1-1!../../node_modules/_vue-loader@15.7.0@vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/_postcss-loader@3.0.0@postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js??ref--0-0!../../node_modules/_vue-loader@15.7.0@vue-loader/lib/index.js??vue-loader-options!./Claim.vue?vue&type=style&index=0&id=044f5224&scoped=true&lang=css&\"; export default mod; export * from \"-!../../node_modules/_mini-css-extract-plugin@0.5.0@mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/_css-loader@1.0.1@css-loader/index.js??ref--6-oneOf-1-1!../../node_modules/_vue-loader@15.7.0@vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/_postcss-loader@3.0.0@postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js??ref--0-0!../../node_modules/_vue-loader@15.7.0@vue-loader/lib/index.js??vue-loader-options!./Claim.vue?vue&type=style&index=0&id=044f5224&scoped=true&lang=css&\"","'use strict';\nvar global = require('./_global');\nvar core = require('./_core');\nvar dP = require('./_object-dp');\nvar DESCRIPTORS = require('./_descriptors');\nvar SPECIES = require('./_wks')('species');\n\nmodule.exports = function (KEY) {\n  var C = typeof core[KEY] == 'function' ? core[KEY] : global[KEY];\n  if (DESCRIPTORS && C && !C[SPECIES]) dP.f(C, SPECIES, {\n    configurable: true,\n    get: function () { return this; }\n  });\n};\n","<template>\n  <div class=\"app\">\n    <header class=\"navbar navbar-default\" id=\"header\">\n      <div class=\"container-fluid header\">\n        <div class=\"row\">\n          <div class=\"col-sm-3 col-xs-12 navbar-header header--logo\">\n            <h3><router-link :to=\"{ name: 'home'}\">{{ $t(\"app_name\") }}</router-link></h3>\n          </div>\n\n          <div class=\"col-sm-6 hidden-xs header--thor-info\">\n            <div class=\"header--thor-info--wrap\">\n              <div class=\"header--thor-info--wrap text-center\">\n                <div><strong>{{ $t(\"account_label\") }}: </strong> <span><a :href=\"accountLink\" target=\"_blank\">{{ visitor }}</a></span></div> |\n                <div><strong>{{ $t(\"network\") }}: </strong>{{ network }}</div>\n              </div>\n            </div>\n          </div>\n\n          <div class=\"col-sm-3 col-xs-6 navbar-header locale-select\">\n              <h5><span><a href=\"#\" @click=\"setLocale('en-US')\">English</a> | <a href=\"#\" @click=\"setLocale('zh-CN')\">简体中文</a></span></h5>\n            </div>\n        </div>\n      </div>\n    </header>\n\n    <div class=\"container\">\n      <!-- 输入钱包地址 -->\n      <div v-if=\"showInptModal\" class=\"alert envelope--modal\">\n        <div class=\"envelope--modal--container\">\n          <div class=\"envelope--modal--loading\">\n            <span class=\"animated\">\n              <svg class=\"svg--icon-dog\" version=\"1.1\" x=\"0px\" y=\"0px\" viewBox=\"0 0 100 100\" xml:space=\"preserve\">\n                <circle cx=\"46.2\" cy=\"35\" r=\"3.7\"></circle>\n                <path d=\"M63.7,31.3c-3.1-8.7-11.4-15-21.2-15l-7.5,0c-6.1,0-11.3,3.6-13.7,8.8c-5.2,2.4-8.8,7.6-8.8,13.7v30H20v15h37.5V61.2l7.5,0  c12.4,0,22.5-10.1,22.5-22.5v-7.5H63.7z M65,53.7h-7.5c-4.1,0-7.5,3.4-7.5,7.5v15H27.5v-7.5c8.3,0,15-6.7,15-15v-7.5  c0-2.1-1.7-3.7-3.8-3.7S35,44.2,35,46.3v7.5c0,4.1-3.4,7.5-7.5,7.5l-7.5,0V38.8c0-4.1,3.4-7.5,7.5-7.5c0-4.1,3.4-7.5,7.5-7.5h7.5  c8.3,0,15,6.7,15,15H65h15C80,47,73.3,53.7,65,53.7z\"></path>\n              </svg>\n            </span>\n          </div>\n\n          <div class=\"envelope--modal--details\">\n            <div class=\"container-fluid\">\n              <div class=\"envelope--field\">\n                <h3>Input your address</h3>\n                <h4><span>Please input your wallet address to catch your luck.</span><br></h4>\n                <div class=\"envelope--input\">\n                  <div class=\"input-group\">\n                    <input v-bind:class=\"{'has-error': !isAddress()}\" type=\"text\" placeholder=\"0x\" v-model=\"address\">\n                  </div>\n                </div>\n              </div>\n\n              <div class=\"envelope--create-button--close\"><button :disabled=\"!isAddress()\" @click=\"handleContinue\"><h4>Continue</h4></button></div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <ShareCard :shareLink='shareLink' />\n\n      <RedPacketInfo v-if=\"role=='creator'\" :visitor=\"visitor\" :envelope=\"envelope\" :tokenName=\"tokenName\" />\n      <ClaimCard v-else-if=\"role=='claimer' && envelope.claimed == '0.00' && envelope.status != '2'\" :visitor=\"visitor\" :envelope=\"envelope\" :tokenName=\"tokenName\" />\n      <AfterClaimCard v-else-if=\"role=='claimer' && envelope.claimed != '0.00'\" :envelope=\"envelope\" :tokenName=\"tokenName\" />\n      <RedPacketInfo v-else :visitor=\"visitor\" :envelope=\"envelope\" :tokenName=\"tokenName\" />\n      \n      <CertModal v-show=\"showCertModal\" />\n    </div>\n  </div>\n  \n</template>\n\n\n<script>\nimport Utils from '../utils'\nimport BN from 'bignumber.js'\nimport CertModal from '@/components/CertModal.vue'\nimport RedPacketInfo from \"@/components/RedPacketInfo.vue\";\nimport ClaimCard from \"@/components/ClaimCard.vue\";\nimport AfterClaimCard from \"@/components/AfterClaimCard.vue\";\nimport ShareCard from '@/components/ShareCard.vue'\n\nimport { cry, abi, RLP } from 'thor-devkit'\n\nconst roles = {creator: 'creator', 'claimer': 'claimer'}\n\nexport default {\n  name: 'Claim',\n  components: {\n    CertModal,\n    ShareCard,\n    RedPacketInfo,\n    ClaimCard,\n    AfterClaimCard,\n  },\n  data() {\n    return {\n      network: 'unkonwn',\n      address: '',\n      visitor: '',\n      shareLink: window.location.href,\n      accountLink: '',\n      role: '',\n      isCreator: false,\n      hasConnex: false,\n      showInptModal: true,\n      showCertModal: false,\n      tokenName: 'VET',\n      envelope: {},\n    }\n  },\n  created() {\n    this.network = this.$config.network\n    let { packet_id, code } = this.$route.params\n    this.$set(this.envelope, 'id', packet_id)\n\n    let spk\n    try { spk = atob(code).slice(2) }\n    catch(err) {\n      window.location.href = '#/404'\n      return\n    }\n\n    let address = localStorage.getItem(`claimed:${this.network}_${packet_id}`)\n    if (address && Utils.isAddress(address)) {\n      this.address = address\n    }\n    if (window.connex) {\n      this.hasConnex = true\n      this.showInptModal = false\n      this.showCertModal = true\n    }\n\n    this.getRevealInfo().then(() => {\n      let pubKey = cry.secp256k1.derivePublicKey(Buffer.from(spk, 'hex'))\n      let addr = '0x' + cry.publicKeyToAddress(pubKey).toString('hex')\n\n      if (this.envelope.secretSigner.toLowerCase() != addr) {\n        window.location.href = '#/404'\n        return\n      }\n      if (!window.connex) {\n        this.handleContinue()\n        return\n      }\n      \n      const signingService = connex.vendor.sign(\"cert\")\n\n      // Generate a random string and request the identification\n      signingService\n      .request({\n          purpose: \"identification\",\n          payload: {\n            type: \"text\",\n            content: \"Confirm that you would like this site to access your account\"\n          }\n      })\n      .then(result => {\n          this.showCertModal = false\n          this.setAccount(result.annex.signer)\n\n          return this.getPacketInfo().then(() => {\n            return this.setUserRole()\n          })\n      })\n    })\n  },\n  methods: {\n    setLocale(lang) {\n      localStorage.setItem(\"local\", lang)\n      this.$i18n.locale = lang\n    },\n    isAddress() {\n      return Utils.isAddress(this.address);\n    },\n    setAccount(address) {\n      this.visitor = address\n      this.accountLink = this.$config.accountBaseUrl + '/accounts' + this.visitor\n    },\n    handleContinue() {\n      if (this.isAddress()) {\n        this.showInptModal = false\n        this.setAccount(this.address)\n\n        this.getPacketInfo().then(() => {\n          return this.setUserRole()\n        })\n      }\n    },\n    setUserRole() {\n      this.role = this.envelope.creator.toLowerCase() == this.visitor.toLowerCase() ? 'creator' : 'claimer'\n    },\n    getPacketInfo() {\n      let vm = this\n\n      let getEnvelopeInfoABI = {\"constant\":true,\"inputs\":[{\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"getEnvelopeInfo\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"},{\"name\":\"\",\"type\":\"uint8\"},{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"string\"},{\"name\":\"\",\"type\":\"uint64\"},{\"name\":\"\",\"type\":\"string\"},{\"name\":\"\",\"type\":\"uint64\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}\n      let getClaimInfoABI = {\"constant\":true,\"inputs\":[{\"name\":\"_id\",\"type\":\"uint256\"},{\"name\":\"_claimer\",\"type\":\"address\"}],\"name\":\"getClaimInfo\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}\n\n      return Promise.all([\n        this.callMethod(getEnvelopeInfoABI, [this.envelope.id]),\n        this.callMethod(getClaimInfoABI, [this.envelope.id, vm.visitor]),\n      ])\n      .then(([info, claiminfo]) => {\n        let ts = parseInt((+new Date()) / 1000)\n\n        this.$set(vm.envelope, 'type', info[0])\n        this.$set(vm.envelope, 'status', info[1])\n        this.$set(vm.envelope, 'creator', info[2])\n        this.$set(vm.envelope, 'nickname', info[3])\n        this.$set(vm.envelope, 'expireAt', info[4])\n        this.$set(vm.envelope, 'duration', parseInt(info[4]) - ts)\n        this.$set(vm.envelope, 'message', '')\n        this.$set(vm.envelope, 'messageLink', info[5])\n        this.$set(vm.envelope, 'claimed', (new BN(claiminfo[0])).div(10**18).toFixed(2))\n\n        vm.tokenName = vm.getTokenNameByAddress(vm.envelope.tokenAddress)\n      })\n    },\n    getRevealInfo() {\n      let getEnvelopeRevealABI = {\"constant\":true,\"inputs\":[{\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"getEnvelopeReveal\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"uint64\"},{\"name\":\"\",\"type\":\"uint64\"},{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}\n\n      return this.callMethod(getEnvelopeRevealABI, [this.envelope.id]).then(reveal => {\n\n        this.$set(this.envelope, 'tokenAddress', reveal[0])\n        this.$set(this.envelope, 'claimers', parseInt(reveal[1]))\n        this.$set(this.envelope, 'totalClaimers', parseInt(reveal[2]))\n        this.$set(this.envelope, 'initialBalance', (new BN(reveal[3])).div(10**18).toFixed(2))\n        this.$set(this.envelope, 'remaining', (new BN(reveal[4])).div(10**18).toFixed(2))\n        this.$set(this.envelope, 'secretSigner', reveal[5])\n      })\n    },\n    getTokenNameByAddress(tokenAddress) {\n      let tokenName = 'VET'\n      if (tokenAddress == '0x0000000000000000000000000000000000000000') {\n        return tokenName\n      }\n      Object.keys(this.$config.tokens).forEach(name => {\n        if (this.$config.tokens[name].toLowerCase() == tokenAddress.toLowerCase()) {\n          tokenName = name\n          return\n        }\n      })\n      return tokenName\n    },\n    callMethod(_abi, _values) {\n      let fn = new abi.Function(_abi)\n      let data = fn.encode(..._values)\n\n      let payload = { data: data, value: '0x0' }\n      if (this.visitor) {\n        payload.caller = this.visitor\n      }\n\n      return fetch(this.$config.providerUrl + `/accounts/${this.$config.contract}`, {\n        body: JSON.stringify(payload),\n        headers: {'content-type': 'application/json'},\n        method: 'POST',\n      })\n      .then(response => response.json())\n      .then(body => {\n        let decoded = abi.decodeParameters(_abi.outputs, body.data)\n        return decoded\n      })\n    }\n  }\n};\n</script>\n\n\n<style scoped>\n\n.locale-select {\n  padding-top: 1em;\n}\n.locale-select h5 {\n  padding: 0;\n}\n.locale-select a {\n  color: #fff;\n}\n</style>"],"sourceRoot":""}